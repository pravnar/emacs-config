;; -*- coding: utf-8 -*-
(("My Biased Coin" "My take on computer science -- <br>
algorithms, networking, information theory -- <br>
and related items." nil (21326 44204 346370 202000) feed 0 nil nil ((id nil "tag:blogger.com,1999:blog-8890204") (updated nil "2014-04-03T18:04:48.093-04:00") (category ((term . "conferences"))) (category ((term . "research"))) (category ((term . "society"))) (category ((term . "algorithms"))) (category ((term . "administration"))) (category ((term . "teaching"))) (category ((term . "Harvard"))) (category ((term . "papers"))) (category ((term . "graduate students"))) (category ((term . "funding"))) (category ((term . "talks"))) (category ((term . "blogs"))) (category ((term . "codes"))) (category ((term . "jobs"))) (category ((term . "reviews"))) (category ((term . "personal"))) (category ((term . "travel"))) (category ((term . "undergraduate students"))) (category ((term . "books"))) (category ((term . "open problems"))) (category ((term . "PCs"))) (category ((term . "consulting"))) (category ((term . "randomness"))) (category ((term . "CCC"))) (category ((term . "blog book project"))) (category ((term . "research labs"))) (category ((term . "ISIT"))) (category ((term . "tenure"))) (category ((term . "comments"))) (category ((term . "recommendations"))) (category ((term . "outreach"))) (category ((term . "students"))) (title ((type . "text")) "My Biased Coin") (subtitle ((type . "html")) "My take on computer science -- <br> 
algorithms, networking, information theory -- <br> 
and related items.") (link ((rel . "http://schemas.google.com/g/2005#feed") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/posts/default"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/"))) (link ((rel . "hub") (href . "http://pubsubhubbub.appspot.com/"))) (link ((rel . "next") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default?start-index=26&max-results=25"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/06738274256402616703") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (generator ((version . "7.00") (uri . "http://www.blogger.com")) "Blogger") (openSearch:totalResults nil "742") (openSearch:startIndex nil "1") (openSearch:itemsPerPage nil "25") (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-8591947219170924116") (published nil "2014-04-03T18:04:00.003-04:00") (updated nil "2014-04-03T18:04:48.108-04:00") (title ((type . "text")) "Postdocs in Copenhagen") (content ((type . "html")) "I apologize for the short notice, but my occasional co-author Rasmus Pagh is looking for postdocs for a big data project he recently had funded, with an application deadline on April 14th.&nbsp;<br /><br />For more information, you can see <a href=\"https://delta.hr-manager.net/ApplicationInit.aspx?cid=119&amp;ProjectId=169635&amp;departmentId=3439&amp;uiculture=en&amp;MediaId=1282\">this page</a>, which starts with:<br /><br /><span id=\"ctl00_ctl00_CustomerTemplate_Header\"><span class=\"Body\">The  Scalable Similarity Search (SSS) project led by Professor Rasmus Pagh is  seeking 3 post-docs with a strong background in algorithms theory,  combinatorics, or statistics. The project is funded by the European  Research Council (ERC), runs in the years 2014-19, and will include a  total of 3 PhD and 3 post-doc positions. The aim of the project is to  improve theory and practice of algorithms for high-dimensional  similarity search on big data, and to extend similarity search  algorithms to work in settings where data is distributed (using a  communication complexity perspective) or uncertain (using a statistical  perspective). A post-doc position may include a long-term visit to a  project partner (at Berkeley, Harvard, MIT, Stanford, or Tsinghua) if  all parties find the visit beneficial.</span></span><br /><br /><span id=\"ctl00_ctl00_CustomerTemplate_Header\"><span class=\"Body\">Or you can see <a href=\"http://video.itu.dk/video/9592769/the-dawn-of-big-data\">this nice video</a> Rasmus recently put together. &nbsp;&nbsp;</span></span><br /><span id=\"ctl00_ctl00_CustomerTemplate_Header\"><span class=\"Body\"><br /></span></span><span id=\"ctl00_ctl00_CustomerTemplate_Header\"><span class=\"Body\">And yes, I'm self-interested in this matter, in that as someone who works with Rasmus, the potential \"long-term visit\" to Harvard described above would involve me if it worked out.&nbsp; Also, Copenhagen is a wonderful place.&nbsp; </span></span>") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/8591947219170924116/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=8591947219170924116") (title . "0 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8591947219170924116"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8591947219170924116"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/04/postdocs-in-copenhagen.html") (title . "Postdocs in Copenhagen"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "0")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-1637310346683079839") (published nil "2014-03-19T15:18:00.001-04:00") (updated nil "2014-03-20T07:38:38.683-04:00") (title ((type . "text")) "Hashing Summer School in Copenhagen") (content ((type . "html")) "Of the many, many interesting things happening in Copenhagen this summer (SEA, SWAT, ICALP) we'd like to add one more:&nbsp; a Hashing Summer School at the University of Copenhagen.&nbsp; <a href=\"http://www.diku.dk/summer-school-2014/\">Here's the web site.</a>&nbsp; This was the brainchild of Mikkel Thorup, who knows a thing or two or three about hashing, and is co-organized by me and Rasmus Pagh.&nbsp; We've got a great set of speakers, and we expect a mix of lectures, problem-solving exercises, a poster session, and other such fun and learning.&nbsp; The registration deadline is May 15th;&nbsp; check the web site for details.&nbsp; If you're coming out to Copenhagen for other activities, or just want a good reason to visit the beautiful city, take a look.&nbsp; I hope to see you there.<br /><br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/1637310346683079839/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=1637310346683079839") (title . "1 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1637310346683079839"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1637310346683079839"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/03/hashing-summer-school-in-copenhagen.html") (title . "Hashing Summer School in Copenhagen"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "1")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-1844672056289225060") (published nil "2014-03-18T11:46:00.001-04:00") (updated nil "2014-03-18T11:46:13.590-04:00") (title ((type . "text")) "Leslie Lamport wins Turing Awards") (content ((type . "html")) "In another sign that these Turing Award committees really know what they're doing,<a href=\"http://www.acm.org/press-room/news-releases/2014/turing-award-13\"> Leslie Lamport has won the Turing Award</a>.&nbsp; There's a very nice writeup including the <a href=\"http://blogs.technet.com/b/microsoft_blog/archive/2014/03/17/microsoft-s-leslie-lamport-wins-the-turing-award-the-nobel-prize-in-computing.aspx\"> history of his work</a> up on&nbsp;an official Microsoft blog post.<br /><br />While I know there are arguably many people deserving of a Turing Award, Leslie Lamport&nbsp;is an amazingly obvious and&nbsp;absolutely fantastic&nbsp;choice.&nbsp; His body of work is truly inspiring, and&nbsp;as the above links show, his work has had a huge effect on&nbsp;us all.&nbsp; &nbsp; ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/1844672056289225060/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=1844672056289225060") (title . "2 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1844672056289225060"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1844672056289225060"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/03/leslie-lamport-wins-turing-awards.html") (title . "Leslie Lamport wins Turing Awards"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "2")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-1547061377926690588") (published nil "2014-03-17T16:39:00.000-04:00") (updated nil "2014-03-17T16:39:03.692-04:00") (title ((type . "text")) "ICERM (Brown) Workshop on Stochastic Graph Models") (content ((type . "html")) "I'll be commuting throughout the week to the <a href=\"http://icerm.brown.edu/sp-s14-w2/\">ICERM Workshop on Stochastic Graph Models</a>.&nbsp; ICERM is the Institute for Computational and Experimental Research in Mathematics, a new-ish place associated with and walking distance from Brown University, and <a href=\"https://cs.brown.edu/people/eli/\">Eli Upfal</a> (among others) is making sure that it's closely connected with Brown Computer Science as well as other mathematical disciplines.&nbsp; The building is very nice and new, with a great view of Providence.&nbsp; It's also very close to the freeway.&nbsp; (Driving to the ICERM building is not much more time than driving to MSR New England from my house, even though it's more than three times the miles...)<br /><br />We've already had great talks today by several great people (Leslie Goldberg, Artur Czumaj, Susanne Albers, Flavio Chierichetti, and Gopal Pandurangan), and there's a fantastic schedule for the rest of the week.&nbsp; If you're in the neighborhood you should come on by.&nbsp; Leslie's talks on evolutionary dynamics on graphs and Flavio's on trace complexity of network reconstruction were both very close to long-time interests of mine, though it feels like it's been a while since I worked on such \"pure\" (and very pleasant) random process problems.&nbsp; I can feel the talks drawing me in...<br /><br />By the way, has anyone figured out the complexity of the <a href=\"http://gabrielecirulli.github.io/2048/\">2048 game</a> yet?&nbsp; Assuming that the game uses some stochastic model at each step, I wonder what you can say about the probability of getting to 2048 under some model of play.&nbsp; That's a stochastic model in need of analysis.&nbsp; <br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/1547061377926690588/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=1547061377926690588") (title . "1 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1547061377926690588"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1547061377926690588"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/03/icerm-brown-workshop-on-stochastic.html") (title . "ICERM (Brown) Workshop on Stochastic Graph Models"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "1")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-8965768034424409818") (published nil "2014-03-14T11:57:00.003-04:00") (updated nil "2014-03-14T11:57:31.690-04:00") (title ((type . "text")) "Those who Hire vs.") (content ((type . "html")) "If you haven't yet, I encourage you to read the <a href=\"http://www.insidehighered.com/news/2014/03/13/lost-faculty-job-offer-raises-questions-about-negotiation-strategy\">Inside Higher Ed article</a> about a department that, when a candidate they had made an offer to attempted to negotiate the terms of that offer, then rescinded that offer.<br /><br />Let me be clear up front:&nbsp; I'm on the side that finds the department's behavior reprehensible and inexcusable.&nbsp; (As is often the case, I should acknowledge that I have only the limited information available.)&nbsp; I admit I view this in the larger picture of the current state of employer-employee relations, where I think the scale has tilted too far in favor of the employer side.&nbsp; Others have noted that there seems to be a prevailing attitude that current employers, by and large, feel employees should be grateful that they're having the opportunity to work for them, regardless of conditions.&nbsp; For a recent example article expressing this, you can read this New York Times article <a href=\"http://www.theatlantic.com/business/archive/2014/03/my-life-as-a-retail-worker-nasty-brutish-and-poor/284332/\">on \"My Life as a Retail Worker\"</a>.&nbsp; While tech workers may think they're in a happy state where employers need them so much that they have to treat them well -- something that, generally speaking, clearly has some truth to it -- I worry on the tech side that has made people complacent.&nbsp; The <a href=\"http://www.motherjones.com/politics/2014/02/google-apple-class-action-poaching-steve-jobs-wage-theft\">ongoing story about how Google and Apple (as well as other tech companies) had a secret agreement</a> not to recruit each other's employees demonstrates that, even in tech, the utility of workers and their employers may not always naturally align. &nbsp;<br /><br />Was the candidate in question asking for too much?&nbsp; I think the candidate was negotiating;&nbsp; she makes clear that she was not expecting to get everything asked for, but wanted to see what was possible.&nbsp; The department chair (or whoever was in charge) should have explained what was possible from their standpoint, and set a deadline for the candidate to decide.&nbsp; To rescind the job offer smacks of discriminatory practices -- not (necessarily) discriminating against women (an issue that has been raised in this context, since maternity leave was part of the request) -- but discriminating against employees that might think to advocate for themselves.&nbsp; Many employers seem to call employees that advocate for themselves \"troublemakers\";&nbsp; is that how we're to interpret the mindset behind the decision here?&nbsp; That's disturbing -- as a general trend in academic life and specifically with this university's behavior.&nbsp; I'd like to think people who self-advocate are desirable for tenure-track positions, not the opposite.&nbsp; <br /><br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/8965768034424409818/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=8965768034424409818") (title . "10 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8965768034424409818"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8965768034424409818"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/03/those-who-hire-vs.html") (title . "Those who Hire vs."))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "10")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-5587974123493406352") (published nil "2014-01-16T23:36:00.000-05:00") (updated nil "2014-01-16T23:36:20.372-05:00") (title ((type . "text")) "Passing of the Professor") (content ((type . "html")) "Sadly, \"The Professor\", Russell Johnson, <a href=\"http://tvline.com/2014/01/16/russell-johnson-gilligans-island-professor-dead-dies-at-89/#more-486282\">has passed away</a>.&nbsp; <br /><br />I enjoyed Gilligan's Island as a kid.&nbsp; I can't help but think that his portrayal deeply affected people's perception of scientists, subconsciously or consciously, for better or worse, for a generation.&nbsp;<br /><br />Some related links.<br /><a href=\"http://www.improbable.com/2014/01/16/farewell-beloved-professor-of-gilligans-island/\">Improbable research</a>.&nbsp; <br /><a href=\"http://tvtropes.org/pmwiki/pmwiki.php/Main/TheProfessor\">TV Tropes (the Professor).</a><br /><br />Feel free to add more in comments.<br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/5587974123493406352/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=5587974123493406352") (title . "3 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/5587974123493406352"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/5587974123493406352"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/01/passing-of-professor.html") (title . "Passing of the Professor"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "3")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-7288798722272521929") (published nil "2014-01-14T09:27:00.004-05:00") (updated nil "2014-01-14T09:27:41.553-05:00") (title ((type . "text")) "Andreessen Tweets") (content ((type . "html")) "My brother pointed me to <a href=\"http://www.strictlyvc.com/2014/01/12/origins-netscape-tweeted-marc-andreessen/\">this article</a> on a great exchange of tweets about the origins of Netscape.&nbsp;<br /><br />The two highlights, for me at least.&nbsp; First, Andreessen expressed a philosophy that I believe in, but I don't think most university IP departments do:&nbsp; in computer tech, the best strategy is for the university to let professors/students/other employees run with their entrpreneurial plans rather than attempt to maximize the university's short-term or nominal value extracted.&nbsp; He tweeted about how the University of Illinois lost out on the browser/Netscape process, and tweets:<br /><br /><blockquote class=\"tr_bq\">History of Stanford suggests best approach extreme laissez faire-optimize for long-term philanthropy vs short-term gain.</blockquote>and<br /><blockquote class=\"tr_bq\">Many billions of dollars of gifts from grateful alumni far outweigh commercial licensing or patent arrangements in long run.&nbsp; </blockquote>I agree with the sentiment.&nbsp; An issue is that this approach may not be best for some situations -- drug development at universities, perhaps (I don't know how that works, but I've heard it's \"different\" from an IP standpoint) -- although maybe even there a more hands-off approach from overzealous university lawyers would be best in the long run.&nbsp; (Maybe I'm too optimistic -- after all, I suggested <a href=\"http://mybiasedcoin.blogspot.com/2007/09/argument-for-tuition-free-harvard.html\">Harvard should be tuition-free</a> and could still come out ahead.)<br /><br />The other more amusing highlight is Andreessen notes that the Mosiac project applied for more NSF funding and was rejected, which pushed them to start a company.&nbsp; Which, he suggests, was probably the right decision for the NSF.&nbsp; Looking at the outcomes, there's a good argument.&nbsp; Something for me to keep in mind the next time a rejection comes -- even Marc Andreessen had proposals rejected by the NSF, and he ended up doing OK.&nbsp; <br /><br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/7288798722272521929/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=7288798722272521929") (title . "1 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/7288798722272521929"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/7288798722272521929"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/01/andreessen-tweets.html") (title . "Andreessen Tweets"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "1")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-4755187485056025188") (published nil "2014-01-06T12:42:00.001-05:00") (updated nil "2014-01-06T12:42:35.239-05:00") (title ((type . "text")) "Boston Magazine Piece on Aaron Swartz") (content ((type . "html")) "If you haven't seen it, there's <a href=\"http://www.bostonmagazine.com/news/article/2014/01/02/bob-swartz-losing-aaron/\">a well-written piece on Bob Swartz</a>, father of Aaron Swartz, in Boston Magazine, covering MITs reaction to Aaron Swartz's case.<br /><br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/4755187485056025188/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=4755187485056025188") (title . "0 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4755187485056025188"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4755187485056025188"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/01/boston-magazine-piece-on-aaron-swartz.html") (title . "Boston Magazine Piece on Aaron Swartz"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "0")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-7790420513149473322") (published nil "2014-01-05T15:38:00.003-05:00") (updated nil "2014-01-05T15:38:46.029-05:00") (title ((type . "text")) "The PhD - Tenure - Jobs Argument, Already Started for 2014") (content ((type . "html")) "'Tis the season when graduate applications are being decided as well as the job interview process starting again, and just in time for the new year, your regularly scheduled inflammatory article entitled, \"<a href=\"http://www.bloomberg.com/news/2014-01-03/can-t-get-tenure-then-get-a-real-job.html\">Can't Get Tenure? Then Get a Real Job</a>\" up at Bloomberg. &nbsp;The point of the article seems to be that the tenure model follows the age-old \"tournament model\" of employment, with a very few plum positions at the top, and lots of people scrambling for them -- and, along the way, essentially turning themselves into free labor for existing tenured professors, as well as (in most cases) unemployable dried out husks by their early 30's -- and that's bad. &nbsp;The only solution suggested seems to be to cut Ph.D. production, and there are no incentives to make that happen. &nbsp;(I can only encourage you to avoid reading the comments, where somehow this becomes a political issue, with \"liberals\" being to blame for... seemingly everything, I guess, but this in particular.) <br /><br />I'm always happy to admit that computer science seems to be a special case; &nbsp;industry takes many of our PhDs. &nbsp;However, without trying to dissect the article -- which is field agnostic -- I think it's healthy for computer science to regularly look at itself, and determine whether it's doing the right things. &nbsp;Here's my take on what those are, at the individual (faculty) level:<br /><br />1) &nbsp;Be honest with undergraduates. &nbsp;If you're a professor talking to an undergrad thinking about grad school, you should point out that you're the success story, not the average story. &nbsp;Point them to the <a href=\"http://cra.org/resources/taulbee/\">Taulbee survey</a> or other figures. &nbsp;Have them work out the math on potential opportunity costs. &nbsp;Whether you're positive or negative on them going to graduate school is up to you, of course, but either way you should be giving clear, factual information as well as advice.<br />2) &nbsp;Be honest with your graduate students. &nbsp;If they aren't performing, let them know they need to get better (or move on). &nbsp;(It's painful, but better for them in the long run.) &nbsp;Be sure the latest \"time-to-academic-job\" timeline is on their radar -- how many years of postdocs is becoming the norm? &nbsp;Make sure they know what skills they need to work on besides research skills -- speaking, writing, organizing, managing. <br />3) &nbsp;Controversial(?): &nbsp;encourage breadth for your students. &nbsp;It seems to me that since I was a student there's much more pressure to go deep -- to show in your PhD that you are the expert on your research area, even if that research area becomes narrow. &nbsp;The message seem to be don't waste time on classes, projects, or learning that fall outside your clear research path. &nbsp;I'm torn in advising the other direction, because I think the way the academic field is progressing, that can be a promising short-term approach if the goal is to get a tenure-track position. &nbsp;But I don't think it's good for developing a long-term career, and I don't think it's the right approach for the significant number of students who end up doing something else. &nbsp;[I'm aware I'm very biased on this issue.] &nbsp; <br /><br />At the field level, I think there are big questions, and I'm not sure how they get answered.<br /><br />1) &nbsp;Are we encouraging too much depth over breadth in our training? &nbsp;(See 3 above.) &nbsp;Is this what we want?<br />2) &nbsp;Are we OK with what seems to be a lengthening pipeline, with postdocs becoming more common (in some areas, but not all, standard) on the academic career path?<br />3) &nbsp;Do we have any sense of goals for how many graduate students go on to careers in industry, entrepreneurship, teaching (e.g., teaching university positions as opposed to research university positions), etc.? &nbsp;If so, do we want to do more to help prepare students for these types of work, which may not mirror exactly what we as professors do? &nbsp;How do we measure success for our graduate students, and how do we tell if we're doing a good job preparing students overall? <br /><br />Plenty to think about for the new year. ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/7790420513149473322/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=7790420513149473322") (title . "3 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/7790420513149473322"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/7790420513149473322"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/01/the-phd-tenure-jobs-argument-already.html") (title . "The PhD - Tenure - Jobs Argument, Already Started for 2014"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "3")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-4152329075424512866") (published nil "2013-12-19T00:37:00.005-05:00") (updated nil "2013-12-19T00:37:48.679-05:00") (title ((type . "text")) "Tracking down the Harvard Non-Bomber") (content ((type . "html")) "This year, (allegedly) a Harvard student performed the modern equivalent of pulling a fire alarm in order to avoid a final exam, in this case by sending an e-mail claiming that there were bombs in several building throughout the campus.&nbsp; (One of many Crimson stories <a href=\"http://www.thecrimson.com/article/2013/12/17/student-charged-bomb-threat/\">here</a>.)&nbsp; <br /><br />I am proud to say that this student, who was apparently a psychology and sociology major or a prospective psychology major (<a href=\"http://www.thecrimson.com/article/2013/12/17/eldo-kim-threat-profile/\">according to Crimson reports</a>), was (allegedly) using TOR and Guerrilla Mail to try to cover his tracks.&nbsp; (See, for example, <a href=\"http://www.nbcnews.com/technology/failing-grade-alleged-harvard-bomb-hoaxer-needed-more-tor-cover-2D11767028\">this article</a>.)&nbsp; I think it shows how Harvard has made it as a computer science/engineering school, now that even our psych majors know how to set up and use tools like this.&nbsp; Years ago, before CS started taking off at Harvard, you would be hard pressed to come up with a student from a liberal arts major who could use tools like this.&nbsp; It just goes to show how the place has changed for the better.&nbsp; I like to think that, if he was a computer science major, and would have correspondingly more understanding of what tracks he was leaving (hint:&nbsp; don't use your own computer through Harvard's wi-fi when sending a bomb threat...), he might have gotten away with it, or at least been a lot harder to track down.&nbsp;<br /><br />[Just to be clear, this is very tongue-in-cheek;&nbsp; I in no way support or even really want to make light of what this student did, it's utterly reprehensible.&nbsp; And as several colleagues of mine and I have noted, he knew just enough to be dangerous-- mostly, in the end, to himself.<br /><br />Also, I was (again, along with several of my colleagues) 95+% certain right off the bat it was a student trying to escape finals.&nbsp; Besides the timing, the 4 buildings named as where bombs might be hidden included 3 big lecture buildings where exams were taking place... and a freshman dormitory.&nbsp; (In fact, MY freshman dormitory.)&nbsp; It seemed unlikely that the dorm would be on any real bomber's radar, and seemed to me to be a clear signal that one or more students were behind it all.] &nbsp;&nbsp; ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/4152329075424512866/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=4152329075424512866") (title . "0 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4152329075424512866"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4152329075424512866"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/12/tracking-down-harvard-non-bomber.html") (title . "Tracking down the Harvard Non-Bomber"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "0")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-2492310313157427392") (published nil "2013-12-09T15:23:00.006-05:00") (updated nil "2013-12-09T15:23:51.272-05:00") (title ((type . "text")) "Lesson of the Day") (content ((type . "html")) "Saturday I took two of my daughters to see a musical at Harvard.&nbsp; Amazingly, in the small theater, we were in front of a pair of students who seemed intent on talking throughout the performance.&nbsp; (One male, one female;&nbsp; the male did seem to be doing more of the talking.)&nbsp; The volume seemed to increase until by the end of the first act they seemed to be talking at normal conversation level. <br /><br />As soon as the curtain hit I turned and as nicely as I could (which was, probably, still with a snarl) that there were several bars and cafes available in Cambridge if they wanted to talk, but we were here to watch a show.&nbsp; I got several approving nods from around the nearby audience;&nbsp; in fact, about a minute later, an usher for the theater came over and appeared to be telling them to be quiet or get out, so others had clearly complained.<br /><br />To their credit were apologetic and stayed quiet for the second act.&nbsp; I can only hope that I helped teach these students the important lesson that conversing in a theater is a very bad idea -- probably more important that most of what I ever teach in class.&nbsp; (Although how they managed to get this far without absorbing that lesson somewhere is, I admit, beyond me.)&nbsp; My older kids already know that, but they got some useful reinforcement.&nbsp; &nbsp; ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/2492310313157427392/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=2492310313157427392") (title . "2 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/2492310313157427392"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/2492310313157427392"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/12/lesson-of-day.html") (title . "Lesson of the Day"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "2")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-5981682082249747408") (published nil "2013-12-04T19:32:00.002-05:00") (updated nil "2013-12-04T19:32:19.545-05:00") (title ((type . "text")) "Algorithmic Growth (Class Size)") (content ((type . "html")) "Pre-term planning numbers are in for Harvard, and it looks like the undergrad Algorithms and Data Structures class has about 175 people planning to take the course.&nbsp; That's a huge jump again over the last few years (where it's jumped from the 50s to well over 100).&nbsp; I imagine the growth is spurred by our ever-increasing enrollment numbers in the intro classes, as well as the fact that it's being taken over by a younger, dynamic, new faculty member.&nbsp; (Go Jelani Nelson.&nbsp; I can't help but think some number of students were waiting for me to go on sabbatical...)<br /><br />These numbers are usually within plus-minus 10% of the final, though there's higher variance when new instructors take over.&nbsp; If 175 became the steady state class size, it would mean a bit over 10% of the students at Harvard would take Algorithms at some point.&nbsp; I don't think I ever expected that when I started.&nbsp; <br /><br />If we can get the people resources, at some point we'll probably want to start breaking this up.&nbsp; One direction is to make an \"honors\" class that would cover more/harder material more rapidly.&nbsp; (We're thinking of making this an \"honors theory\" course, that would cover both complexity and algorithms -- 2 classes packed into 1.)&nbsp; The Math department here has done this very successfully, separating out the future Putnam winners from other students early on.&nbsp; A benefit is it leaves the remaining students happier as well, as the curve-breakers remove themselves from the regular class.&nbsp; Another possibility is to do an algorithms style class designed for non-majors, that would bring in more people not currently taking algorithms as well as some of those in the current course.&nbsp; There are \"topics\" classes like this -- the Easley/Kleinberg book <a href=\"http://www.amazon.com/gp/product/0521195330/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0521195330&amp;linkCode=as2&amp;tag=michaelmitzen-20\">Networks, Crowds, and Markets: Reasoning About a Highly Connected World</a><img alt=\"\" border=\"0\" height=\"1\" src=\"http://ir-na.amazon-adsystem.com/e/ir?t=michaelmitzen-20&amp;l=as2&amp;o=1&amp;a=0521195330\" style=\"border: none !important; margin: 0px !important;\" width=\"1\" /> is algorithmic and seems to allow an instructor to choose a desired mathematical level from a broad range -- but I don't really know of examples of something more like a standard algorithms/data structures courses designed for a broader audience than for CS majors.&nbsp; I'd be interested in pointers to and anecdotes about experiences in such classes if they exist.&nbsp; ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/5981682082249747408/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=5981682082249747408") (title . "6 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/5981682082249747408"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/5981682082249747408"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/12/algorithmic-growth-class-size.html") (title . "Algorithmic Growth (Class Size)"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "6")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-6768831673388568016") (published nil "2013-11-26T14:25:00.004-05:00") (updated nil "2013-11-26T18:40:24.783-05:00") (title ((type . "text")) "News Worth Reading") (content ((type . "html")) "There's been plenty of interesting stuff popping up in the news, so it's time to collect a bit.<br /><br /><a href=\"http://arstechnica.com/tech-policy/2013/11/newegg-trial-crypto-legend-diffie-takes-the-stand-to-knock-out-patent/\">This article</a> describes a current patent case in cryptography, where apparently Ron Rivest testified (by deposition) and Whitfield Diffie took the stand. &nbsp;While I can't help but wonder if the article has dramatized the proceedings a bit, it does give some idea of what patent trials are like.&nbsp; I found it interesting both legally and technically.&nbsp; Anyone interested in the legal/expert witness side of technical work should find it worthwhile.<br /><br />Update: &nbsp;<a href=\"http://arstechnica.com/tech-policy/2013/11/jury-newegg-infringes-spangenberg-patent-must-pay-2-3-million/\">The case was decided</a>, as Suresh notes. <br /><br />In other legal news worth noting, <a href=\"https://www.eff.org/deeplinks/2013/11/court-upholds-legality-google-books-tremendous-victory-fair-use-and-public\">Google Books was found to be fair use</a>.&nbsp; The decision is online (and available at the link) -- I'd definitely recommend reading it if you're interested in fair use and the legal framework for how fair use is currently (at least of this decision) is understood. &nbsp; &nbsp; <br /><br />Harvard's CS50 course just made the <a href=\"http://www.bostonglobe.com/business/2013/11/26/computer-science-course-breaks-stereotypes-and-fills-halls-harvard/7XAXko7O392DiO1nAhp7dL/story.html\">Boston Globe business section</a>.&nbsp; I'll quote the conclusion from the new boss, David Parkes:&nbsp; “There’s a new willingness among the student body to take risks, to not follow what has been the default path of going into medical school or going into finance,” said David Parkes, Harvard’s dean for computer science. “I think part of it is that students are seeing a new way to contribute to society through computer science”<br /><br /><a href=\"http://neuralnetworksanddeeplearning.com/about.html\">Michael Nielsen put up a chapter</a>&nbsp;of the latest book he's working on, on neural networks.&nbsp; <br /><br />I found myself more interested than I expected when reading the article <a href=\"http://alexandreafonso.wordpress.com/2013/11/21/how-academia-resembles-a-drug-gang/\">How Academia Resembles a Drug Gang</a>.&nbsp; The issue of PhD overproduction is already well known, but this brought in a new dimension for me, with the discussion of \"dualisation\" -- employment systems with an \"insider\" class with unusually high benefits (supposedly, from the article,&nbsp;tenured professors) and a large \"outsider\" class of people trying to get on the inside and supporting their lifestyle (from the article, untenured part-time faculty and PhD students).&nbsp; Probably worth thinking about in terms of trends in our field, but also just generally, I'm now curious about the economics.&nbsp; Dualisation doesn't seem like it would lead to long-term stable systems -- what's the model?<br /><br />I'll have to pay more attention to the news myself these days.&nbsp; I was asked to serve on the <a href=\"http://cacm.acm.org/about-communications/editorial-board/\">Communications of the ACM editorial board</a>, news division, and found myself unable to find a suitable reason to decline.&nbsp; <br /><br />Finally, a&nbsp;question.&nbsp; 'Tis the season to purchase some new machinery.&nbsp; So is retina display&nbsp;for my next laptop&nbsp;a must-have, not worth it, or somewhere in between?&nbsp; I'd appreciate opinions.&nbsp; <br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/6768831673388568016/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=6768831673388568016") (title . "5 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/6768831673388568016"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/6768831673388568016"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/11/news-worth-reading.html") (title . "News Worth Reading"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "5")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-8634188427292206605") (published nil "2013-11-18T13:25:00.001-05:00") (updated nil "2013-11-18T13:25:23.294-05:00") (title ((type . "text")) "Easy Now") (content ((type . "html")) "In the past year or so, I've gotten reviews back on multiple papers with the complaint that the result was too simple.&nbsp; My interpretation of review: sure you might have come up with an efficient data structure that solved an at least seemingly interesting and/or useful problem, but wasn't the underlying math and/or data structure approach \"too easy\"?&nbsp; (The reviews were either from theory conferences or, my interpretation, from theoretically minded reviewers in settings where there might have been a mix on reviewers.)&nbsp; I'll admit, it's a bit disheartening.&nbsp; And I'll also acknowledge that blogging about it probably seems like sour grapes.&nbsp; But here it goes. &nbsp;&nbsp; <br /><br />From my standpoint, easy is a plus, not a minus.&nbsp; I've taken to describing it this way.&nbsp; In computer science we're used to measuring algorithms and data structures in terms of the two basic tradeoff costs -- time and space.&nbsp; The third basic cost -- error -- takes some people a while to get used to.&nbsp; That is, your algorithm can be \"wrong\" (either probabilistically, or in that it gives an approximate answer) in some hopefully well-defined way in order to trade off against time and space needs -- many times you're willing to settle for a good answer instead of the optimal answer if it's much quicker.&nbsp; But there's also a 4th basic tradeoff cost -- programmer time -- that I find the theory community is happy to just ignore.&nbsp; Simple is good, because more people will use simple things, even if they're not the most efficient possible, because often the usual time/space efficiency isn't really the bottleneck.&nbsp; Coding up something that works is.&nbsp; This is why Bloom filters show up in most of my talks (<a href=\"http://mybiasedcoin.blogspot.com/2013/10/mitzenmacher-drinking-game.html\">Suresh, drink!</a>);&nbsp; for me they provide an outstanding example of issues related to the 3rd and 4th tradeoff costs.<br /><br />But I was inspired to go ahead and post something about this because of <a href=\"http://krugman.blogs.nytimes.com/2013/11/18/the-power-of-two-extra-wonkish/?_r=0\">the following from Paul Krugman's blog today</a>.&nbsp; (His title is \"The Power of Two\" -- if that's not a sign, what is?)&nbsp; I figured he says it (everything?) better than I could, though you'll have to substitute CS keywords for economics keywords in the below.&nbsp;&nbsp; <br /><blockquote class=\"tr_bq\">If this strikes you as too easy, and you think that real economics  should involve harder math, well, I feel sorry for you — you just don’t  get what it’s all about. (You’re what Rudi Dornbusch used to call a  “fearful plumber”). And by the way, coming up with a really simple  formulation of what seems at first like a very hard problem can take a  lot of work. It sure did in the case of the MF lecture, where I actually  did start with a really ugly saddle-path thingie until I realized that  formulating the sudden stop the right way would make all of that go  away. <br /> <br />Simple doesn’t mean stupid. Thinking that it does, does.</blockquote>&nbsp;&nbsp; &nbsp;&nbsp; <br /><br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/8634188427292206605/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=8634188427292206605") (title . "20 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8634188427292206605"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8634188427292206605"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/11/easy-now.html") (title . "Easy Now"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "20")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-3501454801690256578") (published nil "2013-10-29T09:32:00.002-04:00") (updated nil "2013-10-29T09:32:10.993-04:00") (title ((type . "text")) "Visiting UC Davis") (content ((type . "html")) "Before returning home last week I spent a day at UC Davis giving a talk.&nbsp; I got the spend the day talking to various people I've collaborated with there (like <a href=\"http://mae.ucdavis.edu/dsouza/\">Raissa D'Souza</a>, <a href=\"http://www.cs.ucdavis.edu/~amenta/\">Nina Amenta</a>, and <a href=\"http://www.ece.ucdavis.edu/~jowens/\">John Owens</a>), and enjoyed getting to see and talk with <a href=\"http://www.cs.ucdavis.edu/~martel/main/\">Charles (Chip) Martel</a>, who when he's not busy as a computer science professor is busy being a world championship bridge player.&nbsp; I spent several nights up late last month watching him play (via bridge's version of an Internet broadcast) online in the world championships in Bali.&nbsp;<br /><br />The big news was that Davis looks to be hiring this year, and one of the areas might be some variation of \"big data\", with theoretical types definitely included that category.&nbsp; Davis is nicely located about an hour's drive north of Berkeley (in reasonable traffic), and enjoys standard California amenities.&nbsp; (The day there was filled with ridiculously nice weather and excellent food.)&nbsp; If you're job searching, you should look for their job announcement. ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/3501454801690256578/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=3501454801690256578") (title . "0 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/3501454801690256578"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/3501454801690256578"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/10/visiting-uc-davis.html") (title . "Visiting UC Davis"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "0")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-886414644476230917") (published nil "2013-10-24T13:26:00.002-04:00") (updated nil "2013-10-24T13:26:21.918-04:00") (title ((type . "text")) "Mitzenmacher Drinking Game?") (content ((type . "html")) "I've been visiting the Simons Institute for one of their workshops the last few days.&nbsp; I got my advisor Alistair Sinclair to give me a tour.&nbsp; I have to say, that's an amazing space they have.&nbsp; A very nice building, and they've set it up wonderfully (lots of light and open working spaces).&nbsp; I can't believe their location on the Berkeley campus.&nbsp;<br /><br />After my talk, someone told me (and now I forget who) that someone (Michael Goodrich?) said that the Mitzenmacher talk drinking game was that you took a drink every time a slide says \"Bloom\" or \"cuckoo\".&nbsp; That would be a dangerous drinking game.&nbsp; (It's funny because it's true.)") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/886414644476230917/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=886414644476230917") (title . "3 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/886414644476230917"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/886414644476230917"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/10/mitzenmacher-drinking-game.html") (title . "Mitzenmacher Drinking Game?"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "3")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-6483332406092853983") (published nil "2013-10-20T10:35:00.003-04:00") (updated nil "2013-10-20T10:35:32.270-04:00") (title ((type . "text")) "NSF Coming Back Online") (content ((type . "html")) "I was impressed how quickly the NSF got Fastlane back online.&nbsp; (I think it was turned on a few hours after the shutdown was ended.)&nbsp; But like many people, I'm awaiting to hear how the missed deadlines (or upcoming deadlines) will be manged.&nbsp; I haven't seen word on that on the web site, but looking online I found <a href=\"http://news.sciencemag.org/funding/2013/10/nsf-asks-scientists-give-it-time-regroup-after-shutdown\">this article</a>.&nbsp; It suggests that \"BFA will establish and publish on the NSF website within one week  agency-wide policies for proposal deadline extensions and other  grant-related actions.\"&nbsp; (I am not sure what the BFA is.)&nbsp; That pretty much matches my expectations.&nbsp; I can imagine it's very difficult catching up after being shut out of your office for two weeks, especially when having to deal with the concerns of hundreds/thousands of scientists who want to find out what's going on.&nbsp; I'm not at all surprised that they have to take several days to figure out what the best way forward is.&nbsp; Heck, it probably will take several days just to catch up with the weeks of e-mail and other paperwork.&nbsp; <br /><br />I think the article is encouraging patience on our part.&nbsp; If you're awaiting word, just check into the NSF web site this week.&nbsp; If you see or hear anything important, try to help spread the word.&nbsp; The NSF has, in my experience, been very reasonable about dealing with things, and I'm sure they're working to figure out a way forward that is effective and fair to the people waiting to turn in proposals or otherwise participate in NSF activities.<br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/6483332406092853983/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=6483332406092853983") (title . "1 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/6483332406092853983"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/6483332406092853983"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/10/nsf-coming-back-online.html") (title . "NSF Coming Back Online"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "1")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-4154998088855496946") (published nil "2013-10-17T12:57:00.001-04:00") (updated nil "2013-10-17T15:13:17.868-04:00") (title ((type . "text")) "Simons Research Fellowships Post") (content ((type . "html")) "Alistair Sinclair asked me to post a note about the Simons Research Fellowships positions at Berkeley.&nbsp; But since that's where Justin Thaler (my now-ex student) ended up, I thought he could put in a few words about his experience to add a personal effect.&nbsp; Justin says...<br /><blockquote class=\"tr_bq\">Having been a Research Fellow at the Simons Institute for a couple of months now,  I cannot speak highly enough about the experience.  <a href=\"https://blogs.princeton.edu/imabandit/2013/09/02/first-week-of-activity-at-the-simons-institute/\">Others</a>   <a href=\"http://mrtz.org/blog/what-should-a-theory-of-big-data-do/\">have</a>    <a href=\"http://geomblog.blogspot.com/2013/09/life-at-simons.html\">already</a>    <a href=\"http://mrtz.org/blog/sparse-recovery/\">given</a>  a sense of how exciting it is  to be here, so I'll just briefly list some of the things I find most striking  about the place. <br /><br />* The atmosphere is surprisingly collaborative, even for a place specifically designed to foster collaboration.<br />* Any time I have a question I can't answer, there is an expert's door I can immediately knock on.<br />* There's a great mix of junior and senior people.<br />* It's particularly fun hanging out with other Research Fellows! And I look forward to every Friday, when we all meet for lunch and one of us gives a short, informal talk on, well, whatever that person wants to talk about.<br />* Seriously, what's not to like about having no non-research responsibilities, surrounded by dozens of top researchers in the same boat?</blockquote>With that very positive description, here's the formal information:<br /><br /><div>==============================<wbr></wbr>==============================<wbr></wbr>====</div><div><br /></div><div>The  Simons Institute for the Theory of Computing at UC Berkeley invites  applications for Research Fellowships for academic year 2014-15.</div><br />Simons-Berkeley  Research Fellowships are an opportunity for outstanding junior  scientists (up to 6 years from PhD by Fall 2014) to spend one or two  semesters at the Institute in connection with one or more of its  programs. &nbsp;The programs for 2014-15 are as follows:<br /><br />* Algorithmic Spectral Graph Theory (Fall 2014)<br />* Algorithms and Complexity in Algebraic Geometry (Fall 2014)<br />* Information Theory (Spring 2015)<br /><br />Applicants  who already hold junior faculty or postdoctoral positions are welcome  to apply. In particular, applicants who hold, or expect to hold,  postdoctoral appointments at other institutions are encouraged to apply  to spend one semester as a Simons-Berkeley Fellow subject to the  approval of the postdoctoral institution.<br /><br />Further details and application instructions can be found at&nbsp;<a href=\"http://simons.berkeley.edu/fellows2014\" target=\"_blank\">http://simons.berkeley.edu/<wbr></wbr>fellows2014</a>. &nbsp;Information about the Institute and the above programs can be found at&nbsp;<a href=\"http://simons.berkeley.edu/\" target=\"_blank\">http://simons.berkeley.edu</a>.<br /><br /><b>Deadline for applications: <span class=\"aBn\" data-term=\"goog_987142274\" tabindex=\"0\"><span class=\"aQJ\">15 December, 2013</span></span>.</b><br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/4154998088855496946/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=4154998088855496946") (title . "2 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4154998088855496946"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4154998088855496946"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/10/simons-postdocs-post.html") (title . "Simons Research Fellowships Post"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "2")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-8935780820639444860") (published nil "2013-10-02T20:54:00.001-04:00") (updated nil "2013-10-02T20:54:13.301-04:00") (title ((type . "text")) "Some Advice on Entrepreneurship from the AH meeting") (content ((type . "html")) "At the Andreessen Horowitz academic round table (<a href=\"http://mybiasedcoin.blogspot.com/2013/09/notes-from-andreessen-horowitz-academic.html\">see past pos</a>t), there was various advice, some of it contradictory, for professor-types interested in starting companies.&nbsp; I should start by saying that all of this is my interpretation of the advice, and the various people involved are not responsible if I've gotten it wrong.&nbsp; Certainly further opinions are welcome. &nbsp; <br /><br />At the research level, Nick McKeown expressed some of his rules for research projects.<br /><br />1. Pick a problem that is intellectually interesting.<br />2. And improves the practice.<br />3. And industry doesn't like (yet).<br /><br />His idea (my interpretation!) was that if industry liked the idea, then the problem wasn't out there enough in terms of a time horizon.&nbsp; Also, given the resources in industry, if industry really liked an idea, they could throw more resources at it than researchers at a university.&nbsp; This idea had some pushback.&nbsp; For example, Michael Franklin said the <a href=\"https://amplab.cs.berkeley.edu/\">AMPLab at Berkeley</a> had a lot of enthusiasm from industry, and that the industry support and interest was very positive in terms of their success.&nbsp; (AH very recently funded a startup that came out of the AMPLab.&nbsp; And the AMPLab is very impressive in terms of its resources, including people -- lots of great faculty.)<br /><br />I will say that part of Nick's conception resonated with me.&nbsp; When I've expanded my research into new areas, I've found at times that people in that area can be very negative.&nbsp; And when that happens, it often turns out to be the most interesting research.&nbsp; The work on low-density parity-check codes from way back when was roundly criticized by multiple old-guard coding theorists when we first presented it, and then suddenly there were entire sessions at coding theory conferences on the subject.&nbsp; If you're inspiring angry reactions, you may indeed be on to something in your research.&nbsp; (Of course, as he also acknowledged, you may also just be wrong.) <br /><br />Another key issue that arose was \"commitment\".&nbsp; The VCs at AH expressed some skepticism for professors who wanted to take a year (or maybe two) off to help set up a company but then hand it off and go back to their regular job.&nbsp; Besides investing in an idea, they're investing in a team, and it's not a great sign if the team leader isn't committed.&nbsp; Also, there's the feeling that that sort of change in leadership can have a huge transition cost.&nbsp; (Also, I think, as I mentioned previously, they really seem to like working with tech CEO's.&nbsp; Handing a company off may remove the \"tech\" leadership.)&nbsp; They were fine with a model where it was professors and graduate students starting a company, and the commitment was coming from the graduate students;&nbsp; in that case, a \"part-time\" professor founder could be workable. <br /><br />I personally think the \"commitment\" issue can be a challenge.&nbsp; It's a problem for me, with liking my regular job so much.<br /><br />There was various talk about patents.&nbsp; Most of the crowd were against making them a priority in starting a business, and recommended not getting them.&nbsp; A patent, it is said, is just a license to sue, and who needs or even wants a license to sue?&nbsp; Making your work open-source to get excitement and interest, and then commercialize after that point, can be a very successful business model, and maintains the academic desire to get the basic work out to a wide audience.&nbsp; But perhaps most importantly, as an academic, patenting your work means dealing with your school's version of the Technology Licensing Office, and nobody says anything good about their Technology licensing offices.&nbsp; (Even the west coast schools -- the best anyone said is that generally theirs would stay out of your way.)&nbsp; A patent gives your TLO license to ask for whatever percentage of your soon-to-be company they feel like asking for, and until they sign off, it can be hard to get a VC interested in a company where another entity holds the patent.&nbsp; And generally speaking, your success is not their performance metric.<br /><br />(Two quick additional points related to TLOs.&nbsp; Many noted that most TLOs have been brought up by the medical school/biology groups in the university, where patents matter a lot and licensing is a strong way to go.&nbsp; That's much less so in CS tech.&nbsp; Also, while you'd think TLOs would be thrilled to have professors/graduate students start companies, get very wealthy, and donate back to the university -- that doesn't seem to be their model, as enlightened as it might seem to us.) &nbsp; <br /><br />I certainly know some cases where patents at least seem to me to have been important to \"startup\" companies.&nbsp; (Akamai/Limelight?)&nbsp;&nbsp;&nbsp; But the rest of what was said seemed to make a lot of sense. &nbsp;&nbsp; <br /><br />One thing the VCs emphasized is the importance of timing.&nbsp; They said the idea behind many startups had actually been around for a while, the subject of study in universities or labs, but often the timing has to be right to make the move into the product space.&nbsp; Sometimes other technology has to catch up, or something else in the environment has to go your way.&nbsp; A lot of \"failures\" may not be failures of the idea, but just not the right timing. &nbsp; <br /><br />It was expressed that startups that have a mission to change the world in some interesting way were better off than startups whose mission was just to make money.&nbsp; In particular, it can help recruit the best and the brightest, creating a very powerful positive feedback loop.&nbsp; Simply stated missions -- Google says theirs is to \"<a href=\"http://www.google.com/about/company/\">organize the world's information and make it universally accessible and useful</a>\" -- can be quite powerful.&nbsp; The cynical might question people's motivations and whether money is really what's behind the mission, but either way, missions can be useful.<br /><br />Finally, and perhaps this isn't so surprising, but the best way to connect with VCs is probably through personal connections.&nbsp; If you know someone that's worked with the VCs, get them to introduce you.&nbsp; The VCs apparently get thousands of proposals sent to them a year, and very few of those get consideration.&nbsp; Having someone they trust vouch for you means a lot in terms of them being willing to make time to listen to you.&nbsp; That's not unlike aspects of academia (the importance of letters for jobs/graduate school;&nbsp; in some cases connections being helpful for getting funding from industry).&nbsp; While not surprising, it seems worth saying.&nbsp; ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/8935780820639444860/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=8935780820639444860") (title . "2 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8935780820639444860"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8935780820639444860"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/10/some-advice-on-entrepreneurship-from-ah.html") (title . "Some Advice on Entrepreneurship from the AH meeting"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "2")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-1582534515459862114") (published nil "2013-10-01T07:32:00.002-04:00") (updated nil "2013-10-01T07:32:29.424-04:00") (title ((type . "text")) "Entrepreneurship and the Curriculum") (content ((type . "html")) "At the Andreessen Horowitz academic round table (<a href=\"http://mybiasedcoin.blogspot.com/2013/09/notes-from-andreessen-horowitz-academic.html\">see last pos</a>t), the issue of how to promote student entrepreneurship through the curriculum arose. &nbsp;The VCs at AH (which I'll use for short hereon) want there to be more tech-based CEOs. &nbsp;As they put it, it's easier to teach a tech person what they need to learn about business than to teach a business person what they need to learn about the tech. &nbsp;Somehow, in most universities and I believe in the world at large, the culture has developed that the business people think they're the powerful ones, not the tech people who build the things that consumers love.&nbsp; The business people think they're the ones delivering the value, and then divide the value accordingly. <br /><br />Don't believe me? &nbsp;Go see&nbsp;<a href=\"http://whartoniteseekscodemonkey.tumblr.com/\">http://whartoniteseekscodemonkey.tumblr.com/</a> , a site (that came up in the discussions) devoted to the e-mails sent by Wharton business school people looking to hire (undergraduate) programming and engineering talent. &nbsp;As a faculty member I get bunches of these sorts of e-mails a month, and I'm sure the computer science students do as well.&nbsp; The underlying message is that the tech people are commodity cogs to be plugged in as needed.&nbsp; That's not the message we want our students to get, and not how things really work in most successful startups. &nbsp; <br /><br />So AH says they believe in and support the tech CEO, and want to encourage that.&nbsp; What does that, and entrepreneurship generally, mean for our curriculum?&nbsp; Should CS departments have courses on entrepreneurship (or give credit for classes in other departments on the subject)?&nbsp; Should we teach computer languages that are the latest on the start-up scene (in preference to those that, arguably, provide a larger conceptual framework or encourage certain ways of thinking)?&nbsp; Should we have an \"entrepreneur track\", like we might have a theory track or AI track or computer science and engineering track?&nbsp; What is the school's role at the department's role in encouraging entrepreneurship? &nbsp;Some people thought CS departments perceive themselves as professors in the business to make more professors, and thereby ignore the potential CS has to change the world via business. <br /><br />These are tough questions.&nbsp; One issue that makes it even more problematic for CS is that these problems are not faced by many other parts of the university -- literature, history, and even most of the social sciences don't have a significant start-up scene -- which means in some ways, we're on our own. &nbsp;Indeed, significant parts of the university might actively resent an emphasis on entrepreneurship, which they might argue does not always fit so well with the university's educational mission. &nbsp;(Or, &nbsp;perhaps, it just represents self-interest on their part.) <br /><br />Aged fuddy-duddy that I am, I'm somewhat sympathetic to this view. &nbsp;Computer science is science. &nbsp;I want to educate students about the great questions (and answers) of computer science, and I am thrilled to be educating the next generation of scientists, especially computer science. &nbsp;But yes, computer science is also engineering (in the practical sense of the word), providing the ability to solve immediate problems, yielding economic benefits to the users and of course the developers of the solutions. &nbsp;I see striking the right balance as a challenge; &nbsp;greedily, I do somehow want both. <br /><br />At Harvard, I feel we've been pushed and pushed ourselves to make the requirements for the major quite minimal (in terms of the number of classes), so I want those required classes to be on the \"science\" side.&nbsp; I want computer science graduates to have both breadth and depth in computer science.&nbsp; Much of the entrepreneurship can naturally fall outside the curriculum -- there are now a number of student organizations, and university-level initiatives, to promote entrepreneurship. &nbsp;(Harvard, I think, has been finding a way to expand the concept of entrepreneurship beyond just \"business\" -- into the larger concept of innovation -- to make it more appealing throughout the university. &nbsp;For example, check out the <a href=\"http://i-lab.harvard.edu/about\">i-lab</a>.) &nbsp;At the same time, I'm clear that having all the entrepreneurship activities fall outside the traditional curriculum potentially pushes a set of students away. &nbsp;Again, we're left with finding the right balance, for us.<br /><br />Sadly, the meeting's discussion on this only lasted a short while, and I felt left with more questions than answers.&nbsp; Feel free to discuss your thoughts here. &nbsp; <br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/1582534515459862114/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=1582534515459862114") (title . "4 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1582534515459862114"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1582534515459862114"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/10/entrepreneurship-and-curriculum.html") (title . "Entrepreneurship and the Curriculum"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/06738274256402616703") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "4")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-4088973913902149979") (published nil "2013-09-30T00:06:00.001-04:00") (updated nil "2013-09-30T00:06:13.964-04:00") (title ((type . "text")) "Notes from the Andreessen Horowitz Academic Round Table") (content ((type . "html")) "I've spent the last couple of days attending the Andreessen Horowitz Academic Round Table. &nbsp;<a href=\"http://en.wikipedia.org/wiki/Andreessen_Horowitz\">Andreessen Horowitz</a> is a leading venture capital firm, founded by <a href=\"http://en.wikipedia.org/wiki/Marc_Andreessen\">Marc Andreessen</a> and <a href=\"http://en.wikipedia.org/wiki/Ben_Horowitz\">Ben Horowitz</a>. &nbsp;The goal of the meeting as it was described to me was to get a number of academics and entrepreneurs together, along with the VCs, and get to know each other in an non-pressured environment. &nbsp;Andreessen Horowitz seems very interested in promoting the technical CEO (as opposed to the \"MBA CEO\") as a viable option for startups, and seems interested in establishing long-term connections with universities. &nbsp;They're obviously very well connected at Stanford and Berkeley, but recognize that there is startup potential at other universities that is probably underutilized.<br /><br />Most of the program was a series of short technical talks, mostly by academic types, including many academics with start-up experience. &nbsp;Some talks were also by people leading start-ups that Andreessen Horowitz has invested in. &nbsp;The talks were of a uniformly very high quality. &nbsp;It was like a super-interesting conference, perhaps made more interesting because of the breadth of computer science areas covered. &nbsp;The speaker list included Susan Athey, Ed Felten, Michael Franklin, Michael Kearns, Nick McKeown, Rob Miller, Andrew Ng, Tuomas Sandholm, and Stefan Savage, just to name some. &nbsp;On the company side, the speakers included Ben Milne of <a href=\"https://www.dwolla.com/\">Dwolla</a>, who explained a lot of the cruft that has been built up in the money system in terms of moving money around, and how he was getting rid of it. Vijay Balasubramaniyan of <a href=\"http://pindropsecurity.com/\">Pindrop Security</a> described their fraud detection measures for phone-based fraud. &nbsp;Jonathan Downey of <a href=\"http://www.airware.com/\">Airware</a>&nbsp;discussed developing open architectures for the commercial drone market.&nbsp; (And more.) <br /><br />Before I go on, the most entertaining talk bit:&nbsp; Rob Miller showed a demo of a crowdsourcing program for shortening your document -- to get you down to that 10-page limit when you're a 1/4 page over, and you're fed up hours before the conference deadline.&nbsp; (Looking online, I think this must be the <a href=\"http://projects.csail.mit.edu/soylent/\">Soylent project</a>.)&nbsp; I hadn't seen it before.&nbsp; For me, as a CS professor, that's a great example of crowdsourcing. <br /><br />Beyond the technical talks, there were some interesting discussions about the connections between research and entrepreneurship, about how we might teach our students so that they can be entrepreneurial both in technology and in business, about what VCs like Andreessen Horowitz are looking for in (faculty-based) startups, and about how many universities seem to get in the way rather than help their faculty (or graduate students, or even undergraduate students) start companies. &nbsp;(It seemed like the most controversial topic involved who had the worst, most unhelpful technology licensing office...) &nbsp;In many ways, these discussions felt more interesting than the talks, and I wish we had more time for them -- even though the talks were really good, this was stuff that was new to me, and where the people in the room were experts I wanted to hear from on these topics. <br /><br />There was much too much fodder at this meeting for a single blog post, so I'll try to cover some of these themes a bit more in depth over the next few days. &nbsp;One thing that might come up in the future -- that I think would be great and recommend (to them and whoever might be able to attend) -- is that they might do another meeting like this but focus on inviting graduate students. &nbsp;After all, professors already have exciting jobs they enjoy and are attached to -- graduate students may be a bit more eager to take their ideas and take the leap to try build a company out of them. <br /><br /><br /><br /><br /><br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/4088973913902149979/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=4088973913902149979") (title . "0 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4088973913902149979"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4088973913902149979"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/09/notes-from-andreessen-horowitz-academic.html") (title . "Notes from the Andreessen Horowitz Academic Round Table"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/06738274256402616703") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "0")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-278996900569087388") (published nil "2013-09-28T00:45:00.004-04:00") (updated nil "2013-09-28T00:45:59.623-04:00") (title ((type . "text")) "Yelp Reviews News") (content ((type . "html")) "Giorgos Zervas is <a href=\"http://www.bbc.co.uk/news/technology-24299742\">in the news again</a> (with Michael Luca of Harvard Business School), this time for his work on filtered/fake Yelp reviews.&nbsp; See also <a href=\"http://blogs.wsj.com/corporate-intelligence/2013/09/24/fake-reviews-are-everywhere-how-can-we-catch-them/\">this piece</a> in the Wall Street Journal blog.&nbsp; High-level issue:&nbsp; filtered reviews are on the rise, as businesses recognize that social media reviews can be important to their business.&nbsp; The work is quite timely given the recent NY Attorney General's investigation into fake reviews that led to a number of fines.") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/278996900569087388/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=278996900569087388") (title . "0 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/278996900569087388"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/278996900569087388"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/09/yelp-reviews-news.html") (title . "Yelp Reviews News"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "0")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-3588742650427971089") (published nil "2013-09-27T12:41:00.000-04:00") (updated nil "2013-09-27T12:41:11.252-04:00") (title ((type . "text")) "Dina Katabi, MacArthur Genius") (content ((type . "html")) "It's always nice to see a computer scientist be on the list for an award that spans over multiple disciplinary areas.&nbsp;&nbsp; This year, we get to congratulate Dina Katabi for earning a MacArthur Fellowship.&nbsp; Dina's work focuses in wireless, but seems to span more areas than you could imagine.&nbsp; She was part of the recent team that came out with the breakthrough work on sparse FFT.&nbsp; She's done some of the most well-known work in network coding (XORs in the Air).&nbsp; And recently, she's been working on using wireless signals to see through walls.<br /><br />The official citation is <a href=\"http://www.macfound.org/fellows/894/\">here</a>.&nbsp; (Apparently, Dina is the \"894th\" Fellow.)&nbsp; ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/3588742650427971089/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=3588742650427971089") (title . "4 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/3588742650427971089"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/3588742650427971089"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/09/dina-katabi-macarthur-genius.html") (title . "Dina Katabi, MacArthur Genius"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "4")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-1684902234454979833") (published nil "2013-09-19T22:30:00.004-04:00") (updated nil "2013-09-20T00:23:31.811-04:00") (title ((type . "text")) "Reviewing Bad") (content ((type . "html")) "A pun title, relating to two quick things.<br /><br />First, I had the wonderful experience of getting to see (through a special deal set up by Harvard's faculty development office) <a href=\"http://americanrepertorytheater.org/events/show/all-way\">All the Way</a> at the <a href=\"http://americanrepertorytheater.org/events/show/all-way\">American Repertory Theater</a>.&nbsp; It's a new play following the history of Lyndon Johnson (and Martin Luther King) from the November 1963- November 1964 time period (from when Kennedy was assassinated to when Johnson won the presidential election).&nbsp; I was silly enough to not realize when I got the tickets that Bryan Cranston, of <strike>Malcolm in the Middle</strike> Breaking Bad fame, was playing Johnson as the lead.&nbsp; It was a really fantastic show.&nbsp; (Hey, the rest of you in Harvard CS who aren't going to these things -- why not?&nbsp; They're awesome!&nbsp; Krzysztof was the only one I saw this time...)&nbsp; Well acted and fascinating history.&nbsp; The cast was amazing (and large -- I think 17 actors total), and I kept recognizing them from TV.&nbsp; My inner gushing fan was set off by Michael McKean -- at one point, some of the actors were out in the audience area, and I excitedly noted McKean was about six feet from me.&nbsp; (I chose not to seek his autograph given the performance was going on at the time.)&nbsp;<br /><br />[Note -- sadly, the show is already sold out... at least for this run.] <br /><br />Ah, then the bad news.&nbsp; After being on the executive PC for STOC 2013, I heard from multiple colleagues afterwards who had their papers rejected about what they felt was the low quality of reviewing.&nbsp; (In my defense, I commiserated with several of them at the time.)&nbsp;&nbsp; So, after getting the reviews from the SODA PC (for my rejected papers), I feel obliged to comment.&nbsp; Quality-wise, they're terrible.&nbsp; (Not universally so... but some of them....)&nbsp; I was going to put in specific examples, but after the heat of the moment died down, my cooler head prevailed and determined that was inappropriate. &nbsp; But suffice to say that beyond the usual we don't understand the motivation type stuff, there are comments that are factually wrong that betray fundamental misunderstandings, and opinions regarding \"what's important\" in the paper that are -- in my experience -- just off the mark.&nbsp; I've been through it before -- you suck it up, find the useful comments, rewrite, and re-submit.&nbsp; But it is disturbing (from both sides, as the receiver of reviews and as one helping manage the reviewing process), and worrisome if it's an increasing problem for many submitters. &nbsp; &nbsp; ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/1684902234454979833/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=1684902234454979833") (title . "27 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1684902234454979833"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1684902234454979833"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/09/reviewing-bad.html") (title . "Reviewing Bad"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "27")) (entry nil (id nil "tag:blogger.com,1999:blog-8890204.post-7659346441833502000") (published nil "2013-09-06T20:25:00.002-04:00") (updated nil "2013-09-06T20:25:08.214-04:00") (title ((type . "text")) "Guest Post by Justin Thaler: A \"Mini-Survey\" of Practical Verification Algorithms") (content ((type . "html")) "<a href=\"http://people.seas.harvard.edu/~jthaler/\">Justin Thaler</a>, after presenting his most recent work on verifiable computation at Crypto, decided to write up a mini-survey on recent work in the area, and he offered to make it a blog post.&nbsp; It's a somewhat longer-than-average blog post,&nbsp; but well worthwhile.&nbsp; So without further ado, here's Justin.<br /><br />------<br /><br />In the last few years there has been an enormous amount of work devoted to the development of \"practical\" protocols for verifiable computation, with multiple approaches being pursued across several research groups. It has recently become clear to me that the sheer volume of work and the sometimes subtle relationships among the various approaches has made the area difficult to follow. The goal of this post is to provide a reasonably concise description of the various approaches and the pros and cons of each, with the hope that this will serve as a handy reference for those interested in the area, at least until a more thorough and formal survey can take its place.<br /><br />==============<br /><br />Some Quick Background:<br /><br />The field of verifiable computation seeks to develop protocols that allow a computationally weak verifier (such as a cloud computing user) to send its data to a powerful but untrusted prover (such as a cloud computing service). The verifier can then ask the prover to perform some computation on the data, and the protocol should enable the prover to return the output of the computation along with a guarantee that the output is correct. Concretely, the ultimate goal is to start with a program written in a high-level language like C and automatically ensure that the prover faithfully executed the program.<br /><br />The only background required to understand this post is having encountered <i> interactive proof systems </i> and <i> argument systems </i>. To review, in an <a href=\"http://en.wikipedia.org/wiki/Interactive_proof_system\"> interactive proof</a>, the prover tells the verifier the output of a computation, and then they have a conversation during which the prover tries to convince the verifier that the output is correct. Any interactive proof must satisfy two properties: the first, called completeness, says that an honest prover will convince the verifier to accept, and the second, called soundness, says that a dishonest prover will be caught with high probability even if the dishonest prover is computationally unbounded. An argument system is an interactive proof system that is sound only against polynomially time provers.<br /><br />&nbsp;===============<br /><br />Sources of Overhead:<br /><br />I will focus on projects that are reasonably general-purpose, require only one prover, and have attempted to refine theory toward implementation. In the general case, all approaches satisfying these criteria work by first turning the high-level computer program into an arithmetic circuit or a set of \"constraints\", and then using complexity-theoretic or cryptographic machinery (or both) to check that the prover correctly evaluated the circuit or satisfied the set of constraints. I will refer to the \"high-level program ==&gt;; circuit/constraints\" transformation in any system as the 'front-end', and the actual protocol used to check that the prover correctly evaluated the circuit as the 'back-end'.<br /><br />Thus, there are two primary sources of overhead in existing systems: the overhead in the front-end (as some computer programs that run in T machine steps may only be computed by circuits with far more than T gates), and the overhead in the back-end (i.e., the extra work required for the prover to evaluate the circuit with a guarantee of correctness, relative to evaluating the circuit with no guarantee). The existence of two sources of overhead complicates the comparison among many of the papers that I will discuss, as work on front-ends and back-ends has been interleaved, some back-ends work with more general circuits than other back-ends (and hence can interface with more efficient front-ends), and there has been cross-pollination among systems. I will attempt to clearly delineate these issues below by focusing on contributions to the design of back-ends and front-ends separately, beginning with the former.<br /><br />=================<br /><br />Summary of Back-Ends:<br /><br />Existing back-ends fall into three broad categories: interactive proofs, argument systems with pre-processing, and argument systems without preprocessing. I will describe each of the three approaches below, starting with the most efficient but least general approach and moving toward more general but less efficient approaches.<br /><br />1) Interactive Proofs: In 2008, <a href=\"http://dl.acm.org/citation.cfm?id=1374396\"> Goldwasser, Kalai, and Rothblum</a> (GKR) gave a powerful interactive proof protocol for circuit evaluation. The costs to the verifier in this protocol grow linearly with the circuit depth, so the protocol only achieves an efficient verifier if the circuit has small depth (equivalently, if the function computed by the circuit has an efficient parallel algorithm). Fortunately, many of the computations actually being outsourced do exhibit large amounts of parallelism. In 2012, <a href=\"http://people.seas.harvard.edu/~jthaler/PracticalVerifiedComputation.html\"> Cormode, Mitzenmacher, and I</a> implemented the GKR protocol plus refinements -- most notably, we brought the runtime of the prover down from Omega(S^3) in a naive implementation to O(S log S), where S is the number of gates in the circuit. Our implementation demonstrated that the concrete costs to the verifier are very low, but there were two downsides to the implementation: First, despite our refinements, the prover runtime remained a bottleneck (the prover took roughly three orders of magnitude more time than that required to evaluate the circuit with no guarantee of correctness). Second, unless the circuit satisfied a certain 'regularity' condition on its wiring pattern, the verifier required an expensive pre-processing phase to \"extract\" information about the wiring of the circuit.<br /><br />Very recently, I <a href=\"http://people.seas.harvard.edu/~jthaler/TimeOptimalIPs.html\"> addressed</a> these bottlenecks by showing the following. First, for 'regular' circuits, the runtime of the prover can be reduced from O(S log S) to O(S). Concretely, for these circuits, the prover now runs about 10 times slower than what is required to evaluate the circuit gate-by-gate with no guarantee of correctness. Informally, a circuit has a 'regular' wiring pattern if there is a way to label each gate g with a binary string such that the labels of the in-neighbors of g are very simple functions of the label of g (this condition is satisfied by natural circuits computing naive matrix multiplication, pattern matching, FFTs, and several other problems).<br /><br />Second, for any <a href=\"http://en.wikipedia.org/wiki/Data_parallelism\"> data parallel</a> computation (i.e., any setting where an arbitrary sub-computation C is applied independently to many pieces of data, before possibly aggregating the results), the cost of the pre-processing stage for the verifier and the overhead for the prover can be made to depend only on the size of the sub-computation C, and not at all on the number of pieces of data to which C is applied. Essentially, this holds because the data-parallel computation is 'regular' at a higher level of abstraction than in the first result -- while the sub-computation C may have very irregular wiring, the various invocations of C do not interact at all.<br /><br />Third, I gave a simple protocol for matrix multiplication that avoids the circuit representation entirely, allowing the prover to compute the correct answer using an arbitrary algorithm, and then spend O(n^2) extra work proving the answer is correct.<br /><br />[Aside on Matrix Multiplication: It is worth comparing this new matrix multiplication protocol to classical approaches like <a href=\"http://en.wikipedia.org/wiki/Freivalds%27_algorithm\"> Freivalds' algorithm</a>. The latter requires no interaction and *no* extra work for the prover. The advantage of the interactive approach is most evident for computations that invoke matrix multiplication as a means to an end rather than as an end in itself. For example, the best-known algorithms for computing the diameter of a graph work by repeatedly squaring the adjacency matrix. Running Freivalds' algorithm to verify these algorithms would require the prover to send the intermediate matrices to the verifier, which would be terabytes of data even for graphs on 1 million nodes. The interactive approach allows the prover to send only the right answer (which is just a single number), and then spend a few KBs of extra communication and a low-order amount of extra work proving the answer is correct.]<br /><br />2) Argument Systems with Pre-Processing: In 2007,  <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.149.1303&amp;rep=rep1&amp;type=pdf\"> Ishai, Kushilevitz, and Ostrovsky</a> gave an argument that required an expensive pre-processing phase for the verifier, but avoided the use of short PCPs (short PCPs are complicated complexity-theoretic protocols upon which most argument systems were traditionally based -- see the section on Argument Systems without Pre-processing below). Systems with pre-processing are primarily of interest in data-parallel settings, because the verifier can only save work when the set-up costs are amortized over many instances of the same computation (i.e., when the same computation is applied independently to many different inputs).<br /><br />In 2012, <a href=\"http://www.cs.utexas.edu/~mwalfish/papers/pepper-ndss12.pdf\"> Setty, McPherson, Blumberg, and Walfish</a> began refining IKO's protocol. They called their first system Pepper, and subsequent refinements were described in a follow-up system <a href=\"http://eprint.iacr.org/2012/598\"> Ginger</a>. Further follow-up work incorporated an ingenious encoding of computations due to <a href=\"http://eprint.iacr.org/2012/215\"> Genarro, Gentry, Parno, and Raykova</a> (GGPR), and resulted in a system called <a href=\"http://eprint.iacr.org/2012/622\"> Zaatar</a> that (mostly) supercedes Pepper and Ginger.<br /><br /><a href=\"http://research.microsoft.com/apps/pubs/default.aspx?id=180286\">Parno, Gentry, Howell, and Raykova</a> introduced another system called Pinocchio that is also based on the theoretical innovations of GGPR. Also, very recent work by <a href=\"http://people.csail.mit.edu/alexch/research/csnark/csnark.html\"> Ben-Sasson, Chiesa, Genkin, Tromer, and Virza</a> (BCGTV) implements a back-end that is closely related to Pinocchio.<br /><br />The high-level comparison between the Zaatar back-end and the Pinocchio/BCGTV back-end is the following. Zaatar is somewhat more efficient because it uses less cryptographic machinery (roughly, the verifier in Zaatar poses queries in the clear, while Pinocchio/BCGTV require the prover to compute over encrypted queries.) However, Pinocchio/BCGTV provide functionality that Zaatar does not. Specifically, the former supports public verifiability and zero-knowledge. Additionally, it consists of only two messages, one from the verifier to the prover and one from the prover to the verifier. Finally, it allows set-up costs to be amortized over an indefinite number of instances of the same computation -- in contrast, the pre-processing costs of Zaatar can be amortized over many instances of a computation only if all instances are verified at the same time. It is worth mentioning that the Pinocchio/BCGTV back-ends are based on non-standard cryptographic assumptions, while Zaatar is based on standard ones.<br /><br />3) Argument Systems without Pre-Processing: <a href=\"http://eccc.hpi-web.de/report/2012/045/\"> Ben-Sasson, Chiesa, Genkin, and Tromer </a> (BCGT) have been pursuing argument systems that avoid a pre-processing phase for the verifier. These argument systems are based on short PCPs, and while existing work on this topic is still theoretical in nature (focusing on reducing the concrete costs of existing PCPs), implementation efforts are reportedly underway.<br /><br />===============<br /><br />Comparison of Back-Ends:<br /><br />Comparison of Argument Systems without Pre-Processing to other  approaches: The advantage of the short-PCPs approach relative to interactive proofs and argument systems with pre-processing is that the former *never* requires a pre-processing phase for the verifier. The disadvantage is that the overheads to the prover are likely to be substantially higher than they are in argument systems with pre-processing. For example, the short PCPs described  by <a href=\"http://eccc.hpi-web.de/report/2012/045/\"> BCGT</a> require sequential repetition of the protocol many  times in order to drive down soundness error. Like Pinocchio and Zaatar, they also require performing FFT operations on objects as large as a computation transcript, but unlike Pinocchio and Zaatar, these short PCPs also require working over fields of small characteristic (and hence can only be combined with front-ends that generate circuits over these fields), require the use of non-trivial finite field algorithms, and require circuits that satisfy certain algebraic notions of regularity. Precisely how large these overheads are in practice remains to be seen.<br /><br />Comparison of Interactive Proofs to Argument Systems with Pre-Processing: The advantages of interactive proofs are three-fold. First, they are secure even against computationally unbounded provers, while argument systems are only secure against polynomial-time provers. Second, interactive proofs can avoid pre-processing entirely for structured computation (e.g. 'regular' circuits) and minimize pre-processing for data-parallel computation, while argument systems with pre-processing (discussed below) inherently require an expensive pre-processing stage for the verifier. Third, interactive proofs achieve unmatched prover efficiency when they are applicable, and in fact can avoid the circuit representation entirely for fundamental primitives like matrix multiplication.  Concretely, Zaatar's prover is roughly 3 orders of magnitude slower than evaluating the circuit with no correctness guarantee (see e.g.<a href=\"http://research.microsoft.com/en-us/UM/redmond/events/fs2013/presentations/Michael-Walfish_EfficientlyVerifying.pptx\">these slides </a> by Mike Walfish), which is roughly commensurate with the prover overhead in my original GKR implementation with Cormode and Mitzenmacher, but is a couple orders of magnitude slower than what we can now achieve with interactive proofs for \"regular\" circuits (see above).<br /><br />The disadvantages of interactive proofs are the following. First, they are only applicable to small-depth circuits (i.e., parallelizable computation). Second, they do not support \"non-deterministic\" circuits, which can be extremely useful for turning high-level programs into small circuits as described in the section on front-ends below (there is  <a href=\"http://www.math.ias.edu/~avi/PUBLICATIONS/MYPAPERS/GVW03/gvw03.pdf\"> evidence</a> that lack of support for non-determinism in inherent in the use of interactive proofs). This means that certain kinds of computations such as those involving many random accesses to memory or sorting/comparison operations are problematic for interactive proofs. Third, interactive proofs cannot support properties like zero-knowledge and public verifiability that are achieved by Pinocchio/BCGTV. Fourth, interactive proofs require logarithmically many rounds of interaction between prover and verifier, while argument systems typically require just one or two rounds.<br /><br />(I maintain, however, that the round complexity of interactive proofs isn't a big deal. First, interaction can be generically removed via the Fiat-Shamir heuristic, which is secure in the random oracle model and may be acceptable in practice. Second, any system allowing the verifier to request a specific computation in the first place is likely to involve a remote procedure call and hence incur round-trip delays anyway. Third, browsers already send a separate request for every image and script on a web page, and typically a browser <a href=\"https://developers.google.com/speed/docs/best-practices/rtt?csw=1#ParallelizeDownloads\">cannot substantially parallelize these requests</a>.)<br /><br />====================<br /><br />Summary of and Comparison of Front-Ends:<br /><br />Ginger, Zaatar, and Pinocchio all contain compilers that turn high-level programs into (non-deterministic) circuits (Pinocchio was the first to handle a subset of C, while the others initially handled a different high-level language but have since moved to C). <a href=\"http://www.cs.utexas.edu/~mwalfish/papers/allspice-oakland13.pdf\"> Vu, Setty, Blumberg, and Walfish</a> (VSBW) built a front-end for an implementation of the GKR protocol (this front-end must generate small-depth circuits that are either deterministic or contain a small number of non-deterministic inputs, since the non-deterministic inputs must be sent explicitly to the verifier. It should also be clarified that their compiler does not produce regular circuits, and hence the GKR protocol requires a pre-processing phase when applied to these circuits, and amortizes these costs over many instances of the computation exactly as in Zaatar/Ginger/Pepper). Given a high-level program, the VSBW front-end also automatically determines whether Zaatar or GKR would be most efficient to verify the computation and runs the better of the two protocols, and their system as a whole is called Allspice.<br /><br />However, none of the front-ends above efficiently supports programs that utilize random access to memory. Two recent front-ends change this. One is the front-end developed by <a href=\"http://people.csail.mit.edu/alexch/research/csnark/csnark.html\"> BCGTV</a> mentioned above, which implemented earlier <a href=\"http://eprint.iacr.org/2012/071\"> theoretical work</a> by the first four authors. Given a high-level program, their approach to circuit generation roughly works as follows. They first compile the C program into actual machine code for a simple Random Access Machine (RAM). They then generate a circuit which takes an entire transcript (sorted by time) of the RAM computation as a non-deterministic input, and checks that the transcript is valid. This requires checking the transcript for both *time consistency* (i.e., that the claimed state of the machine at time i correctly follows from the machine's claimed state at time i-1) and *memory consistency* (i.e., that every time a value is read from memory location x, the value that is returned is equal to the last value written to that location).<br /><br />Their circuit checks time-consistency by representing the transition function of the RAM as a small circuit (they have managed to represent the entire transition function as a circuit with ~1000 gates, at least for short RAM computations of &lt; 1 million steps. While this is still a lot of gates, it is a substantial engineering achievement). It then applies this circuit to each entry i of the transcript and checks that the output is equal to entry i+1 of the transcript. Their circuit checks memory consistency by using routing techniques to re-sort the transcript based on memory location (with ties broken by time), at which point it is straightforward to check that every memory read from a given location returns the last value written to that location.<br /><br />The second  front-end that supports random access to memory is called <a href=\"http://eprint.iacr.org/2013/356\">Pantry</a>, developed by Braun, Feldman, Ren, Setty, Blumberg, and Walfish. They augment Zaatar and Pinocchio's front-end to support random access to memory by using <a href=\"http://en.wikipedia.org/wiki/Merkle_tree\"> Merkle-hashing</a> techniques -- this offers an alternative approach to the routing-based technique for ensuring memory consistency pursued by BCGTV. (Interestingly, the Merkle-hashing approach was explicitly considered in BCGT's theoretical work, but has not yet been incorporated into the BCGTV system).<br /><br />Merkle trees allow one to outsource memory maintenance by building a binary tree whose leaves correspond to memory locations. Each leaf stores the value contained in the corresponding memory location, and each internal node stores an evaluation of a collision-resistant hash function applied to its children. As long as the verifier knows the value of the root, every time a memory location (leaf) is accessed, the prover can 'prove' that the returned value is correct by revealing all values along the leaf-to-root 'witness path'. One can show that the only way the prover can lie is by finding a collision in the hash function.<br /><br />Pantry identifies a collision-resistant hash function whose evaluation function can be (relatively) efficiently represented as a circuit or set of constraints. This allows evaluation of the hash function (and hence checking of 'witness paths', and hence support for random access to memory) to be folded into Zaatar's and Pinocchio's verification machinery.<br /><br />Pantry's use of collision-resistant hash functions is also useful for some applications (such as MapReduce) that do not necessarily require random access to memory -- for these applications, Pantry avoids the use of a full Merkle-hash tree, reducing costs relative to what is required to support general RAMs.<br /><br />Comparison of Pantry and BCGTV:<br /><br />Generality: BCGTV can handle arbitrary C programs. Pantry comes close to achieving this but still cannot handle data-dependent loops. BCGTV also has the advantage that it can be modified to generate circuits that satisfy the algebraic regularity conditions required by back-ends based on short PCPs (though implementations of these back-ends remain in progress). One important aspect of Pantry is that it enables the outsourcing of computations that are run over \"remote inputs\", i.e., inputs that the verifier never sees in full, but is merely provided a digest (typically a hash, or a Merkle-hash) of the input. This is important in several applications, such as verifying MapReduce computations. In principle, this feature could be incorporated into the BCGTV front-end as well, but doing so efficiently would likely require redoing many of the optimizations in Pantry.<br /><br />Efficiency: BCGTV's primary overhead stems from the fact the ~1000-gate transition function sub-circuit must be repeated for *every* step of the RAM. Thus, their circuits are at least 1000 times larger than the runtime of the RAM. Pantry on the other hand requires expensive evaluations of a collision-resistant hash function (when supporting general random access to memory, logarithmically many evaluations of the hash function are required per memory access). However, hash function evaluations in Pantry are only required when memory is accessed, not for every step of the RAM. Thus, which of the two approaches (BCGTV vs. Pantry) generates smaller circuits may depend on how memory-intensive the computation is.  <br /><br />================<br /><br />Summary:<br /><br />Ideally, this post makes clear that each of the approaches to verifiable computation being pursued thus far achieves a different tradeoff between efficiency, expressiveness, and support for features such as public verifiability and zero knowledge properties. This diversity can only be a good thing as users will be able to choose the approach that best suits their needs.<br /><br />In more detail, despite substantial progress, the fully general-purpose front-end still generates circuits that are at least three orders of magnitude larger than the runtime of original RAM computation. Moreover, existing back-ends based on argument systems with pre-processing impose an additional three orders of magnitude overhead for the prover. Arguments based on short PCPs will avoid pre-processing for the verifier, but impose additional overheads on the prover. Interactive proofs can avoid these large overheads for sufficiently structured computation, but require a front-end that generates small-depth deterministic circuits, and does not provide cryptographic properties like public verifiability and support for zero-knowledge achieved by some of the argument systems.<br /><br />Two attractive directions for future work present themselves. One is to develop protocols and build systems that can verifiably execute general computations, but that automatically leverage structure within computations for efficiency gains. Alternatively, it may be better to develop a restricted programming framework analogous to MapReduce that still allows for the expression of a powerful class of computations and automatically \"extracts\" the structure necessary to verify the computation efficiently. If this approach is pursued, it will be critical to determine the right balance between the level of generality to support and the amount of structure to force upon computations for efficiency gains.<br /><br />Acknowledgements: I am indebted to Mike Walfish and Andrew J. Blumberg for extensive conversations over several months that substantially influenced my understanding of the area and this post in particular, and to Mike Walfish and Michael Mitzenmacher for valuable feedback on an early draft of this post. Any errors are entirely my own.<br /><br />Further resources: Bryan Parno hosted a session on verifiable computation at the <a href=\"http://research.microsoft.com/en-us/events/fs2013/\"> Microsoft Research Faculty Summit</a>, where he, Michael Mitzenmacher, and Mike Walfish spoke about several of the approaches discussed in this post. Video of the session is <a href=\"http://wm.microsoft.com/ms/research/events/facultysummit13/28094.wmv\"> available</a>, and Mike's <a href=\"http://research.microsoft.com/en-us/UM/redmond/events/fs2013/presentations/Michael-Walfish_EfficientlyVerifying.pptx\">slides</a> contain a nice comparison of the various approaches.  ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/7659346441833502000/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=7659346441833502000") (title . "2 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/7659346441833502000"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/7659346441833502000"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/09/guest-post-by-justin-thaler-mini-survey.html") (title . "Guest Post by Justin Thaler: A \"Mini-Survey\" of Practical Verification Algorithms"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "2")))) ("Postdocs in Copenhagen" "I apologize for the short notice, but my occasional co-author Rasmus Pagh is looking for postdocs for a big data project he recently had funded, with an application deadline on April 14th.&nbsp;<br /><br />For more information, you can see <a href=\"https://delta.hr-manager.net/ApplicationInit.aspx?cid=119&amp;ProjectId=169635&amp;departmentId=3439&amp;uiculture=en&amp;MediaId=1282\">this page</a>, which starts with:<br /><br /><span id=\"ctl00_ctl00_CustomerTemplate_Header\"><span class=\"Body\">The  Scalable Similarity Search (SSS) project led by Professor Rasmus Pagh is  seeking 3 post-docs with a strong background in algorithms theory,  combinatorics, or statistics. The project is funded by the European  Research Council (ERC), runs in the years 2014-19, and will include a  total of 3 PhD and 3 post-doc positions. The aim of the project is to  improve theory and practice of algorithms for high-dimensional  similarity search on big data, and to extend similarity search  algorithms to work in settings where data is distributed (using a  communication complexity perspective) or uncertain (using a statistical  perspective). A post-doc position may include a long-term visit to a  project partner (at Berkeley, Harvard, MIT, Stanford, or Tsinghua) if  all parties find the visit beneficial.</span></span><br /><br /><span id=\"ctl00_ctl00_CustomerTemplate_Header\"><span class=\"Body\">Or you can see <a href=\"http://video.itu.dk/video/9592769/the-dawn-of-big-data\">this nice video</a> Rasmus recently put together. &nbsp;&nbsp;</span></span><br /><span id=\"ctl00_ctl00_CustomerTemplate_Header\"><span class=\"Body\"><br /></span></span><span id=\"ctl00_ctl00_CustomerTemplate_Header\"><span class=\"Body\">And yes, I'm self-interested in this matter, in that as someone who works with Rasmus, the potential \"long-term visit\" to Harvard described above would involve me if it worked out.&nbsp; Also, Copenhagen is a wonderful place.&nbsp; </span></span>" "http://mybiasedcoin.blogspot.com/feeds/8591947219170924116/comments/default" (21309 56064) old 1 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-8591947219170924116") (published nil "2014-04-03T18:04:00.003-04:00") (updated nil "2014-04-03T18:04:48.108-04:00") (title ((type . "text")) "Postdocs in Copenhagen") (content ((type . "html")) "I apologize for the short notice, but my occasional co-author Rasmus Pagh is looking for postdocs for a big data project he recently had funded, with an application deadline on April 14th.&nbsp;<br /><br />For more information, you can see <a href=\"https://delta.hr-manager.net/ApplicationInit.aspx?cid=119&amp;ProjectId=169635&amp;departmentId=3439&amp;uiculture=en&amp;MediaId=1282\">this page</a>, which starts with:<br /><br /><span id=\"ctl00_ctl00_CustomerTemplate_Header\"><span class=\"Body\">The  Scalable Similarity Search (SSS) project led by Professor Rasmus Pagh is  seeking 3 post-docs with a strong background in algorithms theory,  combinatorics, or statistics. The project is funded by the European  Research Council (ERC), runs in the years 2014-19, and will include a  total of 3 PhD and 3 post-doc positions. The aim of the project is to  improve theory and practice of algorithms for high-dimensional  similarity search on big data, and to extend similarity search  algorithms to work in settings where data is distributed (using a  communication complexity perspective) or uncertain (using a statistical  perspective). A post-doc position may include a long-term visit to a  project partner (at Berkeley, Harvard, MIT, Stanford, or Tsinghua) if  all parties find the visit beneficial.</span></span><br /><br /><span id=\"ctl00_ctl00_CustomerTemplate_Header\"><span class=\"Body\">Or you can see <a href=\"http://video.itu.dk/video/9592769/the-dawn-of-big-data\">this nice video</a> Rasmus recently put together. &nbsp;&nbsp;</span></span><br /><span id=\"ctl00_ctl00_CustomerTemplate_Header\"><span class=\"Body\"><br /></span></span><span id=\"ctl00_ctl00_CustomerTemplate_Header\"><span class=\"Body\">And yes, I'm self-interested in this matter, in that as someone who works with Rasmus, the potential \"long-term visit\" to Harvard described above would involve me if it worked out.&nbsp; Also, Copenhagen is a wonderful place.&nbsp; </span></span>") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/8591947219170924116/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=8591947219170924116") (title . "0 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8591947219170924116"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8591947219170924116"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/04/postdocs-in-copenhagen.html") (title . "Postdocs in Copenhagen"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "0"))) ("Hashing Summer School in Copenhagen" "Of the many, many interesting things happening in Copenhagen this summer (SEA, SWAT, ICALP) we'd like to add one more:&nbsp; a Hashing Summer School at the University of Copenhagen.&nbsp; <a href=\"http://www.diku.dk/summer-school-2014/\">Here's the web site.</a>&nbsp; This was the brainchild of Mikkel Thorup, who knows a thing or two or three about hashing, and is co-organized by me and Rasmus Pagh.&nbsp; We've got a great set of speakers, and we expect a mix of lectures, problem-solving exercises, a poster session, and other such fun and learning.&nbsp; The registration deadline is May 15th;&nbsp; check the web site for details.&nbsp; If you're coming out to Copenhagen for other activities, or just want a good reason to visit the beautiful city, take a look.&nbsp; I hope to see you there.<br /><br /><br />" "http://mybiasedcoin.blogspot.com/feeds/1637310346683079839/comments/default" (21290 54078) old 2 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-1637310346683079839") (published nil "2014-03-19T15:18:00.001-04:00") (updated nil "2014-03-20T07:38:38.683-04:00") (title ((type . "text")) "Hashing Summer School in Copenhagen") (content ((type . "html")) "Of the many, many interesting things happening in Copenhagen this summer (SEA, SWAT, ICALP) we'd like to add one more:&nbsp; a Hashing Summer School at the University of Copenhagen.&nbsp; <a href=\"http://www.diku.dk/summer-school-2014/\">Here's the web site.</a>&nbsp; This was the brainchild of Mikkel Thorup, who knows a thing or two or three about hashing, and is co-organized by me and Rasmus Pagh.&nbsp; We've got a great set of speakers, and we expect a mix of lectures, problem-solving exercises, a poster session, and other such fun and learning.&nbsp; The registration deadline is May 15th;&nbsp; check the web site for details.&nbsp; If you're coming out to Copenhagen for other activities, or just want a good reason to visit the beautiful city, take a look.&nbsp; I hope to see you there.<br /><br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/1637310346683079839/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=1637310346683079839") (title . "1 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1637310346683079839"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1637310346683079839"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/03/hashing-summer-school-in-copenhagen.html") (title . "Hashing Summer School in Copenhagen"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "1"))) ("Leslie Lamport wins Turing Awards" "In another sign that these Turing Award committees really know what they're doing,<a href=\"http://www.acm.org/press-room/news-releases/2014/turing-award-13\"> Leslie Lamport has won the Turing Award</a>.&nbsp; There's a very nice writeup including the <a href=\"http://blogs.technet.com/b/microsoft_blog/archive/2014/03/17/microsoft-s-leslie-lamport-wins-the-turing-award-the-nobel-prize-in-computing.aspx\"> history of his work</a> up on&nbsp;an official Microsoft blog post.<br /><br />While I know there are arguably many people deserving of a Turing Award, Leslie Lamport&nbsp;is an amazingly obvious and&nbsp;absolutely fantastic&nbsp;choice.&nbsp; His body of work is truly inspiring, and&nbsp;as the above links show, his work has had a huge effect on&nbsp;us all.&nbsp; &nbsp;" "http://mybiasedcoin.blogspot.com/feeds/1844672056289225060/comments/default" (21288 27205) old 3 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-1844672056289225060") (published nil "2014-03-18T11:46:00.001-04:00") (updated nil "2014-03-18T11:46:13.590-04:00") (title ((type . "text")) "Leslie Lamport wins Turing Awards") (content ((type . "html")) "In another sign that these Turing Award committees really know what they're doing,<a href=\"http://www.acm.org/press-room/news-releases/2014/turing-award-13\"> Leslie Lamport has won the Turing Award</a>.&nbsp; There's a very nice writeup including the <a href=\"http://blogs.technet.com/b/microsoft_blog/archive/2014/03/17/microsoft-s-leslie-lamport-wins-the-turing-award-the-nobel-prize-in-computing.aspx\"> history of his work</a> up on&nbsp;an official Microsoft blog post.<br /><br />While I know there are arguably many people deserving of a Turing Award, Leslie Lamport&nbsp;is an amazingly obvious and&nbsp;absolutely fantastic&nbsp;choice.&nbsp; His body of work is truly inspiring, and&nbsp;as the above links show, his work has had a huge effect on&nbsp;us all.&nbsp; &nbsp; ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/1844672056289225060/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=1844672056289225060") (title . "2 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1844672056289225060"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1844672056289225060"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/03/leslie-lamport-wins-turing-awards.html") (title . "Leslie Lamport wins Turing Awards"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "2"))) ("ICERM (Brown) Workshop on Stochastic Graph Models" "I'll be commuting throughout the week to the <a href=\"http://icerm.brown.edu/sp-s14-w2/\">ICERM Workshop on Stochastic Graph Models</a>.&nbsp; ICERM is the Institute for Computational and Experimental Research in Mathematics, a new-ish place associated with and walking distance from Brown University, and <a href=\"https://cs.brown.edu/people/eli/\">Eli Upfal</a> (among others) is making sure that it's closely connected with Brown Computer Science as well as other mathematical disciplines.&nbsp; The building is very nice and new, with a great view of Providence.&nbsp; It's also very close to the freeway.&nbsp; (Driving to the ICERM building is not much more time than driving to MSR New England from my house, even though it's more than three times the miles...)<br /><br />We've already had great talks today by several great people (Leslie Goldberg, Artur Czumaj, Susanne Albers, Flavio Chierichetti, and Gopal Pandurangan), and there's a fantastic schedule for the rest of the week.&nbsp; If you're in the neighborhood you should come on by.&nbsp; Leslie's talks on evolutionary dynamics on graphs and Flavio's on trace complexity of network reconstruction were both very close to long-time interests of mine, though it feels like it's been a while since I worked on such \"pure\" (and very pleasant) random process problems.&nbsp; I can feel the talks drawing me in...<br /><br />By the way, has anyone figured out the complexity of the <a href=\"http://gabrielecirulli.github.io/2048/\">2048 game</a> yet?&nbsp; Assuming that the game uses some stochastic model at each step, I wonder what you can say about the probability of getting to 2048 under some model of play.&nbsp; That's a stochastic model in need of analysis.&nbsp; <br />" "http://mybiasedcoin.blogspot.com/feeds/1547061377926690588/comments/default" (21287 23911) old 4 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-1547061377926690588") (published nil "2014-03-17T16:39:00.000-04:00") (updated nil "2014-03-17T16:39:03.692-04:00") (title ((type . "text")) "ICERM (Brown) Workshop on Stochastic Graph Models") (content ((type . "html")) "I'll be commuting throughout the week to the <a href=\"http://icerm.brown.edu/sp-s14-w2/\">ICERM Workshop on Stochastic Graph Models</a>.&nbsp; ICERM is the Institute for Computational and Experimental Research in Mathematics, a new-ish place associated with and walking distance from Brown University, and <a href=\"https://cs.brown.edu/people/eli/\">Eli Upfal</a> (among others) is making sure that it's closely connected with Brown Computer Science as well as other mathematical disciplines.&nbsp; The building is very nice and new, with a great view of Providence.&nbsp; It's also very close to the freeway.&nbsp; (Driving to the ICERM building is not much more time than driving to MSR New England from my house, even though it's more than three times the miles...)<br /><br />We've already had great talks today by several great people (Leslie Goldberg, Artur Czumaj, Susanne Albers, Flavio Chierichetti, and Gopal Pandurangan), and there's a fantastic schedule for the rest of the week.&nbsp; If you're in the neighborhood you should come on by.&nbsp; Leslie's talks on evolutionary dynamics on graphs and Flavio's on trace complexity of network reconstruction were both very close to long-time interests of mine, though it feels like it's been a while since I worked on such \"pure\" (and very pleasant) random process problems.&nbsp; I can feel the talks drawing me in...<br /><br />By the way, has anyone figured out the complexity of the <a href=\"http://gabrielecirulli.github.io/2048/\">2048 game</a> yet?&nbsp; Assuming that the game uses some stochastic model at each step, I wonder what you can say about the probability of getting to 2048 under some model of play.&nbsp; That's a stochastic model in need of analysis.&nbsp; <br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/1547061377926690588/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=1547061377926690588") (title . "1 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1547061377926690588"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1547061377926690588"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/03/icerm-brown-workshop-on-stochastic.html") (title . "ICERM (Brown) Workshop on Stochastic Graph Models"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "1"))) ("Those who Hire vs." "If you haven't yet, I encourage you to read the <a href=\"http://www.insidehighered.com/news/2014/03/13/lost-faculty-job-offer-raises-questions-about-negotiation-strategy\">Inside Higher Ed article</a> about a department that, when a candidate they had made an offer to attempted to negotiate the terms of that offer, then rescinded that offer.<br /><br />Let me be clear up front:&nbsp; I'm on the side that finds the department's behavior reprehensible and inexcusable.&nbsp; (As is often the case, I should acknowledge that I have only the limited information available.)&nbsp; I admit I view this in the larger picture of the current state of employer-employee relations, where I think the scale has tilted too far in favor of the employer side.&nbsp; Others have noted that there seems to be a prevailing attitude that current employers, by and large, feel employees should be grateful that they're having the opportunity to work for them, regardless of conditions.&nbsp; For a recent example article expressing this, you can read this New York Times article <a href=\"http://www.theatlantic.com/business/archive/2014/03/my-life-as-a-retail-worker-nasty-brutish-and-poor/284332/\">on \"My Life as a Retail Worker\"</a>.&nbsp; While tech workers may think they're in a happy state where employers need them so much that they have to treat them well -- something that, generally speaking, clearly has some truth to it -- I worry on the tech side that has made people complacent.&nbsp; The <a href=\"http://www.motherjones.com/politics/2014/02/google-apple-class-action-poaching-steve-jobs-wage-theft\">ongoing story about how Google and Apple (as well as other tech companies) had a secret agreement</a> not to recruit each other's employees demonstrates that, even in tech, the utility of workers and their employers may not always naturally align. &nbsp;<br /><br />Was the candidate in question asking for too much?&nbsp; I think the candidate was negotiating;&nbsp; she makes clear that she was not expecting to get everything asked for, but wanted to see what was possible.&nbsp; The department chair (or whoever was in charge) should have explained what was possible from their standpoint, and set a deadline for the candidate to decide.&nbsp; To rescind the job offer smacks of discriminatory practices -- not (necessarily) discriminating against women (an issue that has been raised in this context, since maternity leave was part of the request) -- but discriminating against employees that might think to advocate for themselves.&nbsp; Many employers seem to call employees that advocate for themselves \"troublemakers\";&nbsp; is that how we're to interpret the mindset behind the decision here?&nbsp; That's disturbing -- as a general trend in academic life and specifically with this university's behavior.&nbsp; I'd like to think people who self-advocate are desirable for tenure-track positions, not the opposite.&nbsp; <br /><br /><br />" "http://mybiasedcoin.blogspot.com/feeds/8965768034424409818/comments/default" (21283 9963) old 5 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-8965768034424409818") (published nil "2014-03-14T11:57:00.003-04:00") (updated nil "2014-03-14T11:57:31.690-04:00") (title ((type . "text")) "Those who Hire vs.") (content ((type . "html")) "If you haven't yet, I encourage you to read the <a href=\"http://www.insidehighered.com/news/2014/03/13/lost-faculty-job-offer-raises-questions-about-negotiation-strategy\">Inside Higher Ed article</a> about a department that, when a candidate they had made an offer to attempted to negotiate the terms of that offer, then rescinded that offer.<br /><br />Let me be clear up front:&nbsp; I'm on the side that finds the department's behavior reprehensible and inexcusable.&nbsp; (As is often the case, I should acknowledge that I have only the limited information available.)&nbsp; I admit I view this in the larger picture of the current state of employer-employee relations, where I think the scale has tilted too far in favor of the employer side.&nbsp; Others have noted that there seems to be a prevailing attitude that current employers, by and large, feel employees should be grateful that they're having the opportunity to work for them, regardless of conditions.&nbsp; For a recent example article expressing this, you can read this New York Times article <a href=\"http://www.theatlantic.com/business/archive/2014/03/my-life-as-a-retail-worker-nasty-brutish-and-poor/284332/\">on \"My Life as a Retail Worker\"</a>.&nbsp; While tech workers may think they're in a happy state where employers need them so much that they have to treat them well -- something that, generally speaking, clearly has some truth to it -- I worry on the tech side that has made people complacent.&nbsp; The <a href=\"http://www.motherjones.com/politics/2014/02/google-apple-class-action-poaching-steve-jobs-wage-theft\">ongoing story about how Google and Apple (as well as other tech companies) had a secret agreement</a> not to recruit each other's employees demonstrates that, even in tech, the utility of workers and their employers may not always naturally align. &nbsp;<br /><br />Was the candidate in question asking for too much?&nbsp; I think the candidate was negotiating;&nbsp; she makes clear that she was not expecting to get everything asked for, but wanted to see what was possible.&nbsp; The department chair (or whoever was in charge) should have explained what was possible from their standpoint, and set a deadline for the candidate to decide.&nbsp; To rescind the job offer smacks of discriminatory practices -- not (necessarily) discriminating against women (an issue that has been raised in this context, since maternity leave was part of the request) -- but discriminating against employees that might think to advocate for themselves.&nbsp; Many employers seem to call employees that advocate for themselves \"troublemakers\";&nbsp; is that how we're to interpret the mindset behind the decision here?&nbsp; That's disturbing -- as a general trend in academic life and specifically with this university's behavior.&nbsp; I'd like to think people who self-advocate are desirable for tenure-track positions, not the opposite.&nbsp; <br /><br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/8965768034424409818/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=8965768034424409818") (title . "10 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8965768034424409818"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8965768034424409818"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/03/those-who-hire-vs.html") (title . "Those who Hire vs."))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "10"))) ("Passing of the Professor" "Sadly, \"The Professor\", Russell Johnson, <a href=\"http://tvline.com/2014/01/16/russell-johnson-gilligans-island-professor-dead-dies-at-89/#more-486282\">has passed away</a>.&nbsp; <br /><br />I enjoyed Gilligan's Island as a kid.&nbsp; I can't help but think that his portrayal deeply affected people's perception of scientists, subconsciously or consciously, for better or worse, for a generation.&nbsp;<br /><br />Some related links.<br /><a href=\"http://www.improbable.com/2014/01/16/farewell-beloved-professor-of-gilligans-island/\">Improbable research</a>.&nbsp; <br /><a href=\"http://tvtropes.org/pmwiki/pmwiki.php/Main/TheProfessor\">TV Tropes (the Professor).</a><br /><br />Feel free to add more in comments.<br /><br />" "http://mybiasedcoin.blogspot.com/feeds/5587974123493406352/comments/default" (21208 45892) old 6 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-5587974123493406352") (published nil "2014-01-16T23:36:00.000-05:00") (updated nil "2014-01-16T23:36:20.372-05:00") (title ((type . "text")) "Passing of the Professor") (content ((type . "html")) "Sadly, \"The Professor\", Russell Johnson, <a href=\"http://tvline.com/2014/01/16/russell-johnson-gilligans-island-professor-dead-dies-at-89/#more-486282\">has passed away</a>.&nbsp; <br /><br />I enjoyed Gilligan's Island as a kid.&nbsp; I can't help but think that his portrayal deeply affected people's perception of scientists, subconsciously or consciously, for better or worse, for a generation.&nbsp;<br /><br />Some related links.<br /><a href=\"http://www.improbable.com/2014/01/16/farewell-beloved-professor-of-gilligans-island/\">Improbable research</a>.&nbsp; <br /><a href=\"http://tvtropes.org/pmwiki/pmwiki.php/Main/TheProfessor\">TV Tropes (the Professor).</a><br /><br />Feel free to add more in comments.<br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/5587974123493406352/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=5587974123493406352") (title . "3 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/5587974123493406352"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/5587974123493406352"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/01/passing-of-professor.html") (title . "Passing of the Professor"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "3"))) ("Andreessen Tweets" "My brother pointed me to <a href=\"http://www.strictlyvc.com/2014/01/12/origins-netscape-tweeted-marc-andreessen/\">this article</a> on a great exchange of tweets about the origins of Netscape.&nbsp;<br /><br />The two highlights, for me at least.&nbsp; First, Andreessen expressed a philosophy that I believe in, but I don't think most university IP departments do:&nbsp; in computer tech, the best strategy is for the university to let professors/students/other employees run with their entrpreneurial plans rather than attempt to maximize the university's short-term or nominal value extracted.&nbsp; He tweeted about how the University of Illinois lost out on the browser/Netscape process, and tweets:<br /><br /><blockquote class=\"tr_bq\">History of Stanford suggests best approach extreme laissez faire-optimize for long-term philanthropy vs short-term gain.</blockquote>and<br /><blockquote class=\"tr_bq\">Many billions of dollars of gifts from grateful alumni far outweigh commercial licensing or patent arrangements in long run.&nbsp; </blockquote>I agree with the sentiment.&nbsp; An issue is that this approach may not be best for some situations -- drug development at universities, perhaps (I don't know how that works, but I've heard it's \"different\" from an IP standpoint) -- although maybe even there a more hands-off approach from overzealous university lawyers would be best in the long run.&nbsp; (Maybe I'm too optimistic -- after all, I suggested <a href=\"http://mybiasedcoin.blogspot.com/2007/09/argument-for-tuition-free-harvard.html\">Harvard should be tuition-free</a> and could still come out ahead.)<br /><br />The other more amusing highlight is Andreessen notes that the Mosiac project applied for more NSF funding and was rejected, which pushed them to start a company.&nbsp; Which, he suggests, was probably the right decision for the NSF.&nbsp; Looking at the outcomes, there's a good argument.&nbsp; Something for me to keep in mind the next time a rejection comes -- even Marc Andreessen had proposals rejected by the NSF, and he ended up doing OK.&nbsp; <br /><br /><br />" "http://mybiasedcoin.blogspot.com/feeds/7288798722272521929/comments/default" (21205 18781) old 7 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-7288798722272521929") (published nil "2014-01-14T09:27:00.004-05:00") (updated nil "2014-01-14T09:27:41.553-05:00") (title ((type . "text")) "Andreessen Tweets") (content ((type . "html")) "My brother pointed me to <a href=\"http://www.strictlyvc.com/2014/01/12/origins-netscape-tweeted-marc-andreessen/\">this article</a> on a great exchange of tweets about the origins of Netscape.&nbsp;<br /><br />The two highlights, for me at least.&nbsp; First, Andreessen expressed a philosophy that I believe in, but I don't think most university IP departments do:&nbsp; in computer tech, the best strategy is for the university to let professors/students/other employees run with their entrpreneurial plans rather than attempt to maximize the university's short-term or nominal value extracted.&nbsp; He tweeted about how the University of Illinois lost out on the browser/Netscape process, and tweets:<br /><br /><blockquote class=\"tr_bq\">History of Stanford suggests best approach extreme laissez faire-optimize for long-term philanthropy vs short-term gain.</blockquote>and<br /><blockquote class=\"tr_bq\">Many billions of dollars of gifts from grateful alumni far outweigh commercial licensing or patent arrangements in long run.&nbsp; </blockquote>I agree with the sentiment.&nbsp; An issue is that this approach may not be best for some situations -- drug development at universities, perhaps (I don't know how that works, but I've heard it's \"different\" from an IP standpoint) -- although maybe even there a more hands-off approach from overzealous university lawyers would be best in the long run.&nbsp; (Maybe I'm too optimistic -- after all, I suggested <a href=\"http://mybiasedcoin.blogspot.com/2007/09/argument-for-tuition-free-harvard.html\">Harvard should be tuition-free</a> and could still come out ahead.)<br /><br />The other more amusing highlight is Andreessen notes that the Mosiac project applied for more NSF funding and was rejected, which pushed them to start a company.&nbsp; Which, he suggests, was probably the right decision for the NSF.&nbsp; Looking at the outcomes, there's a good argument.&nbsp; Something for me to keep in mind the next time a rejection comes -- even Marc Andreessen had proposals rejected by the NSF, and he ended up doing OK.&nbsp; <br /><br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/7288798722272521929/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=7288798722272521929") (title . "1 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/7288798722272521929"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/7288798722272521929"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/01/andreessen-tweets.html") (title . "Andreessen Tweets"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "1"))) ("Boston Magazine Piece on Aaron Swartz" "If you haven't seen it, there's <a href=\"http://www.bostonmagazine.com/news/article/2014/01/02/bob-swartz-losing-aaron/\">a well-written piece on Bob Swartz</a>, father of Aaron Swartz, in Boston Magazine, covering MITs reaction to Aaron Swartz's case.<br /><br /><br />" "http://mybiasedcoin.blogspot.com/feeds/4755187485056025188/comments/default" (21194 60171) old 8 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-4755187485056025188") (published nil "2014-01-06T12:42:00.001-05:00") (updated nil "2014-01-06T12:42:35.239-05:00") (title ((type . "text")) "Boston Magazine Piece on Aaron Swartz") (content ((type . "html")) "If you haven't seen it, there's <a href=\"http://www.bostonmagazine.com/news/article/2014/01/02/bob-swartz-losing-aaron/\">a well-written piece on Bob Swartz</a>, father of Aaron Swartz, in Boston Magazine, covering MITs reaction to Aaron Swartz's case.<br /><br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/4755187485056025188/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=4755187485056025188") (title . "0 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4755187485056025188"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4755187485056025188"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/01/boston-magazine-piece-on-aaron-swartz.html") (title . "Boston Magazine Piece on Aaron Swartz"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "0"))) ("The PhD - Tenure - Jobs Argument, Already Started for 2014" "'Tis the season when graduate applications are being decided as well as the job interview process starting again, and just in time for the new year, your regularly scheduled inflammatory article entitled, \"<a href=\"http://www.bloomberg.com/news/2014-01-03/can-t-get-tenure-then-get-a-real-job.html\">Can't Get Tenure? Then Get a Real Job</a>\" up at Bloomberg. &nbsp;The point of the article seems to be that the tenure model follows the age-old \"tournament model\" of employment, with a very few plum positions at the top, and lots of people scrambling for them -- and, along the way, essentially turning themselves into free labor for existing tenured professors, as well as (in most cases) unemployable dried out husks by their early 30's -- and that's bad. &nbsp;The only solution suggested seems to be to cut Ph.D. production, and there are no incentives to make that happen. &nbsp;(I can only encourage you to avoid reading the comments, where somehow this becomes a political issue, with \"liberals\" being to blame for... seemingly everything, I guess, but this in particular.) <br /><br />I'm always happy to admit that computer science seems to be a special case; &nbsp;industry takes many of our PhDs. &nbsp;However, without trying to dissect the article -- which is field agnostic -- I think it's healthy for computer science to regularly look at itself, and determine whether it's doing the right things. &nbsp;Here's my take on what those are, at the individual (faculty) level:<br /><br />1) &nbsp;Be honest with undergraduates. &nbsp;If you're a professor talking to an undergrad thinking about grad school, you should point out that you're the success story, not the average story. &nbsp;Point them to the <a href=\"http://cra.org/resources/taulbee/\">Taulbee survey</a> or other figures. &nbsp;Have them work out the math on potential opportunity costs. &nbsp;Whether you're positive or negative on them going to graduate school is up to you, of course, but either way you should be giving clear, factual information as well as advice.<br />2) &nbsp;Be honest with your graduate students. &nbsp;If they aren't performing, let them know they need to get better (or move on). &nbsp;(It's painful, but better for them in the long run.) &nbsp;Be sure the latest \"time-to-academic-job\" timeline is on their radar -- how many years of postdocs is becoming the norm? &nbsp;Make sure they know what skills they need to work on besides research skills -- speaking, writing, organizing, managing. <br />3) &nbsp;Controversial(?): &nbsp;encourage breadth for your students. &nbsp;It seems to me that since I was a student there's much more pressure to go deep -- to show in your PhD that you are the expert on your research area, even if that research area becomes narrow. &nbsp;The message seem to be don't waste time on classes, projects, or learning that fall outside your clear research path. &nbsp;I'm torn in advising the other direction, because I think the way the academic field is progressing, that can be a promising short-term approach if the goal is to get a tenure-track position. &nbsp;But I don't think it's good for developing a long-term career, and I don't think it's the right approach for the significant number of students who end up doing something else. &nbsp;[I'm aware I'm very biased on this issue.] &nbsp; <br /><br />At the field level, I think there are big questions, and I'm not sure how they get answered.<br /><br />1) &nbsp;Are we encouraging too much depth over breadth in our training? &nbsp;(See 3 above.) &nbsp;Is this what we want?<br />2) &nbsp;Are we OK with what seems to be a lengthening pipeline, with postdocs becoming more common (in some areas, but not all, standard) on the academic career path?<br />3) &nbsp;Do we have any sense of goals for how many graduate students go on to careers in industry, entrepreneurship, teaching (e.g., teaching university positions as opposed to research university positions), etc.? &nbsp;If so, do we want to do more to help prepare students for these types of work, which may not mirror exactly what we as professors do? &nbsp;How do we measure success for our graduate students, and how do we tell if we're doing a good job preparing students overall? <br /><br />Plenty to think about for the new year." "http://mybiasedcoin.blogspot.com/feeds/7790420513149473322/comments/default" (21193 49878) old 9 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-7790420513149473322") (published nil "2014-01-05T15:38:00.003-05:00") (updated nil "2014-01-05T15:38:46.029-05:00") (title ((type . "text")) "The PhD - Tenure - Jobs Argument, Already Started for 2014") (content ((type . "html")) "'Tis the season when graduate applications are being decided as well as the job interview process starting again, and just in time for the new year, your regularly scheduled inflammatory article entitled, \"<a href=\"http://www.bloomberg.com/news/2014-01-03/can-t-get-tenure-then-get-a-real-job.html\">Can't Get Tenure? Then Get a Real Job</a>\" up at Bloomberg. &nbsp;The point of the article seems to be that the tenure model follows the age-old \"tournament model\" of employment, with a very few plum positions at the top, and lots of people scrambling for them -- and, along the way, essentially turning themselves into free labor for existing tenured professors, as well as (in most cases) unemployable dried out husks by their early 30's -- and that's bad. &nbsp;The only solution suggested seems to be to cut Ph.D. production, and there are no incentives to make that happen. &nbsp;(I can only encourage you to avoid reading the comments, where somehow this becomes a political issue, with \"liberals\" being to blame for... seemingly everything, I guess, but this in particular.) <br /><br />I'm always happy to admit that computer science seems to be a special case; &nbsp;industry takes many of our PhDs. &nbsp;However, without trying to dissect the article -- which is field agnostic -- I think it's healthy for computer science to regularly look at itself, and determine whether it's doing the right things. &nbsp;Here's my take on what those are, at the individual (faculty) level:<br /><br />1) &nbsp;Be honest with undergraduates. &nbsp;If you're a professor talking to an undergrad thinking about grad school, you should point out that you're the success story, not the average story. &nbsp;Point them to the <a href=\"http://cra.org/resources/taulbee/\">Taulbee survey</a> or other figures. &nbsp;Have them work out the math on potential opportunity costs. &nbsp;Whether you're positive or negative on them going to graduate school is up to you, of course, but either way you should be giving clear, factual information as well as advice.<br />2) &nbsp;Be honest with your graduate students. &nbsp;If they aren't performing, let them know they need to get better (or move on). &nbsp;(It's painful, but better for them in the long run.) &nbsp;Be sure the latest \"time-to-academic-job\" timeline is on their radar -- how many years of postdocs is becoming the norm? &nbsp;Make sure they know what skills they need to work on besides research skills -- speaking, writing, organizing, managing. <br />3) &nbsp;Controversial(?): &nbsp;encourage breadth for your students. &nbsp;It seems to me that since I was a student there's much more pressure to go deep -- to show in your PhD that you are the expert on your research area, even if that research area becomes narrow. &nbsp;The message seem to be don't waste time on classes, projects, or learning that fall outside your clear research path. &nbsp;I'm torn in advising the other direction, because I think the way the academic field is progressing, that can be a promising short-term approach if the goal is to get a tenure-track position. &nbsp;But I don't think it's good for developing a long-term career, and I don't think it's the right approach for the significant number of students who end up doing something else. &nbsp;[I'm aware I'm very biased on this issue.] &nbsp; <br /><br />At the field level, I think there are big questions, and I'm not sure how they get answered.<br /><br />1) &nbsp;Are we encouraging too much depth over breadth in our training? &nbsp;(See 3 above.) &nbsp;Is this what we want?<br />2) &nbsp;Are we OK with what seems to be a lengthening pipeline, with postdocs becoming more common (in some areas, but not all, standard) on the academic career path?<br />3) &nbsp;Do we have any sense of goals for how many graduate students go on to careers in industry, entrepreneurship, teaching (e.g., teaching university positions as opposed to research university positions), etc.? &nbsp;If so, do we want to do more to help prepare students for these types of work, which may not mirror exactly what we as professors do? &nbsp;How do we measure success for our graduate students, and how do we tell if we're doing a good job preparing students overall? <br /><br />Plenty to think about for the new year. ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/7790420513149473322/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=7790420513149473322") (title . "3 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/7790420513149473322"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/7790420513149473322"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2014/01/the-phd-tenure-jobs-argument-already.html") (title . "The PhD - Tenure - Jobs Argument, Already Started for 2014"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "3"))) ("Tracking down the Harvard Non-Bomber" "This year, (allegedly) a Harvard student performed the modern equivalent of pulling a fire alarm in order to avoid a final exam, in this case by sending an e-mail claiming that there were bombs in several building throughout the campus.&nbsp; (One of many Crimson stories <a href=\"http://www.thecrimson.com/article/2013/12/17/student-charged-bomb-threat/\">here</a>.)&nbsp; <br /><br />I am proud to say that this student, who was apparently a psychology and sociology major or a prospective psychology major (<a href=\"http://www.thecrimson.com/article/2013/12/17/eldo-kim-threat-profile/\">according to Crimson reports</a>), was (allegedly) using TOR and Guerrilla Mail to try to cover his tracks.&nbsp; (See, for example, <a href=\"http://www.nbcnews.com/technology/failing-grade-alleged-harvard-bomb-hoaxer-needed-more-tor-cover-2D11767028\">this article</a>.)&nbsp; I think it shows how Harvard has made it as a computer science/engineering school, now that even our psych majors know how to set up and use tools like this.&nbsp; Years ago, before CS started taking off at Harvard, you would be hard pressed to come up with a student from a liberal arts major who could use tools like this.&nbsp; It just goes to show how the place has changed for the better.&nbsp; I like to think that, if he was a computer science major, and would have correspondingly more understanding of what tracks he was leaving (hint:&nbsp; don't use your own computer through Harvard's wi-fi when sending a bomb threat...), he might have gotten away with it, or at least been a lot harder to track down.&nbsp;<br /><br />[Just to be clear, this is very tongue-in-cheek;&nbsp; I in no way support or even really want to make light of what this student did, it's utterly reprehensible.&nbsp; And as several colleagues of mine and I have noted, he knew just enough to be dangerous-- mostly, in the end, to himself.<br /><br />Also, I was (again, along with several of my colleagues) 95+% certain right off the bat it was a student trying to escape finals.&nbsp; Besides the timing, the 4 buildings named as where bombs might be hidden included 3 big lecture buildings where exams were taking place... and a freshman dormitory.&nbsp; (In fact, MY freshman dormitory.)&nbsp; It seemed unlikely that the dorm would be on any real bomber's radar, and seemed to me to be a clear signal that one or more students were behind it all.] &nbsp;&nbsp;" "http://mybiasedcoin.blogspot.com/feeds/4152329075424512866/comments/default" (21170 34348) old 10 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-4152329075424512866") (published nil "2013-12-19T00:37:00.005-05:00") (updated nil "2013-12-19T00:37:48.679-05:00") (title ((type . "text")) "Tracking down the Harvard Non-Bomber") (content ((type . "html")) "This year, (allegedly) a Harvard student performed the modern equivalent of pulling a fire alarm in order to avoid a final exam, in this case by sending an e-mail claiming that there were bombs in several building throughout the campus.&nbsp; (One of many Crimson stories <a href=\"http://www.thecrimson.com/article/2013/12/17/student-charged-bomb-threat/\">here</a>.)&nbsp; <br /><br />I am proud to say that this student, who was apparently a psychology and sociology major or a prospective psychology major (<a href=\"http://www.thecrimson.com/article/2013/12/17/eldo-kim-threat-profile/\">according to Crimson reports</a>), was (allegedly) using TOR and Guerrilla Mail to try to cover his tracks.&nbsp; (See, for example, <a href=\"http://www.nbcnews.com/technology/failing-grade-alleged-harvard-bomb-hoaxer-needed-more-tor-cover-2D11767028\">this article</a>.)&nbsp; I think it shows how Harvard has made it as a computer science/engineering school, now that even our psych majors know how to set up and use tools like this.&nbsp; Years ago, before CS started taking off at Harvard, you would be hard pressed to come up with a student from a liberal arts major who could use tools like this.&nbsp; It just goes to show how the place has changed for the better.&nbsp; I like to think that, if he was a computer science major, and would have correspondingly more understanding of what tracks he was leaving (hint:&nbsp; don't use your own computer through Harvard's wi-fi when sending a bomb threat...), he might have gotten away with it, or at least been a lot harder to track down.&nbsp;<br /><br />[Just to be clear, this is very tongue-in-cheek;&nbsp; I in no way support or even really want to make light of what this student did, it's utterly reprehensible.&nbsp; And as several colleagues of mine and I have noted, he knew just enough to be dangerous-- mostly, in the end, to himself.<br /><br />Also, I was (again, along with several of my colleagues) 95+% certain right off the bat it was a student trying to escape finals.&nbsp; Besides the timing, the 4 buildings named as where bombs might be hidden included 3 big lecture buildings where exams were taking place... and a freshman dormitory.&nbsp; (In fact, MY freshman dormitory.)&nbsp; It seemed unlikely that the dorm would be on any real bomber's radar, and seemed to me to be a clear signal that one or more students were behind it all.] &nbsp;&nbsp; ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/4152329075424512866/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=4152329075424512866") (title . "0 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4152329075424512866"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4152329075424512866"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/12/tracking-down-harvard-non-bomber.html") (title . "Tracking down the Harvard Non-Bomber"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "0"))) ("Lesson of the Day" "Saturday I took two of my daughters to see a musical at Harvard.&nbsp; Amazingly, in the small theater, we were in front of a pair of students who seemed intent on talking throughout the performance.&nbsp; (One male, one female;&nbsp; the male did seem to be doing more of the talking.)&nbsp; The volume seemed to increase until by the end of the first act they seemed to be talking at normal conversation level. <br /><br />As soon as the curtain hit I turned and as nicely as I could (which was, probably, still with a snarl) that there were several bars and cafes available in Cambridge if they wanted to talk, but we were here to watch a show.&nbsp; I got several approving nods from around the nearby audience;&nbsp; in fact, about a minute later, an usher for the theater came over and appeared to be telling them to be quiet or get out, so others had clearly complained.<br /><br />To their credit were apologetic and stayed quiet for the second act.&nbsp; I can only hope that I helped teach these students the important lesson that conversing in a theater is a very bad idea -- probably more important that most of what I ever teach in class.&nbsp; (Although how they managed to get this far without absorbing that lesson somewhere is, I admit, beyond me.)&nbsp; My older kids already know that, but they got some useful reinforcement.&nbsp; &nbsp;" "http://mybiasedcoin.blogspot.com/feeds/2492310313157427392/comments/default" (21158 9943) old 11 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-2492310313157427392") (published nil "2013-12-09T15:23:00.006-05:00") (updated nil "2013-12-09T15:23:51.272-05:00") (title ((type . "text")) "Lesson of the Day") (content ((type . "html")) "Saturday I took two of my daughters to see a musical at Harvard.&nbsp; Amazingly, in the small theater, we were in front of a pair of students who seemed intent on talking throughout the performance.&nbsp; (One male, one female;&nbsp; the male did seem to be doing more of the talking.)&nbsp; The volume seemed to increase until by the end of the first act they seemed to be talking at normal conversation level. <br /><br />As soon as the curtain hit I turned and as nicely as I could (which was, probably, still with a snarl) that there were several bars and cafes available in Cambridge if they wanted to talk, but we were here to watch a show.&nbsp; I got several approving nods from around the nearby audience;&nbsp; in fact, about a minute later, an usher for the theater came over and appeared to be telling them to be quiet or get out, so others had clearly complained.<br /><br />To their credit were apologetic and stayed quiet for the second act.&nbsp; I can only hope that I helped teach these students the important lesson that conversing in a theater is a very bad idea -- probably more important that most of what I ever teach in class.&nbsp; (Although how they managed to get this far without absorbing that lesson somewhere is, I admit, beyond me.)&nbsp; My older kids already know that, but they got some useful reinforcement.&nbsp; &nbsp; ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/2492310313157427392/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=2492310313157427392") (title . "2 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/2492310313157427392"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/2492310313157427392"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/12/lesson-of-day.html") (title . "Lesson of the Day"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "2"))) ("Algorithmic Growth (Class Size)" "Pre-term planning numbers are in for Harvard, and it looks like the undergrad Algorithms and Data Structures class has about 175 people planning to take the course.&nbsp; That's a huge jump again over the last few years (where it's jumped from the 50s to well over 100).&nbsp; I imagine the growth is spurred by our ever-increasing enrollment numbers in the intro classes, as well as the fact that it's being taken over by a younger, dynamic, new faculty member.&nbsp; (Go Jelani Nelson.&nbsp; I can't help but think some number of students were waiting for me to go on sabbatical...)<br /><br />These numbers are usually within plus-minus 10% of the final, though there's higher variance when new instructors take over.&nbsp; If 175 became the steady state class size, it would mean a bit over 10% of the students at Harvard would take Algorithms at some point.&nbsp; I don't think I ever expected that when I started.&nbsp; <br /><br />If we can get the people resources, at some point we'll probably want to start breaking this up.&nbsp; One direction is to make an \"honors\" class that would cover more/harder material more rapidly.&nbsp; (We're thinking of making this an \"honors theory\" course, that would cover both complexity and algorithms -- 2 classes packed into 1.)&nbsp; The Math department here has done this very successfully, separating out the future Putnam winners from other students early on.&nbsp; A benefit is it leaves the remaining students happier as well, as the curve-breakers remove themselves from the regular class.&nbsp; Another possibility is to do an algorithms style class designed for non-majors, that would bring in more people not currently taking algorithms as well as some of those in the current course.&nbsp; There are \"topics\" classes like this -- the Easley/Kleinberg book <a href=\"http://www.amazon.com/gp/product/0521195330/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0521195330&amp;linkCode=as2&amp;tag=michaelmitzen-20\">Networks, Crowds, and Markets: Reasoning About a Highly Connected World</a><img alt=\"\" border=\"0\" height=\"1\" src=\"http://ir-na.amazon-adsystem.com/e/ir?t=michaelmitzen-20&amp;l=as2&amp;o=1&amp;a=0521195330\" style=\"border: none !important; margin: 0px !important;\" width=\"1\" /> is algorithmic and seems to allow an instructor to choose a desired mathematical level from a broad range -- but I don't really know of examples of something more like a standard algorithms/data structures courses designed for a broader audience than for CS majors.&nbsp; I'd be interested in pointers to and anecdotes about experiences in such classes if they exist.&nbsp;" "http://mybiasedcoin.blogspot.com/feeds/5981682082249747408/comments/default" (21151 51603) old 12 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-5981682082249747408") (published nil "2013-12-04T19:32:00.002-05:00") (updated nil "2013-12-04T19:32:19.545-05:00") (title ((type . "text")) "Algorithmic Growth (Class Size)") (content ((type . "html")) "Pre-term planning numbers are in for Harvard, and it looks like the undergrad Algorithms and Data Structures class has about 175 people planning to take the course.&nbsp; That's a huge jump again over the last few years (where it's jumped from the 50s to well over 100).&nbsp; I imagine the growth is spurred by our ever-increasing enrollment numbers in the intro classes, as well as the fact that it's being taken over by a younger, dynamic, new faculty member.&nbsp; (Go Jelani Nelson.&nbsp; I can't help but think some number of students were waiting for me to go on sabbatical...)<br /><br />These numbers are usually within plus-minus 10% of the final, though there's higher variance when new instructors take over.&nbsp; If 175 became the steady state class size, it would mean a bit over 10% of the students at Harvard would take Algorithms at some point.&nbsp; I don't think I ever expected that when I started.&nbsp; <br /><br />If we can get the people resources, at some point we'll probably want to start breaking this up.&nbsp; One direction is to make an \"honors\" class that would cover more/harder material more rapidly.&nbsp; (We're thinking of making this an \"honors theory\" course, that would cover both complexity and algorithms -- 2 classes packed into 1.)&nbsp; The Math department here has done this very successfully, separating out the future Putnam winners from other students early on.&nbsp; A benefit is it leaves the remaining students happier as well, as the curve-breakers remove themselves from the regular class.&nbsp; Another possibility is to do an algorithms style class designed for non-majors, that would bring in more people not currently taking algorithms as well as some of those in the current course.&nbsp; There are \"topics\" classes like this -- the Easley/Kleinberg book <a href=\"http://www.amazon.com/gp/product/0521195330/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0521195330&amp;linkCode=as2&amp;tag=michaelmitzen-20\">Networks, Crowds, and Markets: Reasoning About a Highly Connected World</a><img alt=\"\" border=\"0\" height=\"1\" src=\"http://ir-na.amazon-adsystem.com/e/ir?t=michaelmitzen-20&amp;l=as2&amp;o=1&amp;a=0521195330\" style=\"border: none !important; margin: 0px !important;\" width=\"1\" /> is algorithmic and seems to allow an instructor to choose a desired mathematical level from a broad range -- but I don't really know of examples of something more like a standard algorithms/data structures courses designed for a broader audience than for CS majors.&nbsp; I'd be interested in pointers to and anecdotes about experiences in such classes if they exist.&nbsp; ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/5981682082249747408/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=5981682082249747408") (title . "6 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/5981682082249747408"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/5981682082249747408"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/12/algorithmic-growth-class-size.html") (title . "Algorithmic Growth (Class Size)"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "6"))) ("News Worth Reading" "There's been plenty of interesting stuff popping up in the news, so it's time to collect a bit.<br /><br /><a href=\"http://arstechnica.com/tech-policy/2013/11/newegg-trial-crypto-legend-diffie-takes-the-stand-to-knock-out-patent/\">This article</a> describes a current patent case in cryptography, where apparently Ron Rivest testified (by deposition) and Whitfield Diffie took the stand. &nbsp;While I can't help but wonder if the article has dramatized the proceedings a bit, it does give some idea of what patent trials are like.&nbsp; I found it interesting both legally and technically.&nbsp; Anyone interested in the legal/expert witness side of technical work should find it worthwhile.<br /><br />Update: &nbsp;<a href=\"http://arstechnica.com/tech-policy/2013/11/jury-newegg-infringes-spangenberg-patent-must-pay-2-3-million/\">The case was decided</a>, as Suresh notes. <br /><br />In other legal news worth noting, <a href=\"https://www.eff.org/deeplinks/2013/11/court-upholds-legality-google-books-tremendous-victory-fair-use-and-public\">Google Books was found to be fair use</a>.&nbsp; The decision is online (and available at the link) -- I'd definitely recommend reading it if you're interested in fair use and the legal framework for how fair use is currently (at least of this decision) is understood. &nbsp; &nbsp; <br /><br />Harvard's CS50 course just made the <a href=\"http://www.bostonglobe.com/business/2013/11/26/computer-science-course-breaks-stereotypes-and-fills-halls-harvard/7XAXko7O392DiO1nAhp7dL/story.html\">Boston Globe business section</a>.&nbsp; I'll quote the conclusion from the new boss, David Parkes:&nbsp; “There’s a new willingness among the student body to take risks, to not follow what has been the default path of going into medical school or going into finance,” said David Parkes, Harvard’s dean for computer science. “I think part of it is that students are seeing a new way to contribute to society through computer science”<br /><br /><a href=\"http://neuralnetworksanddeeplearning.com/about.html\">Michael Nielsen put up a chapter</a>&nbsp;of the latest book he's working on, on neural networks.&nbsp; <br /><br />I found myself more interested than I expected when reading the article <a href=\"http://alexandreafonso.wordpress.com/2013/11/21/how-academia-resembles-a-drug-gang/\">How Academia Resembles a Drug Gang</a>.&nbsp; The issue of PhD overproduction is already well known, but this brought in a new dimension for me, with the discussion of \"dualisation\" -- employment systems with an \"insider\" class with unusually high benefits (supposedly, from the article,&nbsp;tenured professors) and a large \"outsider\" class of people trying to get on the inside and supporting their lifestyle (from the article, untenured part-time faculty and PhD students).&nbsp; Probably worth thinking about in terms of trends in our field, but also just generally, I'm now curious about the economics.&nbsp; Dualisation doesn't seem like it would lead to long-term stable systems -- what's the model?<br /><br />I'll have to pay more attention to the news myself these days.&nbsp; I was asked to serve on the <a href=\"http://cacm.acm.org/about-communications/editorial-board/\">Communications of the ACM editorial board</a>, news division, and found myself unable to find a suitable reason to decline.&nbsp; <br /><br />Finally, a&nbsp;question.&nbsp; 'Tis the season to purchase some new machinery.&nbsp; So is retina display&nbsp;for my next laptop&nbsp;a must-have, not worth it, or somewhere in between?&nbsp; I'd appreciate opinions.&nbsp; <br /><br />" "http://mybiasedcoin.blogspot.com/feeds/6768831673388568016/comments/default" (21141 12648) old 13 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-6768831673388568016") (published nil "2013-11-26T14:25:00.004-05:00") (updated nil "2013-11-26T18:40:24.783-05:00") (title ((type . "text")) "News Worth Reading") (content ((type . "html")) "There's been plenty of interesting stuff popping up in the news, so it's time to collect a bit.<br /><br /><a href=\"http://arstechnica.com/tech-policy/2013/11/newegg-trial-crypto-legend-diffie-takes-the-stand-to-knock-out-patent/\">This article</a> describes a current patent case in cryptography, where apparently Ron Rivest testified (by deposition) and Whitfield Diffie took the stand. &nbsp;While I can't help but wonder if the article has dramatized the proceedings a bit, it does give some idea of what patent trials are like.&nbsp; I found it interesting both legally and technically.&nbsp; Anyone interested in the legal/expert witness side of technical work should find it worthwhile.<br /><br />Update: &nbsp;<a href=\"http://arstechnica.com/tech-policy/2013/11/jury-newegg-infringes-spangenberg-patent-must-pay-2-3-million/\">The case was decided</a>, as Suresh notes. <br /><br />In other legal news worth noting, <a href=\"https://www.eff.org/deeplinks/2013/11/court-upholds-legality-google-books-tremendous-victory-fair-use-and-public\">Google Books was found to be fair use</a>.&nbsp; The decision is online (and available at the link) -- I'd definitely recommend reading it if you're interested in fair use and the legal framework for how fair use is currently (at least of this decision) is understood. &nbsp; &nbsp; <br /><br />Harvard's CS50 course just made the <a href=\"http://www.bostonglobe.com/business/2013/11/26/computer-science-course-breaks-stereotypes-and-fills-halls-harvard/7XAXko7O392DiO1nAhp7dL/story.html\">Boston Globe business section</a>.&nbsp; I'll quote the conclusion from the new boss, David Parkes:&nbsp; “There’s a new willingness among the student body to take risks, to not follow what has been the default path of going into medical school or going into finance,” said David Parkes, Harvard’s dean for computer science. “I think part of it is that students are seeing a new way to contribute to society through computer science”<br /><br /><a href=\"http://neuralnetworksanddeeplearning.com/about.html\">Michael Nielsen put up a chapter</a>&nbsp;of the latest book he's working on, on neural networks.&nbsp; <br /><br />I found myself more interested than I expected when reading the article <a href=\"http://alexandreafonso.wordpress.com/2013/11/21/how-academia-resembles-a-drug-gang/\">How Academia Resembles a Drug Gang</a>.&nbsp; The issue of PhD overproduction is already well known, but this brought in a new dimension for me, with the discussion of \"dualisation\" -- employment systems with an \"insider\" class with unusually high benefits (supposedly, from the article,&nbsp;tenured professors) and a large \"outsider\" class of people trying to get on the inside and supporting their lifestyle (from the article, untenured part-time faculty and PhD students).&nbsp; Probably worth thinking about in terms of trends in our field, but also just generally, I'm now curious about the economics.&nbsp; Dualisation doesn't seem like it would lead to long-term stable systems -- what's the model?<br /><br />I'll have to pay more attention to the news myself these days.&nbsp; I was asked to serve on the <a href=\"http://cacm.acm.org/about-communications/editorial-board/\">Communications of the ACM editorial board</a>, news division, and found myself unable to find a suitable reason to decline.&nbsp; <br /><br />Finally, a&nbsp;question.&nbsp; 'Tis the season to purchase some new machinery.&nbsp; So is retina display&nbsp;for my next laptop&nbsp;a must-have, not worth it, or somewhere in between?&nbsp; I'd appreciate opinions.&nbsp; <br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/6768831673388568016/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=6768831673388568016") (title . "5 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/6768831673388568016"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/6768831673388568016"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/11/news-worth-reading.html") (title . "News Worth Reading"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "5"))) ("Easy Now" "In the past year or so, I've gotten reviews back on multiple papers with the complaint that the result was too simple.&nbsp; My interpretation of review: sure you might have come up with an efficient data structure that solved an at least seemingly interesting and/or useful problem, but wasn't the underlying math and/or data structure approach \"too easy\"?&nbsp; (The reviews were either from theory conferences or, my interpretation, from theoretically minded reviewers in settings where there might have been a mix on reviewers.)&nbsp; I'll admit, it's a bit disheartening.&nbsp; And I'll also acknowledge that blogging about it probably seems like sour grapes.&nbsp; But here it goes. &nbsp;&nbsp; <br /><br />From my standpoint, easy is a plus, not a minus.&nbsp; I've taken to describing it this way.&nbsp; In computer science we're used to measuring algorithms and data structures in terms of the two basic tradeoff costs -- time and space.&nbsp; The third basic cost -- error -- takes some people a while to get used to.&nbsp; That is, your algorithm can be \"wrong\" (either probabilistically, or in that it gives an approximate answer) in some hopefully well-defined way in order to trade off against time and space needs -- many times you're willing to settle for a good answer instead of the optimal answer if it's much quicker.&nbsp; But there's also a 4th basic tradeoff cost -- programmer time -- that I find the theory community is happy to just ignore.&nbsp; Simple is good, because more people will use simple things, even if they're not the most efficient possible, because often the usual time/space efficiency isn't really the bottleneck.&nbsp; Coding up something that works is.&nbsp; This is why Bloom filters show up in most of my talks (<a href=\"http://mybiasedcoin.blogspot.com/2013/10/mitzenmacher-drinking-game.html\">Suresh, drink!</a>);&nbsp; for me they provide an outstanding example of issues related to the 3rd and 4th tradeoff costs.<br /><br />But I was inspired to go ahead and post something about this because of <a href=\"http://krugman.blogs.nytimes.com/2013/11/18/the-power-of-two-extra-wonkish/?_r=0\">the following from Paul Krugman's blog today</a>.&nbsp; (His title is \"The Power of Two\" -- if that's not a sign, what is?)&nbsp; I figured he says it (everything?) better than I could, though you'll have to substitute CS keywords for economics keywords in the below.&nbsp;&nbsp; <br /><blockquote class=\"tr_bq\">If this strikes you as too easy, and you think that real economics  should involve harder math, well, I feel sorry for you — you just don’t  get what it’s all about. (You’re what Rudi Dornbusch used to call a  “fearful plumber”). And by the way, coming up with a really simple  formulation of what seems at first like a very hard problem can take a  lot of work. It sure did in the case of the MF lecture, where I actually  did start with a really ugly saddle-path thingie until I realized that  formulating the sudden stop the right way would make all of that go  away. <br /> <br />Simple doesn’t mean stupid. Thinking that it does, does.</blockquote>&nbsp;&nbsp; &nbsp;&nbsp; <br /><br /><br />" "http://mybiasedcoin.blogspot.com/feeds/8634188427292206605/comments/default" (21130 23443) old 14 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-8634188427292206605") (published nil "2013-11-18T13:25:00.001-05:00") (updated nil "2013-11-18T13:25:23.294-05:00") (title ((type . "text")) "Easy Now") (content ((type . "html")) "In the past year or so, I've gotten reviews back on multiple papers with the complaint that the result was too simple.&nbsp; My interpretation of review: sure you might have come up with an efficient data structure that solved an at least seemingly interesting and/or useful problem, but wasn't the underlying math and/or data structure approach \"too easy\"?&nbsp; (The reviews were either from theory conferences or, my interpretation, from theoretically minded reviewers in settings where there might have been a mix on reviewers.)&nbsp; I'll admit, it's a bit disheartening.&nbsp; And I'll also acknowledge that blogging about it probably seems like sour grapes.&nbsp; But here it goes. &nbsp;&nbsp; <br /><br />From my standpoint, easy is a plus, not a minus.&nbsp; I've taken to describing it this way.&nbsp; In computer science we're used to measuring algorithms and data structures in terms of the two basic tradeoff costs -- time and space.&nbsp; The third basic cost -- error -- takes some people a while to get used to.&nbsp; That is, your algorithm can be \"wrong\" (either probabilistically, or in that it gives an approximate answer) in some hopefully well-defined way in order to trade off against time and space needs -- many times you're willing to settle for a good answer instead of the optimal answer if it's much quicker.&nbsp; But there's also a 4th basic tradeoff cost -- programmer time -- that I find the theory community is happy to just ignore.&nbsp; Simple is good, because more people will use simple things, even if they're not the most efficient possible, because often the usual time/space efficiency isn't really the bottleneck.&nbsp; Coding up something that works is.&nbsp; This is why Bloom filters show up in most of my talks (<a href=\"http://mybiasedcoin.blogspot.com/2013/10/mitzenmacher-drinking-game.html\">Suresh, drink!</a>);&nbsp; for me they provide an outstanding example of issues related to the 3rd and 4th tradeoff costs.<br /><br />But I was inspired to go ahead and post something about this because of <a href=\"http://krugman.blogs.nytimes.com/2013/11/18/the-power-of-two-extra-wonkish/?_r=0\">the following from Paul Krugman's blog today</a>.&nbsp; (His title is \"The Power of Two\" -- if that's not a sign, what is?)&nbsp; I figured he says it (everything?) better than I could, though you'll have to substitute CS keywords for economics keywords in the below.&nbsp;&nbsp; <br /><blockquote class=\"tr_bq\">If this strikes you as too easy, and you think that real economics  should involve harder math, well, I feel sorry for you — you just don’t  get what it’s all about. (You’re what Rudi Dornbusch used to call a  “fearful plumber”). And by the way, coming up with a really simple  formulation of what seems at first like a very hard problem can take a  lot of work. It sure did in the case of the MF lecture, where I actually  did start with a really ugly saddle-path thingie until I realized that  formulating the sudden stop the right way would make all of that go  away. <br /> <br />Simple doesn’t mean stupid. Thinking that it does, does.</blockquote>&nbsp;&nbsp; &nbsp;&nbsp; <br /><br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/8634188427292206605/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=8634188427292206605") (title . "20 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8634188427292206605"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8634188427292206605"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/11/easy-now.html") (title . "Easy Now"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "20"))) ("Visiting UC Davis" "Before returning home last week I spent a day at UC Davis giving a talk.&nbsp; I got the spend the day talking to various people I've collaborated with there (like <a href=\"http://mae.ucdavis.edu/dsouza/\">Raissa D'Souza</a>, <a href=\"http://www.cs.ucdavis.edu/~amenta/\">Nina Amenta</a>, and <a href=\"http://www.ece.ucdavis.edu/~jowens/\">John Owens</a>), and enjoyed getting to see and talk with <a href=\"http://www.cs.ucdavis.edu/~martel/main/\">Charles (Chip) Martel</a>, who when he's not busy as a computer science professor is busy being a world championship bridge player.&nbsp; I spent several nights up late last month watching him play (via bridge's version of an Internet broadcast) online in the world championships in Bali.&nbsp;<br /><br />The big news was that Davis looks to be hiring this year, and one of the areas might be some variation of \"big data\", with theoretical types definitely included that category.&nbsp; Davis is nicely located about an hour's drive north of Berkeley (in reasonable traffic), and enjoys standard California amenities.&nbsp; (The day there was filled with ridiculously nice weather and excellent food.)&nbsp; If you're job searching, you should look for their job announcement." "http://mybiasedcoin.blogspot.com/feeds/3501454801690256578/comments/default" (21103 47322) old 15 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-3501454801690256578") (published nil "2013-10-29T09:32:00.002-04:00") (updated nil "2013-10-29T09:32:10.993-04:00") (title ((type . "text")) "Visiting UC Davis") (content ((type . "html")) "Before returning home last week I spent a day at UC Davis giving a talk.&nbsp; I got the spend the day talking to various people I've collaborated with there (like <a href=\"http://mae.ucdavis.edu/dsouza/\">Raissa D'Souza</a>, <a href=\"http://www.cs.ucdavis.edu/~amenta/\">Nina Amenta</a>, and <a href=\"http://www.ece.ucdavis.edu/~jowens/\">John Owens</a>), and enjoyed getting to see and talk with <a href=\"http://www.cs.ucdavis.edu/~martel/main/\">Charles (Chip) Martel</a>, who when he's not busy as a computer science professor is busy being a world championship bridge player.&nbsp; I spent several nights up late last month watching him play (via bridge's version of an Internet broadcast) online in the world championships in Bali.&nbsp;<br /><br />The big news was that Davis looks to be hiring this year, and one of the areas might be some variation of \"big data\", with theoretical types definitely included that category.&nbsp; Davis is nicely located about an hour's drive north of Berkeley (in reasonable traffic), and enjoys standard California amenities.&nbsp; (The day there was filled with ridiculously nice weather and excellent food.)&nbsp; If you're job searching, you should look for their job announcement. ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/3501454801690256578/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=3501454801690256578") (title . "0 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/3501454801690256578"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/3501454801690256578"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/10/visiting-uc-davis.html") (title . "Visiting UC Davis"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "0"))) ("Mitzenmacher Drinking Game?" "I've been visiting the Simons Institute for one of their workshops the last few days.&nbsp; I got my advisor Alistair Sinclair to give me a tour.&nbsp; I have to say, that's an amazing space they have.&nbsp; A very nice building, and they've set it up wonderfully (lots of light and open working spaces).&nbsp; I can't believe their location on the Berkeley campus.&nbsp;<br /><br />After my talk, someone told me (and now I forget who) that someone (Michael Goodrich?) said that the Mitzenmacher talk drinking game was that you took a drink every time a slide says \"Bloom\" or \"cuckoo\".&nbsp; That would be a dangerous drinking game.&nbsp; (It's funny because it's true.)" "http://mybiasedcoin.blogspot.com/feeds/886414644476230917/comments/default" (21097 22589) old 16 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-886414644476230917") (published nil "2013-10-24T13:26:00.002-04:00") (updated nil "2013-10-24T13:26:21.918-04:00") (title ((type . "text")) "Mitzenmacher Drinking Game?") (content ((type . "html")) "I've been visiting the Simons Institute for one of their workshops the last few days.&nbsp; I got my advisor Alistair Sinclair to give me a tour.&nbsp; I have to say, that's an amazing space they have.&nbsp; A very nice building, and they've set it up wonderfully (lots of light and open working spaces).&nbsp; I can't believe their location on the Berkeley campus.&nbsp;<br /><br />After my talk, someone told me (and now I forget who) that someone (Michael Goodrich?) said that the Mitzenmacher talk drinking game was that you took a drink every time a slide says \"Bloom\" or \"cuckoo\".&nbsp; That would be a dangerous drinking game.&nbsp; (It's funny because it's true.)") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/886414644476230917/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=886414644476230917") (title . "3 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/886414644476230917"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/886414644476230917"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/10/mitzenmacher-drinking-game.html") (title . "Mitzenmacher Drinking Game?"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "3"))) ("NSF Coming Back Online" "I was impressed how quickly the NSF got Fastlane back online.&nbsp; (I think it was turned on a few hours after the shutdown was ended.)&nbsp; But like many people, I'm awaiting to hear how the missed deadlines (or upcoming deadlines) will be manged.&nbsp; I haven't seen word on that on the web site, but looking online I found <a href=\"http://news.sciencemag.org/funding/2013/10/nsf-asks-scientists-give-it-time-regroup-after-shutdown\">this article</a>.&nbsp; It suggests that \"BFA will establish and publish on the NSF website within one week  agency-wide policies for proposal deadline extensions and other  grant-related actions.\"&nbsp; (I am not sure what the BFA is.)&nbsp; That pretty much matches my expectations.&nbsp; I can imagine it's very difficult catching up after being shut out of your office for two weeks, especially when having to deal with the concerns of hundreds/thousands of scientists who want to find out what's going on.&nbsp; I'm not at all surprised that they have to take several days to figure out what the best way forward is.&nbsp; Heck, it probably will take several days just to catch up with the weeks of e-mail and other paperwork.&nbsp; <br /><br />I think the article is encouraging patience on our part.&nbsp; If you're awaiting word, just check into the NSF web site this week.&nbsp; If you see or hear anything important, try to help spread the word.&nbsp; The NSF has, in my experience, been very reasonable about dealing with things, and I'm sure they're working to figure out a way forward that is effective and fair to the people waiting to turn in proposals or otherwise participate in NSF activities.<br /><br />" "http://mybiasedcoin.blogspot.com/feeds/6483332406092853983/comments/default" (21091 59956) old 17 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-6483332406092853983") (published nil "2013-10-20T10:35:00.003-04:00") (updated nil "2013-10-20T10:35:32.270-04:00") (title ((type . "text")) "NSF Coming Back Online") (content ((type . "html")) "I was impressed how quickly the NSF got Fastlane back online.&nbsp; (I think it was turned on a few hours after the shutdown was ended.)&nbsp; But like many people, I'm awaiting to hear how the missed deadlines (or upcoming deadlines) will be manged.&nbsp; I haven't seen word on that on the web site, but looking online I found <a href=\"http://news.sciencemag.org/funding/2013/10/nsf-asks-scientists-give-it-time-regroup-after-shutdown\">this article</a>.&nbsp; It suggests that \"BFA will establish and publish on the NSF website within one week  agency-wide policies for proposal deadline extensions and other  grant-related actions.\"&nbsp; (I am not sure what the BFA is.)&nbsp; That pretty much matches my expectations.&nbsp; I can imagine it's very difficult catching up after being shut out of your office for two weeks, especially when having to deal with the concerns of hundreds/thousands of scientists who want to find out what's going on.&nbsp; I'm not at all surprised that they have to take several days to figure out what the best way forward is.&nbsp; Heck, it probably will take several days just to catch up with the weeks of e-mail and other paperwork.&nbsp; <br /><br />I think the article is encouraging patience on our part.&nbsp; If you're awaiting word, just check into the NSF web site this week.&nbsp; If you see or hear anything important, try to help spread the word.&nbsp; The NSF has, in my experience, been very reasonable about dealing with things, and I'm sure they're working to figure out a way forward that is effective and fair to the people waiting to turn in proposals or otherwise participate in NSF activities.<br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/6483332406092853983/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=6483332406092853983") (title . "1 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/6483332406092853983"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/6483332406092853983"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/10/nsf-coming-back-online.html") (title . "NSF Coming Back Online"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "1"))) ("Simons Research Fellowships Post" "Alistair Sinclair asked me to post a note about the Simons Research Fellowships positions at Berkeley.&nbsp; But since that's where Justin Thaler (my now-ex student) ended up, I thought he could put in a few words about his experience to add a personal effect.&nbsp; Justin says...<br /><blockquote class=\"tr_bq\">Having been a Research Fellow at the Simons Institute for a couple of months now,  I cannot speak highly enough about the experience.  <a href=\"https://blogs.princeton.edu/imabandit/2013/09/02/first-week-of-activity-at-the-simons-institute/\">Others</a>   <a href=\"http://mrtz.org/blog/what-should-a-theory-of-big-data-do/\">have</a>    <a href=\"http://geomblog.blogspot.com/2013/09/life-at-simons.html\">already</a>    <a href=\"http://mrtz.org/blog/sparse-recovery/\">given</a>  a sense of how exciting it is  to be here, so I'll just briefly list some of the things I find most striking  about the place. <br /><br />* The atmosphere is surprisingly collaborative, even for a place specifically designed to foster collaboration.<br />* Any time I have a question I can't answer, there is an expert's door I can immediately knock on.<br />* There's a great mix of junior and senior people.<br />* It's particularly fun hanging out with other Research Fellows! And I look forward to every Friday, when we all meet for lunch and one of us gives a short, informal talk on, well, whatever that person wants to talk about.<br />* Seriously, what's not to like about having no non-research responsibilities, surrounded by dozens of top researchers in the same boat?</blockquote>With that very positive description, here's the formal information:<br /><br /><div>==============================<wbr></wbr>==============================<wbr></wbr>====</div><div><br /></div><div>The  Simons Institute for the Theory of Computing at UC Berkeley invites  applications for Research Fellowships for academic year 2014-15.</div><br />Simons-Berkeley  Research Fellowships are an opportunity for outstanding junior  scientists (up to 6 years from PhD by Fall 2014) to spend one or two  semesters at the Institute in connection with one or more of its  programs. &nbsp;The programs for 2014-15 are as follows:<br /><br />* Algorithmic Spectral Graph Theory (Fall 2014)<br />* Algorithms and Complexity in Algebraic Geometry (Fall 2014)<br />* Information Theory (Spring 2015)<br /><br />Applicants  who already hold junior faculty or postdoctoral positions are welcome  to apply. In particular, applicants who hold, or expect to hold,  postdoctoral appointments at other institutions are encouraged to apply  to spend one semester as a Simons-Berkeley Fellow subject to the  approval of the postdoctoral institution.<br /><br />Further details and application instructions can be found at&nbsp;<a href=\"http://simons.berkeley.edu/fellows2014\" target=\"_blank\">http://simons.berkeley.edu/<wbr></wbr>fellows2014</a>. &nbsp;Information about the Institute and the above programs can be found at&nbsp;<a href=\"http://simons.berkeley.edu/\" target=\"_blank\">http://simons.berkeley.edu</a>.<br /><br /><b>Deadline for applications: <span class=\"aBn\" data-term=\"goog_987142274\" tabindex=\"0\"><span class=\"aQJ\">15 December, 2013</span></span>.</b><br /><br />" "http://mybiasedcoin.blogspot.com/feeds/4154998088855496946/comments/default" (21088 14029) old 18 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-4154998088855496946") (published nil "2013-10-17T12:57:00.001-04:00") (updated nil "2013-10-17T15:13:17.868-04:00") (title ((type . "text")) "Simons Research Fellowships Post") (content ((type . "html")) "Alistair Sinclair asked me to post a note about the Simons Research Fellowships positions at Berkeley.&nbsp; But since that's where Justin Thaler (my now-ex student) ended up, I thought he could put in a few words about his experience to add a personal effect.&nbsp; Justin says...<br /><blockquote class=\"tr_bq\">Having been a Research Fellow at the Simons Institute for a couple of months now,  I cannot speak highly enough about the experience.  <a href=\"https://blogs.princeton.edu/imabandit/2013/09/02/first-week-of-activity-at-the-simons-institute/\">Others</a>   <a href=\"http://mrtz.org/blog/what-should-a-theory-of-big-data-do/\">have</a>    <a href=\"http://geomblog.blogspot.com/2013/09/life-at-simons.html\">already</a>    <a href=\"http://mrtz.org/blog/sparse-recovery/\">given</a>  a sense of how exciting it is  to be here, so I'll just briefly list some of the things I find most striking  about the place. <br /><br />* The atmosphere is surprisingly collaborative, even for a place specifically designed to foster collaboration.<br />* Any time I have a question I can't answer, there is an expert's door I can immediately knock on.<br />* There's a great mix of junior and senior people.<br />* It's particularly fun hanging out with other Research Fellows! And I look forward to every Friday, when we all meet for lunch and one of us gives a short, informal talk on, well, whatever that person wants to talk about.<br />* Seriously, what's not to like about having no non-research responsibilities, surrounded by dozens of top researchers in the same boat?</blockquote>With that very positive description, here's the formal information:<br /><br /><div>==============================<wbr></wbr>==============================<wbr></wbr>====</div><div><br /></div><div>The  Simons Institute for the Theory of Computing at UC Berkeley invites  applications for Research Fellowships for academic year 2014-15.</div><br />Simons-Berkeley  Research Fellowships are an opportunity for outstanding junior  scientists (up to 6 years from PhD by Fall 2014) to spend one or two  semesters at the Institute in connection with one or more of its  programs. &nbsp;The programs for 2014-15 are as follows:<br /><br />* Algorithmic Spectral Graph Theory (Fall 2014)<br />* Algorithms and Complexity in Algebraic Geometry (Fall 2014)<br />* Information Theory (Spring 2015)<br /><br />Applicants  who already hold junior faculty or postdoctoral positions are welcome  to apply. In particular, applicants who hold, or expect to hold,  postdoctoral appointments at other institutions are encouraged to apply  to spend one semester as a Simons-Berkeley Fellow subject to the  approval of the postdoctoral institution.<br /><br />Further details and application instructions can be found at&nbsp;<a href=\"http://simons.berkeley.edu/fellows2014\" target=\"_blank\">http://simons.berkeley.edu/<wbr></wbr>fellows2014</a>. &nbsp;Information about the Institute and the above programs can be found at&nbsp;<a href=\"http://simons.berkeley.edu/\" target=\"_blank\">http://simons.berkeley.edu</a>.<br /><br /><b>Deadline for applications: <span class=\"aBn\" data-term=\"goog_987142274\" tabindex=\"0\"><span class=\"aQJ\">15 December, 2013</span></span>.</b><br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/4154998088855496946/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=4154998088855496946") (title . "2 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4154998088855496946"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4154998088855496946"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/10/simons-postdocs-post.html") (title . "Simons Research Fellowships Post"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "2"))) ("Some Advice on Entrepreneurship from the AH meeting" "At the Andreessen Horowitz academic round table (<a href=\"http://mybiasedcoin.blogspot.com/2013/09/notes-from-andreessen-horowitz-academic.html\">see past pos</a>t), there was various advice, some of it contradictory, for professor-types interested in starting companies.&nbsp; I should start by saying that all of this is my interpretation of the advice, and the various people involved are not responsible if I've gotten it wrong.&nbsp; Certainly further opinions are welcome. &nbsp; <br /><br />At the research level, Nick McKeown expressed some of his rules for research projects.<br /><br />1. Pick a problem that is intellectually interesting.<br />2. And improves the practice.<br />3. And industry doesn't like (yet).<br /><br />His idea (my interpretation!) was that if industry liked the idea, then the problem wasn't out there enough in terms of a time horizon.&nbsp; Also, given the resources in industry, if industry really liked an idea, they could throw more resources at it than researchers at a university.&nbsp; This idea had some pushback.&nbsp; For example, Michael Franklin said the <a href=\"https://amplab.cs.berkeley.edu/\">AMPLab at Berkeley</a> had a lot of enthusiasm from industry, and that the industry support and interest was very positive in terms of their success.&nbsp; (AH very recently funded a startup that came out of the AMPLab.&nbsp; And the AMPLab is very impressive in terms of its resources, including people -- lots of great faculty.)<br /><br />I will say that part of Nick's conception resonated with me.&nbsp; When I've expanded my research into new areas, I've found at times that people in that area can be very negative.&nbsp; And when that happens, it often turns out to be the most interesting research.&nbsp; The work on low-density parity-check codes from way back when was roundly criticized by multiple old-guard coding theorists when we first presented it, and then suddenly there were entire sessions at coding theory conferences on the subject.&nbsp; If you're inspiring angry reactions, you may indeed be on to something in your research.&nbsp; (Of course, as he also acknowledged, you may also just be wrong.) <br /><br />Another key issue that arose was \"commitment\".&nbsp; The VCs at AH expressed some skepticism for professors who wanted to take a year (or maybe two) off to help set up a company but then hand it off and go back to their regular job.&nbsp; Besides investing in an idea, they're investing in a team, and it's not a great sign if the team leader isn't committed.&nbsp; Also, there's the feeling that that sort of change in leadership can have a huge transition cost.&nbsp; (Also, I think, as I mentioned previously, they really seem to like working with tech CEO's.&nbsp; Handing a company off may remove the \"tech\" leadership.)&nbsp; They were fine with a model where it was professors and graduate students starting a company, and the commitment was coming from the graduate students;&nbsp; in that case, a \"part-time\" professor founder could be workable. <br /><br />I personally think the \"commitment\" issue can be a challenge.&nbsp; It's a problem for me, with liking my regular job so much.<br /><br />There was various talk about patents.&nbsp; Most of the crowd were against making them a priority in starting a business, and recommended not getting them.&nbsp; A patent, it is said, is just a license to sue, and who needs or even wants a license to sue?&nbsp; Making your work open-source to get excitement and interest, and then commercialize after that point, can be a very successful business model, and maintains the academic desire to get the basic work out to a wide audience.&nbsp; But perhaps most importantly, as an academic, patenting your work means dealing with your school's version of the Technology Licensing Office, and nobody says anything good about their Technology licensing offices.&nbsp; (Even the west coast schools -- the best anyone said is that generally theirs would stay out of your way.)&nbsp; A patent gives your TLO license to ask for whatever percentage of your soon-to-be company they feel like asking for, and until they sign off, it can be hard to get a VC interested in a company where another entity holds the patent.&nbsp; And generally speaking, your success is not their performance metric.<br /><br />(Two quick additional points related to TLOs.&nbsp; Many noted that most TLOs have been brought up by the medical school/biology groups in the university, where patents matter a lot and licensing is a strong way to go.&nbsp; That's much less so in CS tech.&nbsp; Also, while you'd think TLOs would be thrilled to have professors/graduate students start companies, get very wealthy, and donate back to the university -- that doesn't seem to be their model, as enlightened as it might seem to us.) &nbsp; <br /><br />I certainly know some cases where patents at least seem to me to have been important to \"startup\" companies.&nbsp; (Akamai/Limelight?)&nbsp;&nbsp;&nbsp; But the rest of what was said seemed to make a lot of sense. &nbsp;&nbsp; <br /><br />One thing the VCs emphasized is the importance of timing.&nbsp; They said the idea behind many startups had actually been around for a while, the subject of study in universities or labs, but often the timing has to be right to make the move into the product space.&nbsp; Sometimes other technology has to catch up, or something else in the environment has to go your way.&nbsp; A lot of \"failures\" may not be failures of the idea, but just not the right timing. &nbsp; <br /><br />It was expressed that startups that have a mission to change the world in some interesting way were better off than startups whose mission was just to make money.&nbsp; In particular, it can help recruit the best and the brightest, creating a very powerful positive feedback loop.&nbsp; Simply stated missions -- Google says theirs is to \"<a href=\"http://www.google.com/about/company/\">organize the world's information and make it universally accessible and useful</a>\" -- can be quite powerful.&nbsp; The cynical might question people's motivations and whether money is really what's behind the mission, but either way, missions can be useful.<br /><br />Finally, and perhaps this isn't so surprising, but the best way to connect with VCs is probably through personal connections.&nbsp; If you know someone that's worked with the VCs, get them to introduce you.&nbsp; The VCs apparently get thousands of proposals sent to them a year, and very few of those get consideration.&nbsp; Having someone they trust vouch for you means a lot in terms of them being willing to make time to listen to you.&nbsp; That's not unlike aspects of academia (the importance of letters for jobs/graduate school;&nbsp; in some cases connections being helpful for getting funding from industry).&nbsp; While not surprising, it seems worth saying.&nbsp;" "http://mybiasedcoin.blogspot.com/feeds/8935780820639444860/comments/default" (21068 49205) old 19 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-8935780820639444860") (published nil "2013-10-02T20:54:00.001-04:00") (updated nil "2013-10-02T20:54:13.301-04:00") (title ((type . "text")) "Some Advice on Entrepreneurship from the AH meeting") (content ((type . "html")) "At the Andreessen Horowitz academic round table (<a href=\"http://mybiasedcoin.blogspot.com/2013/09/notes-from-andreessen-horowitz-academic.html\">see past pos</a>t), there was various advice, some of it contradictory, for professor-types interested in starting companies.&nbsp; I should start by saying that all of this is my interpretation of the advice, and the various people involved are not responsible if I've gotten it wrong.&nbsp; Certainly further opinions are welcome. &nbsp; <br /><br />At the research level, Nick McKeown expressed some of his rules for research projects.<br /><br />1. Pick a problem that is intellectually interesting.<br />2. And improves the practice.<br />3. And industry doesn't like (yet).<br /><br />His idea (my interpretation!) was that if industry liked the idea, then the problem wasn't out there enough in terms of a time horizon.&nbsp; Also, given the resources in industry, if industry really liked an idea, they could throw more resources at it than researchers at a university.&nbsp; This idea had some pushback.&nbsp; For example, Michael Franklin said the <a href=\"https://amplab.cs.berkeley.edu/\">AMPLab at Berkeley</a> had a lot of enthusiasm from industry, and that the industry support and interest was very positive in terms of their success.&nbsp; (AH very recently funded a startup that came out of the AMPLab.&nbsp; And the AMPLab is very impressive in terms of its resources, including people -- lots of great faculty.)<br /><br />I will say that part of Nick's conception resonated with me.&nbsp; When I've expanded my research into new areas, I've found at times that people in that area can be very negative.&nbsp; And when that happens, it often turns out to be the most interesting research.&nbsp; The work on low-density parity-check codes from way back when was roundly criticized by multiple old-guard coding theorists when we first presented it, and then suddenly there were entire sessions at coding theory conferences on the subject.&nbsp; If you're inspiring angry reactions, you may indeed be on to something in your research.&nbsp; (Of course, as he also acknowledged, you may also just be wrong.) <br /><br />Another key issue that arose was \"commitment\".&nbsp; The VCs at AH expressed some skepticism for professors who wanted to take a year (or maybe two) off to help set up a company but then hand it off and go back to their regular job.&nbsp; Besides investing in an idea, they're investing in a team, and it's not a great sign if the team leader isn't committed.&nbsp; Also, there's the feeling that that sort of change in leadership can have a huge transition cost.&nbsp; (Also, I think, as I mentioned previously, they really seem to like working with tech CEO's.&nbsp; Handing a company off may remove the \"tech\" leadership.)&nbsp; They were fine with a model where it was professors and graduate students starting a company, and the commitment was coming from the graduate students;&nbsp; in that case, a \"part-time\" professor founder could be workable. <br /><br />I personally think the \"commitment\" issue can be a challenge.&nbsp; It's a problem for me, with liking my regular job so much.<br /><br />There was various talk about patents.&nbsp; Most of the crowd were against making them a priority in starting a business, and recommended not getting them.&nbsp; A patent, it is said, is just a license to sue, and who needs or even wants a license to sue?&nbsp; Making your work open-source to get excitement and interest, and then commercialize after that point, can be a very successful business model, and maintains the academic desire to get the basic work out to a wide audience.&nbsp; But perhaps most importantly, as an academic, patenting your work means dealing with your school's version of the Technology Licensing Office, and nobody says anything good about their Technology licensing offices.&nbsp; (Even the west coast schools -- the best anyone said is that generally theirs would stay out of your way.)&nbsp; A patent gives your TLO license to ask for whatever percentage of your soon-to-be company they feel like asking for, and until they sign off, it can be hard to get a VC interested in a company where another entity holds the patent.&nbsp; And generally speaking, your success is not their performance metric.<br /><br />(Two quick additional points related to TLOs.&nbsp; Many noted that most TLOs have been brought up by the medical school/biology groups in the university, where patents matter a lot and licensing is a strong way to go.&nbsp; That's much less so in CS tech.&nbsp; Also, while you'd think TLOs would be thrilled to have professors/graduate students start companies, get very wealthy, and donate back to the university -- that doesn't seem to be their model, as enlightened as it might seem to us.) &nbsp; <br /><br />I certainly know some cases where patents at least seem to me to have been important to \"startup\" companies.&nbsp; (Akamai/Limelight?)&nbsp;&nbsp;&nbsp; But the rest of what was said seemed to make a lot of sense. &nbsp;&nbsp; <br /><br />One thing the VCs emphasized is the importance of timing.&nbsp; They said the idea behind many startups had actually been around for a while, the subject of study in universities or labs, but often the timing has to be right to make the move into the product space.&nbsp; Sometimes other technology has to catch up, or something else in the environment has to go your way.&nbsp; A lot of \"failures\" may not be failures of the idea, but just not the right timing. &nbsp; <br /><br />It was expressed that startups that have a mission to change the world in some interesting way were better off than startups whose mission was just to make money.&nbsp; In particular, it can help recruit the best and the brightest, creating a very powerful positive feedback loop.&nbsp; Simply stated missions -- Google says theirs is to \"<a href=\"http://www.google.com/about/company/\">organize the world's information and make it universally accessible and useful</a>\" -- can be quite powerful.&nbsp; The cynical might question people's motivations and whether money is really what's behind the mission, but either way, missions can be useful.<br /><br />Finally, and perhaps this isn't so surprising, but the best way to connect with VCs is probably through personal connections.&nbsp; If you know someone that's worked with the VCs, get them to introduce you.&nbsp; The VCs apparently get thousands of proposals sent to them a year, and very few of those get consideration.&nbsp; Having someone they trust vouch for you means a lot in terms of them being willing to make time to listen to you.&nbsp; That's not unlike aspects of academia (the importance of letters for jobs/graduate school;&nbsp; in some cases connections being helpful for getting funding from industry).&nbsp; While not surprising, it seems worth saying.&nbsp; ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/8935780820639444860/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=8935780820639444860") (title . "2 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8935780820639444860"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/8935780820639444860"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/10/some-advice-on-entrepreneurship-from-ah.html") (title . "Some Advice on Entrepreneurship from the AH meeting"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "2"))) ("Entrepreneurship and the Curriculum" "At the Andreessen Horowitz academic round table (<a href=\"http://mybiasedcoin.blogspot.com/2013/09/notes-from-andreessen-horowitz-academic.html\">see last pos</a>t), the issue of how to promote student entrepreneurship through the curriculum arose. &nbsp;The VCs at AH (which I'll use for short hereon) want there to be more tech-based CEOs. &nbsp;As they put it, it's easier to teach a tech person what they need to learn about business than to teach a business person what they need to learn about the tech. &nbsp;Somehow, in most universities and I believe in the world at large, the culture has developed that the business people think they're the powerful ones, not the tech people who build the things that consumers love.&nbsp; The business people think they're the ones delivering the value, and then divide the value accordingly. <br /><br />Don't believe me? &nbsp;Go see&nbsp;<a href=\"http://whartoniteseekscodemonkey.tumblr.com/\">http://whartoniteseekscodemonkey.tumblr.com/</a> , a site (that came up in the discussions) devoted to the e-mails sent by Wharton business school people looking to hire (undergraduate) programming and engineering talent. &nbsp;As a faculty member I get bunches of these sorts of e-mails a month, and I'm sure the computer science students do as well.&nbsp; The underlying message is that the tech people are commodity cogs to be plugged in as needed.&nbsp; That's not the message we want our students to get, and not how things really work in most successful startups. &nbsp; <br /><br />So AH says they believe in and support the tech CEO, and want to encourage that.&nbsp; What does that, and entrepreneurship generally, mean for our curriculum?&nbsp; Should CS departments have courses on entrepreneurship (or give credit for classes in other departments on the subject)?&nbsp; Should we teach computer languages that are the latest on the start-up scene (in preference to those that, arguably, provide a larger conceptual framework or encourage certain ways of thinking)?&nbsp; Should we have an \"entrepreneur track\", like we might have a theory track or AI track or computer science and engineering track?&nbsp; What is the school's role at the department's role in encouraging entrepreneurship? &nbsp;Some people thought CS departments perceive themselves as professors in the business to make more professors, and thereby ignore the potential CS has to change the world via business. <br /><br />These are tough questions.&nbsp; One issue that makes it even more problematic for CS is that these problems are not faced by many other parts of the university -- literature, history, and even most of the social sciences don't have a significant start-up scene -- which means in some ways, we're on our own. &nbsp;Indeed, significant parts of the university might actively resent an emphasis on entrepreneurship, which they might argue does not always fit so well with the university's educational mission. &nbsp;(Or, &nbsp;perhaps, it just represents self-interest on their part.) <br /><br />Aged fuddy-duddy that I am, I'm somewhat sympathetic to this view. &nbsp;Computer science is science. &nbsp;I want to educate students about the great questions (and answers) of computer science, and I am thrilled to be educating the next generation of scientists, especially computer science. &nbsp;But yes, computer science is also engineering (in the practical sense of the word), providing the ability to solve immediate problems, yielding economic benefits to the users and of course the developers of the solutions. &nbsp;I see striking the right balance as a challenge; &nbsp;greedily, I do somehow want both. <br /><br />At Harvard, I feel we've been pushed and pushed ourselves to make the requirements for the major quite minimal (in terms of the number of classes), so I want those required classes to be on the \"science\" side.&nbsp; I want computer science graduates to have both breadth and depth in computer science.&nbsp; Much of the entrepreneurship can naturally fall outside the curriculum -- there are now a number of student organizations, and university-level initiatives, to promote entrepreneurship. &nbsp;(Harvard, I think, has been finding a way to expand the concept of entrepreneurship beyond just \"business\" -- into the larger concept of innovation -- to make it more appealing throughout the university. &nbsp;For example, check out the <a href=\"http://i-lab.harvard.edu/about\">i-lab</a>.) &nbsp;At the same time, I'm clear that having all the entrepreneurship activities fall outside the traditional curriculum potentially pushes a set of students away. &nbsp;Again, we're left with finding the right balance, for us.<br /><br />Sadly, the meeting's discussion on this only lasted a short while, and I felt left with more questions than answers.&nbsp; Feel free to discuss your thoughts here. &nbsp; <br /><br />" "http://mybiasedcoin.blogspot.com/feeds/1582534515459862114/comments/default" (21066 45773) old 20 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-1582534515459862114") (published nil "2013-10-01T07:32:00.002-04:00") (updated nil "2013-10-01T07:32:29.424-04:00") (title ((type . "text")) "Entrepreneurship and the Curriculum") (content ((type . "html")) "At the Andreessen Horowitz academic round table (<a href=\"http://mybiasedcoin.blogspot.com/2013/09/notes-from-andreessen-horowitz-academic.html\">see last pos</a>t), the issue of how to promote student entrepreneurship through the curriculum arose. &nbsp;The VCs at AH (which I'll use for short hereon) want there to be more tech-based CEOs. &nbsp;As they put it, it's easier to teach a tech person what they need to learn about business than to teach a business person what they need to learn about the tech. &nbsp;Somehow, in most universities and I believe in the world at large, the culture has developed that the business people think they're the powerful ones, not the tech people who build the things that consumers love.&nbsp; The business people think they're the ones delivering the value, and then divide the value accordingly. <br /><br />Don't believe me? &nbsp;Go see&nbsp;<a href=\"http://whartoniteseekscodemonkey.tumblr.com/\">http://whartoniteseekscodemonkey.tumblr.com/</a> , a site (that came up in the discussions) devoted to the e-mails sent by Wharton business school people looking to hire (undergraduate) programming and engineering talent. &nbsp;As a faculty member I get bunches of these sorts of e-mails a month, and I'm sure the computer science students do as well.&nbsp; The underlying message is that the tech people are commodity cogs to be plugged in as needed.&nbsp; That's not the message we want our students to get, and not how things really work in most successful startups. &nbsp; <br /><br />So AH says they believe in and support the tech CEO, and want to encourage that.&nbsp; What does that, and entrepreneurship generally, mean for our curriculum?&nbsp; Should CS departments have courses on entrepreneurship (or give credit for classes in other departments on the subject)?&nbsp; Should we teach computer languages that are the latest on the start-up scene (in preference to those that, arguably, provide a larger conceptual framework or encourage certain ways of thinking)?&nbsp; Should we have an \"entrepreneur track\", like we might have a theory track or AI track or computer science and engineering track?&nbsp; What is the school's role at the department's role in encouraging entrepreneurship? &nbsp;Some people thought CS departments perceive themselves as professors in the business to make more professors, and thereby ignore the potential CS has to change the world via business. <br /><br />These are tough questions.&nbsp; One issue that makes it even more problematic for CS is that these problems are not faced by many other parts of the university -- literature, history, and even most of the social sciences don't have a significant start-up scene -- which means in some ways, we're on our own. &nbsp;Indeed, significant parts of the university might actively resent an emphasis on entrepreneurship, which they might argue does not always fit so well with the university's educational mission. &nbsp;(Or, &nbsp;perhaps, it just represents self-interest on their part.) <br /><br />Aged fuddy-duddy that I am, I'm somewhat sympathetic to this view. &nbsp;Computer science is science. &nbsp;I want to educate students about the great questions (and answers) of computer science, and I am thrilled to be educating the next generation of scientists, especially computer science. &nbsp;But yes, computer science is also engineering (in the practical sense of the word), providing the ability to solve immediate problems, yielding economic benefits to the users and of course the developers of the solutions. &nbsp;I see striking the right balance as a challenge; &nbsp;greedily, I do somehow want both. <br /><br />At Harvard, I feel we've been pushed and pushed ourselves to make the requirements for the major quite minimal (in terms of the number of classes), so I want those required classes to be on the \"science\" side.&nbsp; I want computer science graduates to have both breadth and depth in computer science.&nbsp; Much of the entrepreneurship can naturally fall outside the curriculum -- there are now a number of student organizations, and university-level initiatives, to promote entrepreneurship. &nbsp;(Harvard, I think, has been finding a way to expand the concept of entrepreneurship beyond just \"business\" -- into the larger concept of innovation -- to make it more appealing throughout the university. &nbsp;For example, check out the <a href=\"http://i-lab.harvard.edu/about\">i-lab</a>.) &nbsp;At the same time, I'm clear that having all the entrepreneurship activities fall outside the traditional curriculum potentially pushes a set of students away. &nbsp;Again, we're left with finding the right balance, for us.<br /><br />Sadly, the meeting's discussion on this only lasted a short while, and I felt left with more questions than answers.&nbsp; Feel free to discuss your thoughts here. &nbsp; <br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/1582534515459862114/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=1582534515459862114") (title . "4 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1582534515459862114"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1582534515459862114"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/10/entrepreneurship-and-curriculum.html") (title . "Entrepreneurship and the Curriculum"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/06738274256402616703") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "4"))) ("Notes from the Andreessen Horowitz Academic Round Table" "I've spent the last couple of days attending the Andreessen Horowitz Academic Round Table. &nbsp;<a href=\"http://en.wikipedia.org/wiki/Andreessen_Horowitz\">Andreessen Horowitz</a> is a leading venture capital firm, founded by <a href=\"http://en.wikipedia.org/wiki/Marc_Andreessen\">Marc Andreessen</a> and <a href=\"http://en.wikipedia.org/wiki/Ben_Horowitz\">Ben Horowitz</a>. &nbsp;The goal of the meeting as it was described to me was to get a number of academics and entrepreneurs together, along with the VCs, and get to know each other in an non-pressured environment. &nbsp;Andreessen Horowitz seems very interested in promoting the technical CEO (as opposed to the \"MBA CEO\") as a viable option for startups, and seems interested in establishing long-term connections with universities. &nbsp;They're obviously very well connected at Stanford and Berkeley, but recognize that there is startup potential at other universities that is probably underutilized.<br /><br />Most of the program was a series of short technical talks, mostly by academic types, including many academics with start-up experience. &nbsp;Some talks were also by people leading start-ups that Andreessen Horowitz has invested in. &nbsp;The talks were of a uniformly very high quality. &nbsp;It was like a super-interesting conference, perhaps made more interesting because of the breadth of computer science areas covered. &nbsp;The speaker list included Susan Athey, Ed Felten, Michael Franklin, Michael Kearns, Nick McKeown, Rob Miller, Andrew Ng, Tuomas Sandholm, and Stefan Savage, just to name some. &nbsp;On the company side, the speakers included Ben Milne of <a href=\"https://www.dwolla.com/\">Dwolla</a>, who explained a lot of the cruft that has been built up in the money system in terms of moving money around, and how he was getting rid of it. Vijay Balasubramaniyan of <a href=\"http://pindropsecurity.com/\">Pindrop Security</a> described their fraud detection measures for phone-based fraud. &nbsp;Jonathan Downey of <a href=\"http://www.airware.com/\">Airware</a>&nbsp;discussed developing open architectures for the commercial drone market.&nbsp; (And more.) <br /><br />Before I go on, the most entertaining talk bit:&nbsp; Rob Miller showed a demo of a crowdsourcing program for shortening your document -- to get you down to that 10-page limit when you're a 1/4 page over, and you're fed up hours before the conference deadline.&nbsp; (Looking online, I think this must be the <a href=\"http://projects.csail.mit.edu/soylent/\">Soylent project</a>.)&nbsp; I hadn't seen it before.&nbsp; For me, as a CS professor, that's a great example of crowdsourcing. <br /><br />Beyond the technical talks, there were some interesting discussions about the connections between research and entrepreneurship, about how we might teach our students so that they can be entrepreneurial both in technology and in business, about what VCs like Andreessen Horowitz are looking for in (faculty-based) startups, and about how many universities seem to get in the way rather than help their faculty (or graduate students, or even undergraduate students) start companies. &nbsp;(It seemed like the most controversial topic involved who had the worst, most unhelpful technology licensing office...) &nbsp;In many ways, these discussions felt more interesting than the talks, and I wish we had more time for them -- even though the talks were really good, this was stuff that was new to me, and where the people in the room were experts I wanted to hear from on these topics. <br /><br />There was much too much fodder at this meeting for a single blog post, so I'll try to cover some of these themes a bit more in depth over the next few days. &nbsp;One thing that might come up in the future -- that I think would be great and recommend (to them and whoever might be able to attend) -- is that they might do another meeting like this but focus on inviting graduate students. &nbsp;After all, professors already have exciting jobs they enjoy and are attached to -- graduate students may be a bit more eager to take their ideas and take the leap to try build a company out of them. <br /><br /><br /><br /><br /><br /><br />" "http://mybiasedcoin.blogspot.com/feeds/4088973913902149979/comments/default" (21064 63669) old 21 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-4088973913902149979") (published nil "2013-09-30T00:06:00.001-04:00") (updated nil "2013-09-30T00:06:13.964-04:00") (title ((type . "text")) "Notes from the Andreessen Horowitz Academic Round Table") (content ((type . "html")) "I've spent the last couple of days attending the Andreessen Horowitz Academic Round Table. &nbsp;<a href=\"http://en.wikipedia.org/wiki/Andreessen_Horowitz\">Andreessen Horowitz</a> is a leading venture capital firm, founded by <a href=\"http://en.wikipedia.org/wiki/Marc_Andreessen\">Marc Andreessen</a> and <a href=\"http://en.wikipedia.org/wiki/Ben_Horowitz\">Ben Horowitz</a>. &nbsp;The goal of the meeting as it was described to me was to get a number of academics and entrepreneurs together, along with the VCs, and get to know each other in an non-pressured environment. &nbsp;Andreessen Horowitz seems very interested in promoting the technical CEO (as opposed to the \"MBA CEO\") as a viable option for startups, and seems interested in establishing long-term connections with universities. &nbsp;They're obviously very well connected at Stanford and Berkeley, but recognize that there is startup potential at other universities that is probably underutilized.<br /><br />Most of the program was a series of short technical talks, mostly by academic types, including many academics with start-up experience. &nbsp;Some talks were also by people leading start-ups that Andreessen Horowitz has invested in. &nbsp;The talks were of a uniformly very high quality. &nbsp;It was like a super-interesting conference, perhaps made more interesting because of the breadth of computer science areas covered. &nbsp;The speaker list included Susan Athey, Ed Felten, Michael Franklin, Michael Kearns, Nick McKeown, Rob Miller, Andrew Ng, Tuomas Sandholm, and Stefan Savage, just to name some. &nbsp;On the company side, the speakers included Ben Milne of <a href=\"https://www.dwolla.com/\">Dwolla</a>, who explained a lot of the cruft that has been built up in the money system in terms of moving money around, and how he was getting rid of it. Vijay Balasubramaniyan of <a href=\"http://pindropsecurity.com/\">Pindrop Security</a> described their fraud detection measures for phone-based fraud. &nbsp;Jonathan Downey of <a href=\"http://www.airware.com/\">Airware</a>&nbsp;discussed developing open architectures for the commercial drone market.&nbsp; (And more.) <br /><br />Before I go on, the most entertaining talk bit:&nbsp; Rob Miller showed a demo of a crowdsourcing program for shortening your document -- to get you down to that 10-page limit when you're a 1/4 page over, and you're fed up hours before the conference deadline.&nbsp; (Looking online, I think this must be the <a href=\"http://projects.csail.mit.edu/soylent/\">Soylent project</a>.)&nbsp; I hadn't seen it before.&nbsp; For me, as a CS professor, that's a great example of crowdsourcing. <br /><br />Beyond the technical talks, there were some interesting discussions about the connections between research and entrepreneurship, about how we might teach our students so that they can be entrepreneurial both in technology and in business, about what VCs like Andreessen Horowitz are looking for in (faculty-based) startups, and about how many universities seem to get in the way rather than help their faculty (or graduate students, or even undergraduate students) start companies. &nbsp;(It seemed like the most controversial topic involved who had the worst, most unhelpful technology licensing office...) &nbsp;In many ways, these discussions felt more interesting than the talks, and I wish we had more time for them -- even though the talks were really good, this was stuff that was new to me, and where the people in the room were experts I wanted to hear from on these topics. <br /><br />There was much too much fodder at this meeting for a single blog post, so I'll try to cover some of these themes a bit more in depth over the next few days. &nbsp;One thing that might come up in the future -- that I think would be great and recommend (to them and whoever might be able to attend) -- is that they might do another meeting like this but focus on inviting graduate students. &nbsp;After all, professors already have exciting jobs they enjoy and are attached to -- graduate students may be a bit more eager to take their ideas and take the leap to try build a company out of them. <br /><br /><br /><br /><br /><br /><br />") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/4088973913902149979/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=4088973913902149979") (title . "0 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4088973913902149979"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/4088973913902149979"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/09/notes-from-andreessen-horowitz-academic.html") (title . "Notes from the Andreessen Horowitz Academic Round Table"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/06738274256402616703") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "0"))) ("Yelp Reviews News" "Giorgos Zervas is <a href=\"http://www.bbc.co.uk/news/technology-24299742\">in the news again</a> (with Michael Luca of Harvard Business School), this time for his work on filtered/fake Yelp reviews.&nbsp; See also <a href=\"http://blogs.wsj.com/corporate-intelligence/2013/09/24/fake-reviews-are-everywhere-how-can-we-catch-them/\">this piece</a> in the Wall Street Journal blog.&nbsp; High-level issue:&nbsp; filtered reviews are on the rise, as businesses recognize that social media reviews can be important to their business.&nbsp; The work is quite timely given the recent NY Attorney General's investigation into fake reviews that led to a number of fines." "http://mybiasedcoin.blogspot.com/feeds/278996900569087388/comments/default" (21062 24327) old 22 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-278996900569087388") (published nil "2013-09-28T00:45:00.004-04:00") (updated nil "2013-09-28T00:45:59.623-04:00") (title ((type . "text")) "Yelp Reviews News") (content ((type . "html")) "Giorgos Zervas is <a href=\"http://www.bbc.co.uk/news/technology-24299742\">in the news again</a> (with Michael Luca of Harvard Business School), this time for his work on filtered/fake Yelp reviews.&nbsp; See also <a href=\"http://blogs.wsj.com/corporate-intelligence/2013/09/24/fake-reviews-are-everywhere-how-can-we-catch-them/\">this piece</a> in the Wall Street Journal blog.&nbsp; High-level issue:&nbsp; filtered reviews are on the rise, as businesses recognize that social media reviews can be important to their business.&nbsp; The work is quite timely given the recent NY Attorney General's investigation into fake reviews that led to a number of fines.") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/278996900569087388/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=278996900569087388") (title . "0 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/278996900569087388"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/278996900569087388"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/09/yelp-reviews-news.html") (title . "Yelp Reviews News"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "0"))) ("Dina Katabi, MacArthur Genius" "It's always nice to see a computer scientist be on the list for an award that spans over multiple disciplinary areas.&nbsp;&nbsp; This year, we get to congratulate Dina Katabi for earning a MacArthur Fellowship.&nbsp; Dina's work focuses in wireless, but seems to span more areas than you could imagine.&nbsp; She was part of the recent team that came out with the breakthrough work on sparse FFT.&nbsp; She's done some of the most well-known work in network coding (XORs in the Air).&nbsp; And recently, she's been working on using wireless signals to see through walls.<br /><br />The official citation is <a href=\"http://www.macfound.org/fellows/894/\">here</a>.&nbsp; (Apparently, Dina is the \"894th\" Fellow.)&nbsp;" "http://mybiasedcoin.blogspot.com/feeds/3588742650427971089/comments/default" (21061 46375) old 23 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-3588742650427971089") (published nil "2013-09-27T12:41:00.000-04:00") (updated nil "2013-09-27T12:41:11.252-04:00") (title ((type . "text")) "Dina Katabi, MacArthur Genius") (content ((type . "html")) "It's always nice to see a computer scientist be on the list for an award that spans over multiple disciplinary areas.&nbsp;&nbsp; This year, we get to congratulate Dina Katabi for earning a MacArthur Fellowship.&nbsp; Dina's work focuses in wireless, but seems to span more areas than you could imagine.&nbsp; She was part of the recent team that came out with the breakthrough work on sparse FFT.&nbsp; She's done some of the most well-known work in network coding (XORs in the Air).&nbsp; And recently, she's been working on using wireless signals to see through walls.<br /><br />The official citation is <a href=\"http://www.macfound.org/fellows/894/\">here</a>.&nbsp; (Apparently, Dina is the \"894th\" Fellow.)&nbsp; ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/3588742650427971089/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=3588742650427971089") (title . "4 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/3588742650427971089"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/3588742650427971089"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/09/dina-katabi-macarthur-genius.html") (title . "Dina Katabi, MacArthur Genius"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "4"))) ("Reviewing Bad" "A pun title, relating to two quick things.<br /><br />First, I had the wonderful experience of getting to see (through a special deal set up by Harvard's faculty development office) <a href=\"http://americanrepertorytheater.org/events/show/all-way\">All the Way</a> at the <a href=\"http://americanrepertorytheater.org/events/show/all-way\">American Repertory Theater</a>.&nbsp; It's a new play following the history of Lyndon Johnson (and Martin Luther King) from the November 1963- November 1964 time period (from when Kennedy was assassinated to when Johnson won the presidential election).&nbsp; I was silly enough to not realize when I got the tickets that Bryan Cranston, of <strike>Malcolm in the Middle</strike> Breaking Bad fame, was playing Johnson as the lead.&nbsp; It was a really fantastic show.&nbsp; (Hey, the rest of you in Harvard CS who aren't going to these things -- why not?&nbsp; They're awesome!&nbsp; Krzysztof was the only one I saw this time...)&nbsp; Well acted and fascinating history.&nbsp; The cast was amazing (and large -- I think 17 actors total), and I kept recognizing them from TV.&nbsp; My inner gushing fan was set off by Michael McKean -- at one point, some of the actors were out in the audience area, and I excitedly noted McKean was about six feet from me.&nbsp; (I chose not to seek his autograph given the performance was going on at the time.)&nbsp;<br /><br />[Note -- sadly, the show is already sold out... at least for this run.] <br /><br />Ah, then the bad news.&nbsp; After being on the executive PC for STOC 2013, I heard from multiple colleagues afterwards who had their papers rejected about what they felt was the low quality of reviewing.&nbsp; (In my defense, I commiserated with several of them at the time.)&nbsp;&nbsp; So, after getting the reviews from the SODA PC (for my rejected papers), I feel obliged to comment.&nbsp; Quality-wise, they're terrible.&nbsp; (Not universally so... but some of them....)&nbsp; I was going to put in specific examples, but after the heat of the moment died down, my cooler head prevailed and determined that was inappropriate. &nbsp; But suffice to say that beyond the usual we don't understand the motivation type stuff, there are comments that are factually wrong that betray fundamental misunderstandings, and opinions regarding \"what's important\" in the paper that are -- in my experience -- just off the mark.&nbsp; I've been through it before -- you suck it up, find the useful comments, rewrite, and re-submit.&nbsp; But it is disturbing (from both sides, as the receiver of reviews and as one helping manage the reviewing process), and worrisome if it's an increasing problem for many submitters. &nbsp; &nbsp;" "http://mybiasedcoin.blogspot.com/feeds/1684902234454979833/comments/default" (21051 52675) old 24 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-1684902234454979833") (published nil "2013-09-19T22:30:00.004-04:00") (updated nil "2013-09-20T00:23:31.811-04:00") (title ((type . "text")) "Reviewing Bad") (content ((type . "html")) "A pun title, relating to two quick things.<br /><br />First, I had the wonderful experience of getting to see (through a special deal set up by Harvard's faculty development office) <a href=\"http://americanrepertorytheater.org/events/show/all-way\">All the Way</a> at the <a href=\"http://americanrepertorytheater.org/events/show/all-way\">American Repertory Theater</a>.&nbsp; It's a new play following the history of Lyndon Johnson (and Martin Luther King) from the November 1963- November 1964 time period (from when Kennedy was assassinated to when Johnson won the presidential election).&nbsp; I was silly enough to not realize when I got the tickets that Bryan Cranston, of <strike>Malcolm in the Middle</strike> Breaking Bad fame, was playing Johnson as the lead.&nbsp; It was a really fantastic show.&nbsp; (Hey, the rest of you in Harvard CS who aren't going to these things -- why not?&nbsp; They're awesome!&nbsp; Krzysztof was the only one I saw this time...)&nbsp; Well acted and fascinating history.&nbsp; The cast was amazing (and large -- I think 17 actors total), and I kept recognizing them from TV.&nbsp; My inner gushing fan was set off by Michael McKean -- at one point, some of the actors were out in the audience area, and I excitedly noted McKean was about six feet from me.&nbsp; (I chose not to seek his autograph given the performance was going on at the time.)&nbsp;<br /><br />[Note -- sadly, the show is already sold out... at least for this run.] <br /><br />Ah, then the bad news.&nbsp; After being on the executive PC for STOC 2013, I heard from multiple colleagues afterwards who had their papers rejected about what they felt was the low quality of reviewing.&nbsp; (In my defense, I commiserated with several of them at the time.)&nbsp;&nbsp; So, after getting the reviews from the SODA PC (for my rejected papers), I feel obliged to comment.&nbsp; Quality-wise, they're terrible.&nbsp; (Not universally so... but some of them....)&nbsp; I was going to put in specific examples, but after the heat of the moment died down, my cooler head prevailed and determined that was inappropriate. &nbsp; But suffice to say that beyond the usual we don't understand the motivation type stuff, there are comments that are factually wrong that betray fundamental misunderstandings, and opinions regarding \"what's important\" in the paper that are -- in my experience -- just off the mark.&nbsp; I've been through it before -- you suck it up, find the useful comments, rewrite, and re-submit.&nbsp; But it is disturbing (from both sides, as the receiver of reviews and as one helping manage the reviewing process), and worrisome if it's an increasing problem for many submitters. &nbsp; &nbsp; ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/1684902234454979833/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=1684902234454979833") (title . "27 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1684902234454979833"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/1684902234454979833"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/09/reviewing-bad.html") (title . "Reviewing Bad"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "27"))) ("Guest Post by Justin Thaler: A \"Mini-Survey\" of Practical Verification Algorithms" "<a href=\"http://people.seas.harvard.edu/~jthaler/\">Justin Thaler</a>, after presenting his most recent work on verifiable computation at Crypto, decided to write up a mini-survey on recent work in the area, and he offered to make it a blog post.&nbsp; It's a somewhat longer-than-average blog post,&nbsp; but well worthwhile.&nbsp; So without further ado, here's Justin.<br /><br />------<br /><br />In the last few years there has been an enormous amount of work devoted to the development of \"practical\" protocols for verifiable computation, with multiple approaches being pursued across several research groups. It has recently become clear to me that the sheer volume of work and the sometimes subtle relationships among the various approaches has made the area difficult to follow. The goal of this post is to provide a reasonably concise description of the various approaches and the pros and cons of each, with the hope that this will serve as a handy reference for those interested in the area, at least until a more thorough and formal survey can take its place.<br /><br />==============<br /><br />Some Quick Background:<br /><br />The field of verifiable computation seeks to develop protocols that allow a computationally weak verifier (such as a cloud computing user) to send its data to a powerful but untrusted prover (such as a cloud computing service). The verifier can then ask the prover to perform some computation on the data, and the protocol should enable the prover to return the output of the computation along with a guarantee that the output is correct. Concretely, the ultimate goal is to start with a program written in a high-level language like C and automatically ensure that the prover faithfully executed the program.<br /><br />The only background required to understand this post is having encountered <i> interactive proof systems </i> and <i> argument systems </i>. To review, in an <a href=\"http://en.wikipedia.org/wiki/Interactive_proof_system\"> interactive proof</a>, the prover tells the verifier the output of a computation, and then they have a conversation during which the prover tries to convince the verifier that the output is correct. Any interactive proof must satisfy two properties: the first, called completeness, says that an honest prover will convince the verifier to accept, and the second, called soundness, says that a dishonest prover will be caught with high probability even if the dishonest prover is computationally unbounded. An argument system is an interactive proof system that is sound only against polynomially time provers.<br /><br />&nbsp;===============<br /><br />Sources of Overhead:<br /><br />I will focus on projects that are reasonably general-purpose, require only one prover, and have attempted to refine theory toward implementation. In the general case, all approaches satisfying these criteria work by first turning the high-level computer program into an arithmetic circuit or a set of \"constraints\", and then using complexity-theoretic or cryptographic machinery (or both) to check that the prover correctly evaluated the circuit or satisfied the set of constraints. I will refer to the \"high-level program ==&gt;; circuit/constraints\" transformation in any system as the 'front-end', and the actual protocol used to check that the prover correctly evaluated the circuit as the 'back-end'.<br /><br />Thus, there are two primary sources of overhead in existing systems: the overhead in the front-end (as some computer programs that run in T machine steps may only be computed by circuits with far more than T gates), and the overhead in the back-end (i.e., the extra work required for the prover to evaluate the circuit with a guarantee of correctness, relative to evaluating the circuit with no guarantee). The existence of two sources of overhead complicates the comparison among many of the papers that I will discuss, as work on front-ends and back-ends has been interleaved, some back-ends work with more general circuits than other back-ends (and hence can interface with more efficient front-ends), and there has been cross-pollination among systems. I will attempt to clearly delineate these issues below by focusing on contributions to the design of back-ends and front-ends separately, beginning with the former.<br /><br />=================<br /><br />Summary of Back-Ends:<br /><br />Existing back-ends fall into three broad categories: interactive proofs, argument systems with pre-processing, and argument systems without preprocessing. I will describe each of the three approaches below, starting with the most efficient but least general approach and moving toward more general but less efficient approaches.<br /><br />1) Interactive Proofs: In 2008, <a href=\"http://dl.acm.org/citation.cfm?id=1374396\"> Goldwasser, Kalai, and Rothblum</a> (GKR) gave a powerful interactive proof protocol for circuit evaluation. The costs to the verifier in this protocol grow linearly with the circuit depth, so the protocol only achieves an efficient verifier if the circuit has small depth (equivalently, if the function computed by the circuit has an efficient parallel algorithm). Fortunately, many of the computations actually being outsourced do exhibit large amounts of parallelism. In 2012, <a href=\"http://people.seas.harvard.edu/~jthaler/PracticalVerifiedComputation.html\"> Cormode, Mitzenmacher, and I</a> implemented the GKR protocol plus refinements -- most notably, we brought the runtime of the prover down from Omega(S^3) in a naive implementation to O(S log S), where S is the number of gates in the circuit. Our implementation demonstrated that the concrete costs to the verifier are very low, but there were two downsides to the implementation: First, despite our refinements, the prover runtime remained a bottleneck (the prover took roughly three orders of magnitude more time than that required to evaluate the circuit with no guarantee of correctness). Second, unless the circuit satisfied a certain 'regularity' condition on its wiring pattern, the verifier required an expensive pre-processing phase to \"extract\" information about the wiring of the circuit.<br /><br />Very recently, I <a href=\"http://people.seas.harvard.edu/~jthaler/TimeOptimalIPs.html\"> addressed</a> these bottlenecks by showing the following. First, for 'regular' circuits, the runtime of the prover can be reduced from O(S log S) to O(S). Concretely, for these circuits, the prover now runs about 10 times slower than what is required to evaluate the circuit gate-by-gate with no guarantee of correctness. Informally, a circuit has a 'regular' wiring pattern if there is a way to label each gate g with a binary string such that the labels of the in-neighbors of g are very simple functions of the label of g (this condition is satisfied by natural circuits computing naive matrix multiplication, pattern matching, FFTs, and several other problems).<br /><br />Second, for any <a href=\"http://en.wikipedia.org/wiki/Data_parallelism\"> data parallel</a> computation (i.e., any setting where an arbitrary sub-computation C is applied independently to many pieces of data, before possibly aggregating the results), the cost of the pre-processing stage for the verifier and the overhead for the prover can be made to depend only on the size of the sub-computation C, and not at all on the number of pieces of data to which C is applied. Essentially, this holds because the data-parallel computation is 'regular' at a higher level of abstraction than in the first result -- while the sub-computation C may have very irregular wiring, the various invocations of C do not interact at all.<br /><br />Third, I gave a simple protocol for matrix multiplication that avoids the circuit representation entirely, allowing the prover to compute the correct answer using an arbitrary algorithm, and then spend O(n^2) extra work proving the answer is correct.<br /><br />[Aside on Matrix Multiplication: It is worth comparing this new matrix multiplication protocol to classical approaches like <a href=\"http://en.wikipedia.org/wiki/Freivalds%27_algorithm\"> Freivalds' algorithm</a>. The latter requires no interaction and *no* extra work for the prover. The advantage of the interactive approach is most evident for computations that invoke matrix multiplication as a means to an end rather than as an end in itself. For example, the best-known algorithms for computing the diameter of a graph work by repeatedly squaring the adjacency matrix. Running Freivalds' algorithm to verify these algorithms would require the prover to send the intermediate matrices to the verifier, which would be terabytes of data even for graphs on 1 million nodes. The interactive approach allows the prover to send only the right answer (which is just a single number), and then spend a few KBs of extra communication and a low-order amount of extra work proving the answer is correct.]<br /><br />2) Argument Systems with Pre-Processing: In 2007,  <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.149.1303&amp;rep=rep1&amp;type=pdf\"> Ishai, Kushilevitz, and Ostrovsky</a> gave an argument that required an expensive pre-processing phase for the verifier, but avoided the use of short PCPs (short PCPs are complicated complexity-theoretic protocols upon which most argument systems were traditionally based -- see the section on Argument Systems without Pre-processing below). Systems with pre-processing are primarily of interest in data-parallel settings, because the verifier can only save work when the set-up costs are amortized over many instances of the same computation (i.e., when the same computation is applied independently to many different inputs).<br /><br />In 2012, <a href=\"http://www.cs.utexas.edu/~mwalfish/papers/pepper-ndss12.pdf\"> Setty, McPherson, Blumberg, and Walfish</a> began refining IKO's protocol. They called their first system Pepper, and subsequent refinements were described in a follow-up system <a href=\"http://eprint.iacr.org/2012/598\"> Ginger</a>. Further follow-up work incorporated an ingenious encoding of computations due to <a href=\"http://eprint.iacr.org/2012/215\"> Genarro, Gentry, Parno, and Raykova</a> (GGPR), and resulted in a system called <a href=\"http://eprint.iacr.org/2012/622\"> Zaatar</a> that (mostly) supercedes Pepper and Ginger.<br /><br /><a href=\"http://research.microsoft.com/apps/pubs/default.aspx?id=180286\">Parno, Gentry, Howell, and Raykova</a> introduced another system called Pinocchio that is also based on the theoretical innovations of GGPR. Also, very recent work by <a href=\"http://people.csail.mit.edu/alexch/research/csnark/csnark.html\"> Ben-Sasson, Chiesa, Genkin, Tromer, and Virza</a> (BCGTV) implements a back-end that is closely related to Pinocchio.<br /><br />The high-level comparison between the Zaatar back-end and the Pinocchio/BCGTV back-end is the following. Zaatar is somewhat more efficient because it uses less cryptographic machinery (roughly, the verifier in Zaatar poses queries in the clear, while Pinocchio/BCGTV require the prover to compute over encrypted queries.) However, Pinocchio/BCGTV provide functionality that Zaatar does not. Specifically, the former supports public verifiability and zero-knowledge. Additionally, it consists of only two messages, one from the verifier to the prover and one from the prover to the verifier. Finally, it allows set-up costs to be amortized over an indefinite number of instances of the same computation -- in contrast, the pre-processing costs of Zaatar can be amortized over many instances of a computation only if all instances are verified at the same time. It is worth mentioning that the Pinocchio/BCGTV back-ends are based on non-standard cryptographic assumptions, while Zaatar is based on standard ones.<br /><br />3) Argument Systems without Pre-Processing: <a href=\"http://eccc.hpi-web.de/report/2012/045/\"> Ben-Sasson, Chiesa, Genkin, and Tromer </a> (BCGT) have been pursuing argument systems that avoid a pre-processing phase for the verifier. These argument systems are based on short PCPs, and while existing work on this topic is still theoretical in nature (focusing on reducing the concrete costs of existing PCPs), implementation efforts are reportedly underway.<br /><br />===============<br /><br />Comparison of Back-Ends:<br /><br />Comparison of Argument Systems without Pre-Processing to other  approaches: The advantage of the short-PCPs approach relative to interactive proofs and argument systems with pre-processing is that the former *never* requires a pre-processing phase for the verifier. The disadvantage is that the overheads to the prover are likely to be substantially higher than they are in argument systems with pre-processing. For example, the short PCPs described  by <a href=\"http://eccc.hpi-web.de/report/2012/045/\"> BCGT</a> require sequential repetition of the protocol many  times in order to drive down soundness error. Like Pinocchio and Zaatar, they also require performing FFT operations on objects as large as a computation transcript, but unlike Pinocchio and Zaatar, these short PCPs also require working over fields of small characteristic (and hence can only be combined with front-ends that generate circuits over these fields), require the use of non-trivial finite field algorithms, and require circuits that satisfy certain algebraic notions of regularity. Precisely how large these overheads are in practice remains to be seen.<br /><br />Comparison of Interactive Proofs to Argument Systems with Pre-Processing: The advantages of interactive proofs are three-fold. First, they are secure even against computationally unbounded provers, while argument systems are only secure against polynomial-time provers. Second, interactive proofs can avoid pre-processing entirely for structured computation (e.g. 'regular' circuits) and minimize pre-processing for data-parallel computation, while argument systems with pre-processing (discussed below) inherently require an expensive pre-processing stage for the verifier. Third, interactive proofs achieve unmatched prover efficiency when they are applicable, and in fact can avoid the circuit representation entirely for fundamental primitives like matrix multiplication.  Concretely, Zaatar's prover is roughly 3 orders of magnitude slower than evaluating the circuit with no correctness guarantee (see e.g.<a href=\"http://research.microsoft.com/en-us/UM/redmond/events/fs2013/presentations/Michael-Walfish_EfficientlyVerifying.pptx\">these slides </a> by Mike Walfish), which is roughly commensurate with the prover overhead in my original GKR implementation with Cormode and Mitzenmacher, but is a couple orders of magnitude slower than what we can now achieve with interactive proofs for \"regular\" circuits (see above).<br /><br />The disadvantages of interactive proofs are the following. First, they are only applicable to small-depth circuits (i.e., parallelizable computation). Second, they do not support \"non-deterministic\" circuits, which can be extremely useful for turning high-level programs into small circuits as described in the section on front-ends below (there is  <a href=\"http://www.math.ias.edu/~avi/PUBLICATIONS/MYPAPERS/GVW03/gvw03.pdf\"> evidence</a> that lack of support for non-determinism in inherent in the use of interactive proofs). This means that certain kinds of computations such as those involving many random accesses to memory or sorting/comparison operations are problematic for interactive proofs. Third, interactive proofs cannot support properties like zero-knowledge and public verifiability that are achieved by Pinocchio/BCGTV. Fourth, interactive proofs require logarithmically many rounds of interaction between prover and verifier, while argument systems typically require just one or two rounds.<br /><br />(I maintain, however, that the round complexity of interactive proofs isn't a big deal. First, interaction can be generically removed via the Fiat-Shamir heuristic, which is secure in the random oracle model and may be acceptable in practice. Second, any system allowing the verifier to request a specific computation in the first place is likely to involve a remote procedure call and hence incur round-trip delays anyway. Third, browsers already send a separate request for every image and script on a web page, and typically a browser <a href=\"https://developers.google.com/speed/docs/best-practices/rtt?csw=1#ParallelizeDownloads\">cannot substantially parallelize these requests</a>.)<br /><br />====================<br /><br />Summary of and Comparison of Front-Ends:<br /><br />Ginger, Zaatar, and Pinocchio all contain compilers that turn high-level programs into (non-deterministic) circuits (Pinocchio was the first to handle a subset of C, while the others initially handled a different high-level language but have since moved to C). <a href=\"http://www.cs.utexas.edu/~mwalfish/papers/allspice-oakland13.pdf\"> Vu, Setty, Blumberg, and Walfish</a> (VSBW) built a front-end for an implementation of the GKR protocol (this front-end must generate small-depth circuits that are either deterministic or contain a small number of non-deterministic inputs, since the non-deterministic inputs must be sent explicitly to the verifier. It should also be clarified that their compiler does not produce regular circuits, and hence the GKR protocol requires a pre-processing phase when applied to these circuits, and amortizes these costs over many instances of the computation exactly as in Zaatar/Ginger/Pepper). Given a high-level program, the VSBW front-end also automatically determines whether Zaatar or GKR would be most efficient to verify the computation and runs the better of the two protocols, and their system as a whole is called Allspice.<br /><br />However, none of the front-ends above efficiently supports programs that utilize random access to memory. Two recent front-ends change this. One is the front-end developed by <a href=\"http://people.csail.mit.edu/alexch/research/csnark/csnark.html\"> BCGTV</a> mentioned above, which implemented earlier <a href=\"http://eprint.iacr.org/2012/071\"> theoretical work</a> by the first four authors. Given a high-level program, their approach to circuit generation roughly works as follows. They first compile the C program into actual machine code for a simple Random Access Machine (RAM). They then generate a circuit which takes an entire transcript (sorted by time) of the RAM computation as a non-deterministic input, and checks that the transcript is valid. This requires checking the transcript for both *time consistency* (i.e., that the claimed state of the machine at time i correctly follows from the machine's claimed state at time i-1) and *memory consistency* (i.e., that every time a value is read from memory location x, the value that is returned is equal to the last value written to that location).<br /><br />Their circuit checks time-consistency by representing the transition function of the RAM as a small circuit (they have managed to represent the entire transition function as a circuit with ~1000 gates, at least for short RAM computations of &lt; 1 million steps. While this is still a lot of gates, it is a substantial engineering achievement). It then applies this circuit to each entry i of the transcript and checks that the output is equal to entry i+1 of the transcript. Their circuit checks memory consistency by using routing techniques to re-sort the transcript based on memory location (with ties broken by time), at which point it is straightforward to check that every memory read from a given location returns the last value written to that location.<br /><br />The second  front-end that supports random access to memory is called <a href=\"http://eprint.iacr.org/2013/356\">Pantry</a>, developed by Braun, Feldman, Ren, Setty, Blumberg, and Walfish. They augment Zaatar and Pinocchio's front-end to support random access to memory by using <a href=\"http://en.wikipedia.org/wiki/Merkle_tree\"> Merkle-hashing</a> techniques -- this offers an alternative approach to the routing-based technique for ensuring memory consistency pursued by BCGTV. (Interestingly, the Merkle-hashing approach was explicitly considered in BCGT's theoretical work, but has not yet been incorporated into the BCGTV system).<br /><br />Merkle trees allow one to outsource memory maintenance by building a binary tree whose leaves correspond to memory locations. Each leaf stores the value contained in the corresponding memory location, and each internal node stores an evaluation of a collision-resistant hash function applied to its children. As long as the verifier knows the value of the root, every time a memory location (leaf) is accessed, the prover can 'prove' that the returned value is correct by revealing all values along the leaf-to-root 'witness path'. One can show that the only way the prover can lie is by finding a collision in the hash function.<br /><br />Pantry identifies a collision-resistant hash function whose evaluation function can be (relatively) efficiently represented as a circuit or set of constraints. This allows evaluation of the hash function (and hence checking of 'witness paths', and hence support for random access to memory) to be folded into Zaatar's and Pinocchio's verification machinery.<br /><br />Pantry's use of collision-resistant hash functions is also useful for some applications (such as MapReduce) that do not necessarily require random access to memory -- for these applications, Pantry avoids the use of a full Merkle-hash tree, reducing costs relative to what is required to support general RAMs.<br /><br />Comparison of Pantry and BCGTV:<br /><br />Generality: BCGTV can handle arbitrary C programs. Pantry comes close to achieving this but still cannot handle data-dependent loops. BCGTV also has the advantage that it can be modified to generate circuits that satisfy the algebraic regularity conditions required by back-ends based on short PCPs (though implementations of these back-ends remain in progress). One important aspect of Pantry is that it enables the outsourcing of computations that are run over \"remote inputs\", i.e., inputs that the verifier never sees in full, but is merely provided a digest (typically a hash, or a Merkle-hash) of the input. This is important in several applications, such as verifying MapReduce computations. In principle, this feature could be incorporated into the BCGTV front-end as well, but doing so efficiently would likely require redoing many of the optimizations in Pantry.<br /><br />Efficiency: BCGTV's primary overhead stems from the fact the ~1000-gate transition function sub-circuit must be repeated for *every* step of the RAM. Thus, their circuits are at least 1000 times larger than the runtime of the RAM. Pantry on the other hand requires expensive evaluations of a collision-resistant hash function (when supporting general random access to memory, logarithmically many evaluations of the hash function are required per memory access). However, hash function evaluations in Pantry are only required when memory is accessed, not for every step of the RAM. Thus, which of the two approaches (BCGTV vs. Pantry) generates smaller circuits may depend on how memory-intensive the computation is.  <br /><br />================<br /><br />Summary:<br /><br />Ideally, this post makes clear that each of the approaches to verifiable computation being pursued thus far achieves a different tradeoff between efficiency, expressiveness, and support for features such as public verifiability and zero knowledge properties. This diversity can only be a good thing as users will be able to choose the approach that best suits their needs.<br /><br />In more detail, despite substantial progress, the fully general-purpose front-end still generates circuits that are at least three orders of magnitude larger than the runtime of original RAM computation. Moreover, existing back-ends based on argument systems with pre-processing impose an additional three orders of magnitude overhead for the prover. Arguments based on short PCPs will avoid pre-processing for the verifier, but impose additional overheads on the prover. Interactive proofs can avoid these large overheads for sufficiently structured computation, but require a front-end that generates small-depth deterministic circuits, and does not provide cryptographic properties like public verifiability and support for zero-knowledge achieved by some of the argument systems.<br /><br />Two attractive directions for future work present themselves. One is to develop protocols and build systems that can verifiably execute general computations, but that automatically leverage structure within computations for efficiency gains. Alternatively, it may be better to develop a restricted programming framework analogous to MapReduce that still allows for the expression of a powerful class of computations and automatically \"extracts\" the structure necessary to verify the computation efficiently. If this approach is pursued, it will be critical to determine the right balance between the level of generality to support and the amount of structure to force upon computations for efficiency gains.<br /><br />Acknowledgements: I am indebted to Mike Walfish and Andrew J. Blumberg for extensive conversations over several months that substantially influenced my understanding of the area and this post in particular, and to Mike Walfish and Michael Mitzenmacher for valuable feedback on an early draft of this post. Any errors are entirely my own.<br /><br />Further resources: Bryan Parno hosted a session on verifiable computation at the <a href=\"http://research.microsoft.com/en-us/events/fs2013/\"> Microsoft Research Faculty Summit</a>, where he, Michael Mitzenmacher, and Mike Walfish spoke about several of the approaches discussed in this post. Video of the session is <a href=\"http://wm.microsoft.com/ms/research/events/facultysummit13/28094.wmv\"> available</a>, and Mike's <a href=\"http://research.microsoft.com/en-us/UM/redmond/events/fs2013/presentations/Michael-Walfish_EfficientlyVerifying.pptx\">slides</a> contain a nice comparison of the various approaches." "http://mybiasedcoin.blogspot.com/feeds/7659346441833502000/comments/default" (21034 29284) old 25 nil nil ((id nil "tag:blogger.com,1999:blog-8890204.post-7659346441833502000") (published nil "2013-09-06T20:25:00.002-04:00") (updated nil "2013-09-06T20:25:08.214-04:00") (title ((type . "text")) "Guest Post by Justin Thaler: A \"Mini-Survey\" of Practical Verification Algorithms") (content ((type . "html")) "<a href=\"http://people.seas.harvard.edu/~jthaler/\">Justin Thaler</a>, after presenting his most recent work on verifiable computation at Crypto, decided to write up a mini-survey on recent work in the area, and he offered to make it a blog post.&nbsp; It's a somewhat longer-than-average blog post,&nbsp; but well worthwhile.&nbsp; So without further ado, here's Justin.<br /><br />------<br /><br />In the last few years there has been an enormous amount of work devoted to the development of \"practical\" protocols for verifiable computation, with multiple approaches being pursued across several research groups. It has recently become clear to me that the sheer volume of work and the sometimes subtle relationships among the various approaches has made the area difficult to follow. The goal of this post is to provide a reasonably concise description of the various approaches and the pros and cons of each, with the hope that this will serve as a handy reference for those interested in the area, at least until a more thorough and formal survey can take its place.<br /><br />==============<br /><br />Some Quick Background:<br /><br />The field of verifiable computation seeks to develop protocols that allow a computationally weak verifier (such as a cloud computing user) to send its data to a powerful but untrusted prover (such as a cloud computing service). The verifier can then ask the prover to perform some computation on the data, and the protocol should enable the prover to return the output of the computation along with a guarantee that the output is correct. Concretely, the ultimate goal is to start with a program written in a high-level language like C and automatically ensure that the prover faithfully executed the program.<br /><br />The only background required to understand this post is having encountered <i> interactive proof systems </i> and <i> argument systems </i>. To review, in an <a href=\"http://en.wikipedia.org/wiki/Interactive_proof_system\"> interactive proof</a>, the prover tells the verifier the output of a computation, and then they have a conversation during which the prover tries to convince the verifier that the output is correct. Any interactive proof must satisfy two properties: the first, called completeness, says that an honest prover will convince the verifier to accept, and the second, called soundness, says that a dishonest prover will be caught with high probability even if the dishonest prover is computationally unbounded. An argument system is an interactive proof system that is sound only against polynomially time provers.<br /><br />&nbsp;===============<br /><br />Sources of Overhead:<br /><br />I will focus on projects that are reasonably general-purpose, require only one prover, and have attempted to refine theory toward implementation. In the general case, all approaches satisfying these criteria work by first turning the high-level computer program into an arithmetic circuit or a set of \"constraints\", and then using complexity-theoretic or cryptographic machinery (or both) to check that the prover correctly evaluated the circuit or satisfied the set of constraints. I will refer to the \"high-level program ==&gt;; circuit/constraints\" transformation in any system as the 'front-end', and the actual protocol used to check that the prover correctly evaluated the circuit as the 'back-end'.<br /><br />Thus, there are two primary sources of overhead in existing systems: the overhead in the front-end (as some computer programs that run in T machine steps may only be computed by circuits with far more than T gates), and the overhead in the back-end (i.e., the extra work required for the prover to evaluate the circuit with a guarantee of correctness, relative to evaluating the circuit with no guarantee). The existence of two sources of overhead complicates the comparison among many of the papers that I will discuss, as work on front-ends and back-ends has been interleaved, some back-ends work with more general circuits than other back-ends (and hence can interface with more efficient front-ends), and there has been cross-pollination among systems. I will attempt to clearly delineate these issues below by focusing on contributions to the design of back-ends and front-ends separately, beginning with the former.<br /><br />=================<br /><br />Summary of Back-Ends:<br /><br />Existing back-ends fall into three broad categories: interactive proofs, argument systems with pre-processing, and argument systems without preprocessing. I will describe each of the three approaches below, starting with the most efficient but least general approach and moving toward more general but less efficient approaches.<br /><br />1) Interactive Proofs: In 2008, <a href=\"http://dl.acm.org/citation.cfm?id=1374396\"> Goldwasser, Kalai, and Rothblum</a> (GKR) gave a powerful interactive proof protocol for circuit evaluation. The costs to the verifier in this protocol grow linearly with the circuit depth, so the protocol only achieves an efficient verifier if the circuit has small depth (equivalently, if the function computed by the circuit has an efficient parallel algorithm). Fortunately, many of the computations actually being outsourced do exhibit large amounts of parallelism. In 2012, <a href=\"http://people.seas.harvard.edu/~jthaler/PracticalVerifiedComputation.html\"> Cormode, Mitzenmacher, and I</a> implemented the GKR protocol plus refinements -- most notably, we brought the runtime of the prover down from Omega(S^3) in a naive implementation to O(S log S), where S is the number of gates in the circuit. Our implementation demonstrated that the concrete costs to the verifier are very low, but there were two downsides to the implementation: First, despite our refinements, the prover runtime remained a bottleneck (the prover took roughly three orders of magnitude more time than that required to evaluate the circuit with no guarantee of correctness). Second, unless the circuit satisfied a certain 'regularity' condition on its wiring pattern, the verifier required an expensive pre-processing phase to \"extract\" information about the wiring of the circuit.<br /><br />Very recently, I <a href=\"http://people.seas.harvard.edu/~jthaler/TimeOptimalIPs.html\"> addressed</a> these bottlenecks by showing the following. First, for 'regular' circuits, the runtime of the prover can be reduced from O(S log S) to O(S). Concretely, for these circuits, the prover now runs about 10 times slower than what is required to evaluate the circuit gate-by-gate with no guarantee of correctness. Informally, a circuit has a 'regular' wiring pattern if there is a way to label each gate g with a binary string such that the labels of the in-neighbors of g are very simple functions of the label of g (this condition is satisfied by natural circuits computing naive matrix multiplication, pattern matching, FFTs, and several other problems).<br /><br />Second, for any <a href=\"http://en.wikipedia.org/wiki/Data_parallelism\"> data parallel</a> computation (i.e., any setting where an arbitrary sub-computation C is applied independently to many pieces of data, before possibly aggregating the results), the cost of the pre-processing stage for the verifier and the overhead for the prover can be made to depend only on the size of the sub-computation C, and not at all on the number of pieces of data to which C is applied. Essentially, this holds because the data-parallel computation is 'regular' at a higher level of abstraction than in the first result -- while the sub-computation C may have very irregular wiring, the various invocations of C do not interact at all.<br /><br />Third, I gave a simple protocol for matrix multiplication that avoids the circuit representation entirely, allowing the prover to compute the correct answer using an arbitrary algorithm, and then spend O(n^2) extra work proving the answer is correct.<br /><br />[Aside on Matrix Multiplication: It is worth comparing this new matrix multiplication protocol to classical approaches like <a href=\"http://en.wikipedia.org/wiki/Freivalds%27_algorithm\"> Freivalds' algorithm</a>. The latter requires no interaction and *no* extra work for the prover. The advantage of the interactive approach is most evident for computations that invoke matrix multiplication as a means to an end rather than as an end in itself. For example, the best-known algorithms for computing the diameter of a graph work by repeatedly squaring the adjacency matrix. Running Freivalds' algorithm to verify these algorithms would require the prover to send the intermediate matrices to the verifier, which would be terabytes of data even for graphs on 1 million nodes. The interactive approach allows the prover to send only the right answer (which is just a single number), and then spend a few KBs of extra communication and a low-order amount of extra work proving the answer is correct.]<br /><br />2) Argument Systems with Pre-Processing: In 2007,  <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.149.1303&amp;rep=rep1&amp;type=pdf\"> Ishai, Kushilevitz, and Ostrovsky</a> gave an argument that required an expensive pre-processing phase for the verifier, but avoided the use of short PCPs (short PCPs are complicated complexity-theoretic protocols upon which most argument systems were traditionally based -- see the section on Argument Systems without Pre-processing below). Systems with pre-processing are primarily of interest in data-parallel settings, because the verifier can only save work when the set-up costs are amortized over many instances of the same computation (i.e., when the same computation is applied independently to many different inputs).<br /><br />In 2012, <a href=\"http://www.cs.utexas.edu/~mwalfish/papers/pepper-ndss12.pdf\"> Setty, McPherson, Blumberg, and Walfish</a> began refining IKO's protocol. They called their first system Pepper, and subsequent refinements were described in a follow-up system <a href=\"http://eprint.iacr.org/2012/598\"> Ginger</a>. Further follow-up work incorporated an ingenious encoding of computations due to <a href=\"http://eprint.iacr.org/2012/215\"> Genarro, Gentry, Parno, and Raykova</a> (GGPR), and resulted in a system called <a href=\"http://eprint.iacr.org/2012/622\"> Zaatar</a> that (mostly) supercedes Pepper and Ginger.<br /><br /><a href=\"http://research.microsoft.com/apps/pubs/default.aspx?id=180286\">Parno, Gentry, Howell, and Raykova</a> introduced another system called Pinocchio that is also based on the theoretical innovations of GGPR. Also, very recent work by <a href=\"http://people.csail.mit.edu/alexch/research/csnark/csnark.html\"> Ben-Sasson, Chiesa, Genkin, Tromer, and Virza</a> (BCGTV) implements a back-end that is closely related to Pinocchio.<br /><br />The high-level comparison between the Zaatar back-end and the Pinocchio/BCGTV back-end is the following. Zaatar is somewhat more efficient because it uses less cryptographic machinery (roughly, the verifier in Zaatar poses queries in the clear, while Pinocchio/BCGTV require the prover to compute over encrypted queries.) However, Pinocchio/BCGTV provide functionality that Zaatar does not. Specifically, the former supports public verifiability and zero-knowledge. Additionally, it consists of only two messages, one from the verifier to the prover and one from the prover to the verifier. Finally, it allows set-up costs to be amortized over an indefinite number of instances of the same computation -- in contrast, the pre-processing costs of Zaatar can be amortized over many instances of a computation only if all instances are verified at the same time. It is worth mentioning that the Pinocchio/BCGTV back-ends are based on non-standard cryptographic assumptions, while Zaatar is based on standard ones.<br /><br />3) Argument Systems without Pre-Processing: <a href=\"http://eccc.hpi-web.de/report/2012/045/\"> Ben-Sasson, Chiesa, Genkin, and Tromer </a> (BCGT) have been pursuing argument systems that avoid a pre-processing phase for the verifier. These argument systems are based on short PCPs, and while existing work on this topic is still theoretical in nature (focusing on reducing the concrete costs of existing PCPs), implementation efforts are reportedly underway.<br /><br />===============<br /><br />Comparison of Back-Ends:<br /><br />Comparison of Argument Systems without Pre-Processing to other  approaches: The advantage of the short-PCPs approach relative to interactive proofs and argument systems with pre-processing is that the former *never* requires a pre-processing phase for the verifier. The disadvantage is that the overheads to the prover are likely to be substantially higher than they are in argument systems with pre-processing. For example, the short PCPs described  by <a href=\"http://eccc.hpi-web.de/report/2012/045/\"> BCGT</a> require sequential repetition of the protocol many  times in order to drive down soundness error. Like Pinocchio and Zaatar, they also require performing FFT operations on objects as large as a computation transcript, but unlike Pinocchio and Zaatar, these short PCPs also require working over fields of small characteristic (and hence can only be combined with front-ends that generate circuits over these fields), require the use of non-trivial finite field algorithms, and require circuits that satisfy certain algebraic notions of regularity. Precisely how large these overheads are in practice remains to be seen.<br /><br />Comparison of Interactive Proofs to Argument Systems with Pre-Processing: The advantages of interactive proofs are three-fold. First, they are secure even against computationally unbounded provers, while argument systems are only secure against polynomial-time provers. Second, interactive proofs can avoid pre-processing entirely for structured computation (e.g. 'regular' circuits) and minimize pre-processing for data-parallel computation, while argument systems with pre-processing (discussed below) inherently require an expensive pre-processing stage for the verifier. Third, interactive proofs achieve unmatched prover efficiency when they are applicable, and in fact can avoid the circuit representation entirely for fundamental primitives like matrix multiplication.  Concretely, Zaatar's prover is roughly 3 orders of magnitude slower than evaluating the circuit with no correctness guarantee (see e.g.<a href=\"http://research.microsoft.com/en-us/UM/redmond/events/fs2013/presentations/Michael-Walfish_EfficientlyVerifying.pptx\">these slides </a> by Mike Walfish), which is roughly commensurate with the prover overhead in my original GKR implementation with Cormode and Mitzenmacher, but is a couple orders of magnitude slower than what we can now achieve with interactive proofs for \"regular\" circuits (see above).<br /><br />The disadvantages of interactive proofs are the following. First, they are only applicable to small-depth circuits (i.e., parallelizable computation). Second, they do not support \"non-deterministic\" circuits, which can be extremely useful for turning high-level programs into small circuits as described in the section on front-ends below (there is  <a href=\"http://www.math.ias.edu/~avi/PUBLICATIONS/MYPAPERS/GVW03/gvw03.pdf\"> evidence</a> that lack of support for non-determinism in inherent in the use of interactive proofs). This means that certain kinds of computations such as those involving many random accesses to memory or sorting/comparison operations are problematic for interactive proofs. Third, interactive proofs cannot support properties like zero-knowledge and public verifiability that are achieved by Pinocchio/BCGTV. Fourth, interactive proofs require logarithmically many rounds of interaction between prover and verifier, while argument systems typically require just one or two rounds.<br /><br />(I maintain, however, that the round complexity of interactive proofs isn't a big deal. First, interaction can be generically removed via the Fiat-Shamir heuristic, which is secure in the random oracle model and may be acceptable in practice. Second, any system allowing the verifier to request a specific computation in the first place is likely to involve a remote procedure call and hence incur round-trip delays anyway. Third, browsers already send a separate request for every image and script on a web page, and typically a browser <a href=\"https://developers.google.com/speed/docs/best-practices/rtt?csw=1#ParallelizeDownloads\">cannot substantially parallelize these requests</a>.)<br /><br />====================<br /><br />Summary of and Comparison of Front-Ends:<br /><br />Ginger, Zaatar, and Pinocchio all contain compilers that turn high-level programs into (non-deterministic) circuits (Pinocchio was the first to handle a subset of C, while the others initially handled a different high-level language but have since moved to C). <a href=\"http://www.cs.utexas.edu/~mwalfish/papers/allspice-oakland13.pdf\"> Vu, Setty, Blumberg, and Walfish</a> (VSBW) built a front-end for an implementation of the GKR protocol (this front-end must generate small-depth circuits that are either deterministic or contain a small number of non-deterministic inputs, since the non-deterministic inputs must be sent explicitly to the verifier. It should also be clarified that their compiler does not produce regular circuits, and hence the GKR protocol requires a pre-processing phase when applied to these circuits, and amortizes these costs over many instances of the computation exactly as in Zaatar/Ginger/Pepper). Given a high-level program, the VSBW front-end also automatically determines whether Zaatar or GKR would be most efficient to verify the computation and runs the better of the two protocols, and their system as a whole is called Allspice.<br /><br />However, none of the front-ends above efficiently supports programs that utilize random access to memory. Two recent front-ends change this. One is the front-end developed by <a href=\"http://people.csail.mit.edu/alexch/research/csnark/csnark.html\"> BCGTV</a> mentioned above, which implemented earlier <a href=\"http://eprint.iacr.org/2012/071\"> theoretical work</a> by the first four authors. Given a high-level program, their approach to circuit generation roughly works as follows. They first compile the C program into actual machine code for a simple Random Access Machine (RAM). They then generate a circuit which takes an entire transcript (sorted by time) of the RAM computation as a non-deterministic input, and checks that the transcript is valid. This requires checking the transcript for both *time consistency* (i.e., that the claimed state of the machine at time i correctly follows from the machine's claimed state at time i-1) and *memory consistency* (i.e., that every time a value is read from memory location x, the value that is returned is equal to the last value written to that location).<br /><br />Their circuit checks time-consistency by representing the transition function of the RAM as a small circuit (they have managed to represent the entire transition function as a circuit with ~1000 gates, at least for short RAM computations of &lt; 1 million steps. While this is still a lot of gates, it is a substantial engineering achievement). It then applies this circuit to each entry i of the transcript and checks that the output is equal to entry i+1 of the transcript. Their circuit checks memory consistency by using routing techniques to re-sort the transcript based on memory location (with ties broken by time), at which point it is straightforward to check that every memory read from a given location returns the last value written to that location.<br /><br />The second  front-end that supports random access to memory is called <a href=\"http://eprint.iacr.org/2013/356\">Pantry</a>, developed by Braun, Feldman, Ren, Setty, Blumberg, and Walfish. They augment Zaatar and Pinocchio's front-end to support random access to memory by using <a href=\"http://en.wikipedia.org/wiki/Merkle_tree\"> Merkle-hashing</a> techniques -- this offers an alternative approach to the routing-based technique for ensuring memory consistency pursued by BCGTV. (Interestingly, the Merkle-hashing approach was explicitly considered in BCGT's theoretical work, but has not yet been incorporated into the BCGTV system).<br /><br />Merkle trees allow one to outsource memory maintenance by building a binary tree whose leaves correspond to memory locations. Each leaf stores the value contained in the corresponding memory location, and each internal node stores an evaluation of a collision-resistant hash function applied to its children. As long as the verifier knows the value of the root, every time a memory location (leaf) is accessed, the prover can 'prove' that the returned value is correct by revealing all values along the leaf-to-root 'witness path'. One can show that the only way the prover can lie is by finding a collision in the hash function.<br /><br />Pantry identifies a collision-resistant hash function whose evaluation function can be (relatively) efficiently represented as a circuit or set of constraints. This allows evaluation of the hash function (and hence checking of 'witness paths', and hence support for random access to memory) to be folded into Zaatar's and Pinocchio's verification machinery.<br /><br />Pantry's use of collision-resistant hash functions is also useful for some applications (such as MapReduce) that do not necessarily require random access to memory -- for these applications, Pantry avoids the use of a full Merkle-hash tree, reducing costs relative to what is required to support general RAMs.<br /><br />Comparison of Pantry and BCGTV:<br /><br />Generality: BCGTV can handle arbitrary C programs. Pantry comes close to achieving this but still cannot handle data-dependent loops. BCGTV also has the advantage that it can be modified to generate circuits that satisfy the algebraic regularity conditions required by back-ends based on short PCPs (though implementations of these back-ends remain in progress). One important aspect of Pantry is that it enables the outsourcing of computations that are run over \"remote inputs\", i.e., inputs that the verifier never sees in full, but is merely provided a digest (typically a hash, or a Merkle-hash) of the input. This is important in several applications, such as verifying MapReduce computations. In principle, this feature could be incorporated into the BCGTV front-end as well, but doing so efficiently would likely require redoing many of the optimizations in Pantry.<br /><br />Efficiency: BCGTV's primary overhead stems from the fact the ~1000-gate transition function sub-circuit must be repeated for *every* step of the RAM. Thus, their circuits are at least 1000 times larger than the runtime of the RAM. Pantry on the other hand requires expensive evaluations of a collision-resistant hash function (when supporting general random access to memory, logarithmically many evaluations of the hash function are required per memory access). However, hash function evaluations in Pantry are only required when memory is accessed, not for every step of the RAM. Thus, which of the two approaches (BCGTV vs. Pantry) generates smaller circuits may depend on how memory-intensive the computation is.  <br /><br />================<br /><br />Summary:<br /><br />Ideally, this post makes clear that each of the approaches to verifiable computation being pursued thus far achieves a different tradeoff between efficiency, expressiveness, and support for features such as public verifiability and zero knowledge properties. This diversity can only be a good thing as users will be able to choose the approach that best suits their needs.<br /><br />In more detail, despite substantial progress, the fully general-purpose front-end still generates circuits that are at least three orders of magnitude larger than the runtime of original RAM computation. Moreover, existing back-ends based on argument systems with pre-processing impose an additional three orders of magnitude overhead for the prover. Arguments based on short PCPs will avoid pre-processing for the verifier, but impose additional overheads on the prover. Interactive proofs can avoid these large overheads for sufficiently structured computation, but require a front-end that generates small-depth deterministic circuits, and does not provide cryptographic properties like public verifiability and support for zero-knowledge achieved by some of the argument systems.<br /><br />Two attractive directions for future work present themselves. One is to develop protocols and build systems that can verifiably execute general computations, but that automatically leverage structure within computations for efficiency gains. Alternatively, it may be better to develop a restricted programming framework analogous to MapReduce that still allows for the expression of a powerful class of computations and automatically \"extracts\" the structure necessary to verify the computation efficiently. If this approach is pursued, it will be critical to determine the right balance between the level of generality to support and the amount of structure to force upon computations for efficiency gains.<br /><br />Acknowledgements: I am indebted to Mike Walfish and Andrew J. Blumberg for extensive conversations over several months that substantially influenced my understanding of the area and this post in particular, and to Mike Walfish and Michael Mitzenmacher for valuable feedback on an early draft of this post. Any errors are entirely my own.<br /><br />Further resources: Bryan Parno hosted a session on verifiable computation at the <a href=\"http://research.microsoft.com/en-us/events/fs2013/\"> Microsoft Research Faculty Summit</a>, where he, Michael Mitzenmacher, and Mike Walfish spoke about several of the approaches discussed in this post. Video of the session is <a href=\"http://wm.microsoft.com/ms/research/events/facultysummit13/28094.wmv\"> available</a>, and Mike's <a href=\"http://research.microsoft.com/en-us/UM/redmond/events/fs2013/presentations/Michael-Walfish_EfficientlyVerifying.pptx\">slides</a> contain a nice comparison of the various approaches.  ") (link ((rel . "replies") (type . "application/atom+xml") (href . "http://mybiasedcoin.blogspot.com/feeds/7659346441833502000/comments/default") (title . "Post Comments"))) (link ((rel . "replies") (type . "text/html") (href . "http://www.blogger.com/comment.g?blogID=8890204&postID=7659346441833502000") (title . "2 Comments"))) (link ((rel . "edit") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/7659346441833502000"))) (link ((rel . "self") (type . "application/atom+xml") (href . "http://www.blogger.com/feeds/8890204/posts/default/7659346441833502000"))) (link ((rel . "alternate") (type . "text/html") (href . "http://mybiasedcoin.blogspot.com/2013/09/guest-post-by-justin-thaler-mini-survey.html") (title . "Guest Post by Justin Thaler: A \"Mini-Survey\" of Practical Verification Algorithms"))) (author nil (name nil "Michael Mitzenmacher") (uri nil "http://www.blogger.com/profile/02161161032642563814") (email nil "noreply@blogger.com") (gd:image ((rel . "http://schemas.google.com/g/2005#thumbnail") (width . "16") (height . "16") (src . "http://img2.blogblog.com/img/b16-rounded.gif")))) (thr:total nil "2"))))