;; -*- coding: utf-8 -*-
(("Multiple-Credit Tests" "<p><font color=\"”#0066cc?\"><br /><em> Can chess statistics help design multiple-choice exams? </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"https://rjlipton.files.wordpress.com/2014/04/pandolfini-bruce-2012-02.jpg\"><img src=\"https://rjlipton.files.wordpress.com/2014/04/pandolfini-bruce-2012-02.jpg?w=600\" alt=\"pandolfini-bruce-2012-02\"   class=\"alignright size-full wp-image-11506\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">UT Dallas <a href=\"http://www.utdallas.edu/news/2012/2/21-15941_ChessFest-To-Honor-Well-Known-Master-Coach_article-wide.html\">source</a><br /></FONT></td></table><p>
Bruce Pandolfini is one of very few living people who have been played by an Oscar-winning actor. He was the real-life chess teacher of junior chess player Joshua Waitzkin, who went on to become the world champion—<a href=\"http://en.wikipedia.org/wiki/Joshua_Waitzkin#Author\">in T’ai Chi</a>. Their story is told in the <a href=\"http://en.wikipedia.org/wiki/Searching_for_Bobby_Fischer\">movie</a> “Searching For Bobby Fischer” with Sir Ben Kingsley, which is still iconic after 20-plus years. Pandolfini is still doing what he loves as an active chess teacher in New York City. For much of this time he has also written a popular feature called “Solitaire Chess” for Chess Life magazine, which is published by the United States Chess Federation.</p><p>
Today Dick and I wish to compare styles of multiple-choice exams, with reference to “Solitaire Chess,” and have some fun as well.</p><p>
Most multiple-choice questions are designed to have a unique correct answer, with all other answers receiving 0 points or even a minus. This is like a chess problem of “find the winning move” type. Mate-in-2, mate-in-3, and endgame problems generally have unique answers—a “dual” solution is an esthetic blemish. There are several popular websites devoted to this kind of chess puzzle, which is great for honing one’s tactical ability. </p><p>
“Solitaire Chess” is different, with more emphasis on strategy. The reader takes the winning side of a notable game Bruce has prepared, and chooses his/her move before revealing the answer and the opponent’s next move. It simulates the feeling of playing a master game. </p><p>
Incidentally Bruce recently attended the wedding of another master player represented in the movie, the real-life Asa Hoffman to the former Virginia LoPresto, who also remember me from New York tournaments in the 1970′s. Among children Bruce has coached in preteen years is the world’s current 5th-ranked player, Fabiano Caruana of Brooklyn and Italy.</p><p><p><H2> Solitaire Chess </H2></p><p><p>
The difference we emphasize is that the game positions often give partial or even full credit for alternative choices. For example, here is the position at move 22 in the March 2014 Chess Life column, of a game that was played in 1934 by Fred Reinfeld, an earlier master teacher who wrote many great books until the 1960′s.  White is to play:</p><p><P><br /><a href=\"https://rjlipton.files.wordpress.com/2014/04/reinfeldposition.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/04/reinfeldposition.png?w=300&h=300\" alt=\"ReinfeldPosition\" width=\"300\" height=\"300\" class=\"aligncenter size-medium wp-image-11508\" /></a></p><p><P><br />
The top score of 5 points goes to the capture move 22.axb4, but the alternatives 22.Nc6 and 22.Ne6+ are deemed almost as good, worth 4 points each, while the non-capture move 22.a4 still gets 2 points. Several other game turns have 3-point partial credits. At the end is a chart connecting your total score over all the moves to the standard chess rating scale devised by Arpad Elo.  For instance, 81–94 points is deemed the range of a 2200–2399 master player such as myself, while 36–50 is for a “good club player” with 1600–1799 rating. </p><p>
Pandolfini’s expert judgment goes into setting both the partial credits and the overall assessment scale. Although chess positions often have 30–50 legal moves or even more, there are typically at most 3–5 moves worth considering, so this is like a standard multiple-choice test in that way. The partial credits, however, are more typical of <em>ranking</em> applications such as judging the value of search-engine hits, where there are 10, 20, 30, or hundreds or thousands of choices to consider. Our topic is about having the best of both kinds of application, and how to do the assessment scientifically.</p><p><p><H2> But Let’s Have Fun </H2></p><p><p>
Well we guess you didn’t come to a blog to take an exam, so we’ll try to make at least the first part fun, before we introduce more “strategic” questions with partial credits. You are on your honor not to Google the answers—we can tell of course; we won’t tell you how we know but our <a href=\"http://en.wikipedia.org/wiki/Heartbleed_bug\">heartbleeds</a> for you.</p><ol><li> PCP stands for which of the following?
<ol><li>
Post Correspondence Problem </p><li>
Provably Checkable Proofs </p><li> A recreational drug
<li> Probabilistically Checkable Proofs
<li> All the above
<li> Some of the above
<li> None of the above.
</ol><li> The first Turing Award Winner was—?
<ol><li> Alan Turing, posthumously for Turing Machines
<li> John Backus for Fortran
<li> Alan Perlis for Algol
<li> None of the above.
</ol><li> By the terms of the Clay Millennium Prize, it would be awarded for—?
<ol><li> A proof that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' />.
<li> A proof that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.
<li> A proof that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' /> is independent of set theory.
<li> All the above
<li> Some of the above
<li> None of the above.
</ol><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> stands for:
<ol><li> Not Polynomial (time).
<li> Nick Pippenger.
<li> Nondeterministic Polynomial (time).
<li> Nick’s Problems.
<li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' /> times <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BP%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{P}' title='{P}' class='latex' />.
</ol><li> Breaking RSA is equivalent to factoring integers:
<ol><li> Yes
<li> No
<li> Yes on Riemann Hypothesis
<li> No on Riemann Hypothesis
<li> Open question.
</ol><li> If <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BBQP%3DBPP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BQP=BPP}}' title='{&#92;mathsf{BQP=BPP}}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NC}}' title='{&#92;mathsf{P=NC}}' class='latex' /> then it follows that which is true?
<ol><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' />.
<li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNL%3DP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NL=P}}' title='{&#92;mathsf{NL=P}}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNL%3DNC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NL=NC}}' title='{&#92;mathsf{NL=NC}}' class='latex' />.
<li> All the above
<li> Some of the above
<li> None of the above.
</ol></ol><p><p><H2> Multi-Choice </H2></p><p><p>
OK, more serious now. Start your engines. Actually in chess, “start your engines” refers to computer chess programs, and would mean either you are cheating, or you are playing in the InfinityChess Freestyle <a href=\"http://www.infinitychess.com/Web/Page/Public/Article/DefaultArticle.aspx?id=141\">tournament</a>, which finishes today.</p><ol><p><li>
The main significance of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> being shown <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete in 1970-71 is: </p><ol><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete sets weren’t known before. </p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> is a natural problem, and this led to many other natural problems in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> being shown to be complete. </p><li>
Logic is a universal language. </p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> does not have a polynomial-time algorithm. </p><li>
Formulas that are satisfiable can be verified after guessing a good assignment in polynomial time.
</ol><li> We know that nondeterministic linear bounded automata (NLBAs) accept a different class of languages from <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> because:
<ol><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> allows using more than linear space. </p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D+%5Cneq+%5Cmathsf%7BNTIME%7D%5BO%28n%29%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP} &#92;neq &#92;mathsf{NTIME}[O(n)]}' title='{&#92;mathsf{NP} &#92;neq &#92;mathsf{NTIME}[O(n)]}' class='latex' /> by the nondeterministic time hierarchy theorem. </p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> is closed downward under polynomial-time many-one reductions but the class of NLBA languages is not. </p><li>
NLBAs can accept <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' />-complete languages and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE+%5Csupset+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE &#92;supset NP}}' title='{&#92;mathsf{PSPACE &#92;supset NP}}' class='latex' />. </p><li>
NLBA languages are closed under complement, while <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> isn’t.
</ol><li> The easiest languages currently known not to be in nonuniform <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BACC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{ACC}}' title='{&#92;mathsf{ACC}}' class='latex' /> belong to:
<ol><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNEXP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NEXP}}' title='{&#92;mathsf{NEXP}}' class='latex' /></p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BEXP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{EXP}}' title='{&#92;mathsf{EXP}}' class='latex' /></p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /></p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /></p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNC%5E%7B1%7D%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NC^{1}}}' title='{&#92;mathsf{NC^{1}}}' class='latex' />.
</ol><li> Kurt G&ouml;del’s Second Incompleteness Theorem states that:
<ol><li>
No formal system can prove its own consistency. </p><li>
No formal system can prove its own consistency, unless it is inconsistent. </p><li>
No formal system that extends basic arithmetic can prove its own consistency. </p><li>
No formal system that extends basic arithmetic can prove its own consistency, unless it is inconsistent. </p><li>
No computably axiomatizable formal system that extends basic arithmetic can prove its own consistency, unless it is inconsistent.
</ol><li> The language of undirected simple graphs that have a unique 4-edge coloring up to isomprphisms belongs to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />—indeed, it is just disjoint unions of star graphs. In consequence:
<ol><li>
The “Four Edge Coloring” (<img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' />) problem cannot be <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete. </p><li>
There does not exist a parsimonious polynomial-time reduction to the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> language unless factoring is in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />. </p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> cannot be polynomial-time isomorphic, unless factoring is in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />. </p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> is solvable in quantum polynomial time. </p><li>
There does not exist a polynomial-time reduction from <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> that is parsimonious on the 4-edge-coloring relation, unless factoring is in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />.
</ol><li> Structural evidence for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BBPP+%3D+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP = P}}' title='{&#92;mathsf{BPP = P}}' class='latex' /> is:
<ol><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BPrimes%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{Primes}}' title='{&#92;mathsf{Primes}}' class='latex' /> and several other classic <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BBPP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP}}' title='{&#92;mathsf{BPP}}' class='latex' /> problems are now known to be in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />. </p><li>
Polynomial identity testing can be de-randomized. </p><li>
It follows if there are languages in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BEXP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{EXP}}' title='{&#92;mathsf{EXP}}' class='latex' /> that do not have <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%5E%7Bo%28n%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^{o(n)}}' title='{2^{o(n)}}' class='latex' />-sized circuits. </p><li>
No <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BBPP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP}}' title='{&#92;mathsf{BPP}}' class='latex' />-complete problems have been found. </p><li>
A random oracle <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A}' title='{A}' class='latex' /> makes <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BBPP%7D%5EA+%3D+%5Cmathsf%7BP%7D%5EA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP}^A = &#92;mathsf{P}^A}' title='{&#92;mathsf{BPP}^A = &#92;mathsf{P}^A}' class='latex' />.
</ol></ol><p><p><H2> Getting Help With Judgment Calls </H2></p><p><p>
We think each of our latter six “multi-choice” questions has a clear best answer, but our judgment comes from perspectives in our field. For instance, “structural” complexity came with a specific meaning apart from algorithmic and practical considerations. Even granting that meaning, arguments can be made for several answers to the last question—all except the one that is false on current knowledge. For example, random-oracle results used to be considered stronger evidence than is commonly ascribed to them now.</p><p>
We could have made catch-all “some of the above” answers as in our first set. However, this would miss our feeling of there being a pecking order even among the non-optimal answers. Again with reference to the last question, random oracles and complete languages are “structural” while the history of classifying problems is not, and between the first two, lacking a completeness level is not generally evidence of being tractable. Hence we see the possibility of better assessment by giving different partial credits to these answers.</p><p>
An even more quantitative option is to ask the test-taker to rate each statement on (say) a 0–5 scale. This would be just like asking the takers to estimate the partial credits themselves. We could then score according to distributional similarity to our own assignment, weighting closeness on the best answers the most. Of course this style of grading is most appropriate to judging search engines, based on an expert reference assessment of the importance of the various ‘hits’ returned. And it is also like simulating the creation of “Solitaire Chess” itself—more than just looking for the best move which is what we do when we actually play chess. Thus the teacher has a harder task than the player.</p><p>
The most ambitious goal is to turn the process around by making backwards inferences about the values of questions from the aggregated selection of many well-informed takers. In chess this would be like judging the value of a move based on the proportion of strong players who choose it. Nowadays this is regarded as overruled by the judgments of strong computer programs, notwithstanding the issue that players’ “book knowledge” of past games makes their choices less independent than among test takers. </p><p>
However, the ability in chess to correlate players’ judgments with computer values of moves, and map the distributions, <em>may</em> help us make inferences about “objective value” from the distributions of the test-takers. The computer values are <i>scientifically objective</i> partial credits, and “Solitaire Chess” could be scored as an app that way.  This all plays into quantifying <a href=\"http://en.wikipedia.org/wiki/The_Wisdom_of_Crowds\">the wisdom of crowds</a> along lines discussed toward the end of the Distinguished Speaker <a href=\"http://cfem.au.dk/fileadmin/www.cfem.au.dk/Downloads/CFEM-inauguration/Bounding_Rationality_by_Computation_Complexity_Lance-Fortnow.pdf\">lecture</a> given by Lance Fortnow on his visit to Buffalo last week. At least this is our motive for making tests more like strategic chess.</p><p><p><H2> Open Problems </H2></p><p><p>
What partial-credit values would you assign to our complexity questions?</p><p>
Should multiple-choice tests be more like “Solitaire Chess”? Does one obtain deeper and better assessment that way? Is the difference important enough to massive online courses? </p><p align=\"center\"> &sect; </p><p>
Here are the answers to our April Fool’s anagram <a href=\"https://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/\">quiz</a>, besides “Pearl Gates” = Peter Sagal and “Slack Laser” = Carl Kasell:</p><ul><li>
“Hydra Dye Frog” is Godfrey Hardy; the item is true. </p><li>
“Gail Kali” is Gil Kalai, and the bio is false—although the description of his eponymous <a href=\"http://en.wikipedia.org/wiki/Kalai's_3^d_conjecture\">conjecture</a> is fine. </p><li>
“Rich-Cal Fried Sugars” is Carl Friedrich Gauss, and the Ceres story is fit to go on a box of frosted cornflakes.
<li>
“One-Ale Hurdler” is Leonhard Euler, and the <a href=\"http://en.wikipedia.org/wiki/Seven_Bridges_of_Konigsberg\">K&ouml;nigsberg Bridge Problem</a> is indeed hailed as founding Graph Theory. </p><li>
“One-Cat Tree” is Terence Tao, and our extrapolation of his new <a href=\"http://terrytao.wordpress.com/2014/02/04/finite-time-blowup-for-an-averaged-three-dimensional-navier-stokes-equation/\">result</a> on Navier-Stokes is a flight of fancy. </p><li>
“Wes Gromit” is Tim Gowers, and we twisted past all the great work by him and Tao and “Gene Bern” = Ben Green on arithmetic progressions with a false statement—one falsified by the older theorem of Gustav Dirichlet that every infinite arithmetic progression without a common factor has infinitely many primes. </p><li>
“Annual Trig” is Alan Turing, true item. </p><li>
“Town Falconer” is Lance Fortnow, and we stated things backwards: he and “Semi Spiker” = Mike Sipser gave an oracle <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A}' title='{A}' class='latex' /> for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BIP%7D%5EA+%5Cnot%5Csubseteq+%5Cmathsf%7Bco%7D%5Ctext%7B-%7D%5Cmathsf%7BNP%7D%5EA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{IP}^A &#92;not&#92;subseteq &#92;mathsf{co}&#92;text{-}&#92;mathsf{NP}^A}' title='{&#92;mathsf{IP}^A &#92;not&#92;subseteq &#92;mathsf{co}&#92;text{-}&#92;mathsf{NP}^A}' class='latex' />, while “Amish Raid” = Adi Shamir finished the oracle-exorcising result <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BIP+%3D+PSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{IP = PSPACE}}' title='{&#92;mathsf{IP = PSPACE}}' class='latex' />. </p><li>
“Joint Who Tolled” is John Littlewood, true description. </p><li>
“Glacial Warmish” is William Gasarch, but as with “Falconer” the theorem statement is backwards. </p><li>
“Glib Tales” is a well-known anagram of Bill Gates, and yes he was <a href=\"http://en.chessbase.com/post/carlsen-mates-bill-gates-in-79-seconds\">mated</a> in 9 moves. </p><li>
“Sonata Consort” is Scott Aaronson, and the opposite of our first statement is <a href=\"http://www.scottaaronson.com/blog/\">proclaimed</a> on the masthead of his blog. Indeed all six “fools” are bloggers like us…
</ul><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11505/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11505/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11505&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "https://rjlipton.wordpress.com/2014/04/10/multiple-credit-tests/" (21318 57219) obsolete 1 nil nil ((title nil "Multiple-Credit Tests") (link nil "https://rjlipton.wordpress.com/2014/04/10/multiple-credit-tests/") (comments nil "https://rjlipton.wordpress.com/2014/04/10/multiple-credit-tests/#comments") (pubDate nil "Thu, 10 Apr 2014 18:14:27 +0000") (dc:creator nil "Pip") (category nil "All Posts") (category nil "Ideas") (category nil "anagrams") (category nil "April Fool's") (category nil "chess") (category nil "MOOCs") (category nil "multiple-choice tests") (category nil "Pandolfini") (category nil "quiz") (guid ((isPermaLink . "false")) "https://rjlipton.wordpress.com/?p=11505") (description nil "Can chess statistics help design multiple-choice exams? UT Dallas source Bruce Pandolfini is one of very few living people who have been played by an Oscar-winning actor. He was the real-life chess teacher of junior chess player Joshua Waitzkin, who went on to become the world champion&#8212;in T&#8217;ai Chi. Their story is told in the [&#8230;]<img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11505&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Can chess statistics help design multiple-choice exams? </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"https://rjlipton.files.wordpress.com/2014/04/pandolfini-bruce-2012-02.jpg\"><img src=\"https://rjlipton.files.wordpress.com/2014/04/pandolfini-bruce-2012-02.jpg?w=600\" alt=\"pandolfini-bruce-2012-02\"   class=\"alignright size-full wp-image-11506\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">UT Dallas <a href=\"http://www.utdallas.edu/news/2012/2/21-15941_ChessFest-To-Honor-Well-Known-Master-Coach_article-wide.html\">source</a><br /></FONT></td></table><p>
Bruce Pandolfini is one of very few living people who have been played by an Oscar-winning actor. He was the real-life chess teacher of junior chess player Joshua Waitzkin, who went on to become the world champion&#8212;<a href=\"http://en.wikipedia.org/wiki/Joshua_Waitzkin#Author\">in T&#8217;ai Chi</a>. Their story is told in the <a href=\"http://en.wikipedia.org/wiki/Searching_for_Bobby_Fischer\">movie</a> &#8220;Searching For Bobby Fischer&#8221; with Sir Ben Kingsley, which is still iconic after 20-plus years. Pandolfini is still doing what he loves as an active chess teacher in New York City. For much of this time he has also written a popular feature called &#8220;Solitaire Chess&#8221; for Chess Life magazine, which is published by the United States Chess Federation.</p><p>
Today Dick and I wish to compare styles of multiple-choice exams, with reference to &#8220;Solitaire Chess,&#8221; and have some fun as well.</p><p>
Most multiple-choice questions are designed to have a unique correct answer, with all other answers receiving 0 points or even a minus. This is like a chess problem of &#8220;find the winning move&#8221; type. Mate-in-2, mate-in-3, and endgame problems generally have unique answers&#8212;a &#8220;dual&#8221; solution is an esthetic blemish. There are several popular websites devoted to this kind of chess puzzle, which is great for honing one&#8217;s tactical ability. </p><p>
&#8220;Solitaire Chess&#8221; is different, with more emphasis on strategy. The reader takes the winning side of a notable game Bruce has prepared, and chooses his/her move before revealing the answer and the opponent&#8217;s next move. It simulates the feeling of playing a master game. </p><p>
Incidentally Bruce recently attended the wedding of another master player represented in the movie, the real-life Asa Hoffman to the former Virginia LoPresto, who also remember me from New York tournaments in the 1970&#8242;s. Among children Bruce has coached in preteen years is the world&#8217;s current 5th-ranked player, Fabiano Caruana of Brooklyn and Italy.</p><p><p><H2> Solitaire Chess </H2></p><p><p>
The difference we emphasize is that the game positions often give partial or even full credit for alternative choices. For example, here is the position at move 22 in the March 2014 Chess Life column, of a game that was played in 1934 by Fred Reinfeld, an earlier master teacher who wrote many great books until the 1960&#8242;s.  White is to play:</p><p><P><br /><a href=\"https://rjlipton.files.wordpress.com/2014/04/reinfeldposition.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/04/reinfeldposition.png?w=300&#038;h=300\" alt=\"ReinfeldPosition\" width=\"300\" height=\"300\" class=\"aligncenter size-medium wp-image-11508\" /></a></p><p><P><br />
The top score of 5 points goes to the capture move 22.axb4, but the alternatives 22.Nc6 and 22.Ne6+ are deemed almost as good, worth 4 points each, while the non-capture move 22.a4 still gets 2 points. Several other game turns have 3-point partial credits. At the end is a chart connecting your total score over all the moves to the standard chess rating scale devised by Arpad Elo.  For instance, 81&#8211;94 points is deemed the range of a 2200&#8211;2399 master player such as myself, while 36&#8211;50 is for a &#8220;good club player&#8221; with 1600&#8211;1799 rating. </p><p>
Pandolfini&#8217;s expert judgment goes into setting both the partial credits and the overall assessment scale. Although chess positions often have 30&#8211;50 legal moves or even more, there are typically at most 3&#8211;5 moves worth considering, so this is like a standard multiple-choice test in that way. The partial credits, however, are more typical of <em>ranking</em> applications such as judging the value of search-engine hits, where there are 10, 20, 30, or hundreds or thousands of choices to consider. Our topic is about having the best of both kinds of application, and how to do the assessment scientifically.</p><p><p><H2> But Let&#8217;s Have Fun </H2></p><p><p>
Well we guess you didn&#8217;t come to a blog to take an exam, so we&#8217;ll try to make at least the first part fun, before we introduce more &#8220;strategic&#8221; questions with partial credits. You are on your honor not to Google the answers&#8212;we can tell of course; we won&#8217;t tell you how we know but our <a href=\"http://en.wikipedia.org/wiki/Heartbleed_bug\">heartbleeds</a> for you.</p><ol><li> PCP stands for which of the following?
<ol><li>
Post Correspondence Problem </p><li>
Provably Checkable Proofs </p><li> A recreational drug
<li> Probabilistically Checkable Proofs
<li> All the above
<li> Some of the above
<li> None of the above.
</ol><li> The first Turing Award Winner was&#8212;?
<ol><li> Alan Turing, posthumously for Turing Machines
<li> John Backus for Fortran
<li> Alan Perlis for Algol
<li> None of the above.
</ol><li> By the terms of the Clay Millennium Prize, it would be awarded for&#8212;?
<ol><li> A proof that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' />.
<li> A proof that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.
<li> A proof that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' /> is independent of set theory.
<li> All the above
<li> Some of the above
<li> None of the above.
</ol><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> stands for:
<ol><li> Not Polynomial (time).
<li> Nick Pippenger.
<li> Nondeterministic Polynomial (time).
<li> Nick&#8217;s Problems.
<li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' /> times <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BP%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{P}' title='{P}' class='latex' />.
</ol><li> Breaking RSA is equivalent to factoring integers:
<ol><li> Yes
<li> No
<li> Yes on Riemann Hypothesis
<li> No on Riemann Hypothesis
<li> Open question.
</ol><li> If <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BBQP%3DBPP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BQP=BPP}}' title='{&#92;mathsf{BQP=BPP}}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NC}}' title='{&#92;mathsf{P=NC}}' class='latex' /> then it follows that which is true?
<ol><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' />.
<li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNL%3DP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NL=P}}' title='{&#92;mathsf{NL=P}}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNL%3DNC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NL=NC}}' title='{&#92;mathsf{NL=NC}}' class='latex' />.
<li> All the above
<li> Some of the above
<li> None of the above.
</ol></ol><p><p><H2> Multi-Choice </H2></p><p><p>
OK, more serious now. Start your engines. Actually in chess, &#8220;start your engines&#8221; refers to computer chess programs, and would mean either you are cheating, or you are playing in the InfinityChess Freestyle <a href=\"http://www.infinitychess.com/Web/Page/Public/Article/DefaultArticle.aspx?id=141\">tournament</a>, which finishes today.</p><ol><p><li>
The main significance of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> being shown <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete in 1970-71 is: </p><ol><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete sets weren&#8217;t known before. </p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> is a natural problem, and this led to many other natural problems in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> being shown to be complete. </p><li>
Logic is a universal language. </p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> does not have a polynomial-time algorithm. </p><li>
Formulas that are satisfiable can be verified after guessing a good assignment in polynomial time.
</ol><li> We know that nondeterministic linear bounded automata (NLBAs) accept a different class of languages from <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> because:
<ol><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> allows using more than linear space. </p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D+%5Cneq+%5Cmathsf%7BNTIME%7D%5BO%28n%29%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP} &#92;neq &#92;mathsf{NTIME}[O(n)]}' title='{&#92;mathsf{NP} &#92;neq &#92;mathsf{NTIME}[O(n)]}' class='latex' /> by the nondeterministic time hierarchy theorem. </p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> is closed downward under polynomial-time many-one reductions but the class of NLBA languages is not. </p><li>
NLBAs can accept <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' />-complete languages and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE+%5Csupset+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE &#92;supset NP}}' title='{&#92;mathsf{PSPACE &#92;supset NP}}' class='latex' />. </p><li>
NLBA languages are closed under complement, while <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> isn&#8217;t.
</ol><li> The easiest languages currently known not to be in nonuniform <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BACC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{ACC}}' title='{&#92;mathsf{ACC}}' class='latex' /> belong to:
<ol><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNEXP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NEXP}}' title='{&#92;mathsf{NEXP}}' class='latex' /></p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BEXP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{EXP}}' title='{&#92;mathsf{EXP}}' class='latex' /></p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /></p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /></p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNC%5E%7B1%7D%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NC^{1}}}' title='{&#92;mathsf{NC^{1}}}' class='latex' />.
</ol><li> Kurt G&ouml;del&#8217;s Second Incompleteness Theorem states that:
<ol><li>
No formal system can prove its own consistency. </p><li>
No formal system can prove its own consistency, unless it is inconsistent. </p><li>
No formal system that extends basic arithmetic can prove its own consistency. </p><li>
No formal system that extends basic arithmetic can prove its own consistency, unless it is inconsistent. </p><li>
No computably axiomatizable formal system that extends basic arithmetic can prove its own consistency, unless it is inconsistent.
</ol><li> The language of undirected simple graphs that have a unique 4-edge coloring up to isomprphisms belongs to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />&#8212;indeed, it is just disjoint unions of star graphs. In consequence:
<ol><li>
The &#8220;Four Edge Coloring&#8221; (<img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' />) problem cannot be <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete. </p><li>
There does not exist a parsimonious polynomial-time reduction to the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> language unless factoring is in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />. </p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> cannot be polynomial-time isomorphic, unless factoring is in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />. </p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> is solvable in quantum polynomial time. </p><li>
There does not exist a polynomial-time reduction from <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> that is parsimonious on the 4-edge-coloring relation, unless factoring is in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />.
</ol><li> Structural evidence for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BBPP+%3D+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP = P}}' title='{&#92;mathsf{BPP = P}}' class='latex' /> is:
<ol><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BPrimes%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{Primes}}' title='{&#92;mathsf{Primes}}' class='latex' /> and several other classic <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BBPP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP}}' title='{&#92;mathsf{BPP}}' class='latex' /> problems are now known to be in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />. </p><li>
Polynomial identity testing can be de-randomized. </p><li>
It follows if there are languages in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BEXP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{EXP}}' title='{&#92;mathsf{EXP}}' class='latex' /> that do not have <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%5E%7Bo%28n%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^{o(n)}}' title='{2^{o(n)}}' class='latex' />-sized circuits. </p><li>
No <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BBPP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP}}' title='{&#92;mathsf{BPP}}' class='latex' />-complete problems have been found. </p><li>
A random oracle <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A}' title='{A}' class='latex' /> makes <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BBPP%7D%5EA+%3D+%5Cmathsf%7BP%7D%5EA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP}^A = &#92;mathsf{P}^A}' title='{&#92;mathsf{BPP}^A = &#92;mathsf{P}^A}' class='latex' />.
</ol></ol><p><p><H2> Getting Help With Judgment Calls </H2></p><p><p>
We think each of our latter six &#8220;multi-choice&#8221; questions has a clear best answer, but our judgment comes from perspectives in our field. For instance, &#8220;structural&#8221; complexity came with a specific meaning apart from algorithmic and practical considerations. Even granting that meaning, arguments can be made for several answers to the last question&#8212;all except the one that is false on current knowledge. For example, random-oracle results used to be considered stronger evidence than is commonly ascribed to them now.</p><p>
We could have made catch-all &#8220;some of the above&#8221; answers as in our first set. However, this would miss our feeling of there being a pecking order even among the non-optimal answers. Again with reference to the last question, random oracles and complete languages are &#8220;structural&#8221; while the history of classifying problems is not, and between the first two, lacking a completeness level is not generally evidence of being tractable. Hence we see the possibility of better assessment by giving different partial credits to these answers.</p><p>
An even more quantitative option is to ask the test-taker to rate each statement on (say) a 0&#8211;5 scale. This would be just like asking the takers to estimate the partial credits themselves. We could then score according to distributional similarity to our own assignment, weighting closeness on the best answers the most. Of course this style of grading is most appropriate to judging search engines, based on an expert reference assessment of the importance of the various &#8216;hits&#8217; returned. And it is also like simulating the creation of &#8220;Solitaire Chess&#8221; itself&#8212;more than just looking for the best move which is what we do when we actually play chess. Thus the teacher has a harder task than the player.</p><p>
The most ambitious goal is to turn the process around by making backwards inferences about the values of questions from the aggregated selection of many well-informed takers. In chess this would be like judging the value of a move based on the proportion of strong players who choose it. Nowadays this is regarded as overruled by the judgments of strong computer programs, notwithstanding the issue that players&#8217; &#8220;book knowledge&#8221; of past games makes their choices less independent than among test takers. </p><p>
However, the ability in chess to correlate players&#8217; judgments with computer values of moves, and map the distributions, <em>may</em> help us make inferences about &#8220;objective value&#8221; from the distributions of the test-takers. The computer values are <i>scientifically objective</i> partial credits, and &#8220;Solitaire Chess&#8221; could be scored as an app that way.  This all plays into quantifying <a href=\"http://en.wikipedia.org/wiki/The_Wisdom_of_Crowds\">the wisdom of crowds</a> along lines discussed toward the end of the Distinguished Speaker <a href=\"http://cfem.au.dk/fileadmin/www.cfem.au.dk/Downloads/CFEM-inauguration/Bounding_Rationality_by_Computation_Complexity_Lance-Fortnow.pdf\">lecture</a> given by Lance Fortnow on his visit to Buffalo last week. At least this is our motive for making tests more like strategic chess.</p><p><p><H2> Open Problems </H2></p><p><p>
What partial-credit values would you assign to our complexity questions?</p><p>
Should multiple-choice tests be more like &#8220;Solitaire Chess&#8221;? Does one obtain deeper and better assessment that way? Is the difference important enough to massive online courses? </p><p align=\"center\"> &sect; </p><p>
Here are the answers to our April Fool&#8217;s anagram <a href=\"https://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/\">quiz</a>, besides &#8220;Pearl Gates&#8221; = Peter Sagal and &#8220;Slack Laser&#8221; = Carl Kasell:</p><ul><li>
&#8220;Hydra Dye Frog&#8221; is Godfrey Hardy; the item is true. </p><li>
&#8220;Gail Kali&#8221; is Gil Kalai, and the bio is false&#8212;although the description of his eponymous <a href=\"http://en.wikipedia.org/wiki/Kalai's_3^d_conjecture\">conjecture</a> is fine. </p><li>
&#8220;Rich-Cal Fried Sugars&#8221; is Carl Friedrich Gauss, and the Ceres story is fit to go on a box of frosted cornflakes.
<li>
&#8220;One-Ale Hurdler&#8221; is Leonhard Euler, and the <a href=\"http://en.wikipedia.org/wiki/Seven_Bridges_of_Konigsberg\">K&ouml;nigsberg Bridge Problem</a> is indeed hailed as founding Graph Theory. </p><li>
&#8220;One-Cat Tree&#8221; is Terence Tao, and our extrapolation of his new <a href=\"http://terrytao.wordpress.com/2014/02/04/finite-time-blowup-for-an-averaged-three-dimensional-navier-stokes-equation/\">result</a> on Navier-Stokes is a flight of fancy. </p><li>
&#8220;Wes Gromit&#8221; is Tim Gowers, and we twisted past all the great work by him and Tao and &#8220;Gene Bern&#8221; = Ben Green on arithmetic progressions with a false statement&#8212;one falsified by the older theorem of Gustav Dirichlet that every infinite arithmetic progression without a common factor has infinitely many primes. </p><li>
&#8220;Annual Trig&#8221; is Alan Turing, true item. </p><li>
&#8220;Town Falconer&#8221; is Lance Fortnow, and we stated things backwards: he and &#8220;Semi Spiker&#8221; = Mike Sipser gave an oracle <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A}' title='{A}' class='latex' /> for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BIP%7D%5EA+%5Cnot%5Csubseteq+%5Cmathsf%7Bco%7D%5Ctext%7B-%7D%5Cmathsf%7BNP%7D%5EA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{IP}^A &#92;not&#92;subseteq &#92;mathsf{co}&#92;text{-}&#92;mathsf{NP}^A}' title='{&#92;mathsf{IP}^A &#92;not&#92;subseteq &#92;mathsf{co}&#92;text{-}&#92;mathsf{NP}^A}' class='latex' />, while &#8220;Amish Raid&#8221; = Adi Shamir finished the oracle-exorcising result <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BIP+%3D+PSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{IP = PSPACE}}' title='{&#92;mathsf{IP = PSPACE}}' class='latex' />. </p><li>
&#8220;Joint Who Tolled&#8221; is John Littlewood, true description. </p><li>
&#8220;Glacial Warmish&#8221; is William Gasarch, but as with &#8220;Falconer&#8221; the theorem statement is backwards. </p><li>
&#8220;Glib Tales&#8221; is a well-known anagram of Bill Gates, and yes he was <a href=\"http://en.chessbase.com/post/carlsen-mates-bill-gates-in-79-seconds\">mated</a> in 9 moves. </p><li>
&#8220;Sonata Consort&#8221; is Scott Aaronson, and the opposite of our first statement is <a href=\"http://www.scottaaronson.com/blog/\">proclaimed</a> on the masthead of his blog. Indeed all six &#8220;fools&#8221; are bloggers like us&#8230;
</ul><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11505/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11505/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11505&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "https://rjlipton.wordpress.com/2014/04/10/multiple-credit-tests/feed/") (slash:comments nil "0") (media:content ((url . "https://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/04/pandolfini-bruce-2012-02.jpg") (medium . "image")) (media:title ((type . "html")) "pandolfini-bruce-2012-02")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/04/reinfeldposition.png?w=300") (medium . "image")) (media:title ((type . "html")) "ReinfeldPosition")))) ("Multiple-Credit Tests" "<p><font color=\"”#0066cc?\"><br /><em> Can chess statistics help design multiple-choice exams? </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/04/pandolfini-bruce-2012-02.jpg\"><img src=\"http://rjlipton.files.wordpress.com/2014/04/pandolfini-bruce-2012-02.jpg?w=600\" alt=\"pandolfini-bruce-2012-02\"   class=\"alignright size-full wp-image-11506\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">UT Dallas <a href=\"http://www.utdallas.edu/news/2012/2/21-15941_ChessFest-To-Honor-Well-Known-Master-Coach_article-wide.html\">source</a><br /></FONT></td></table><p>
Bruce Pandolfini is one of very few living people who have been played by an Oscar-winning actor. He was the real-life chess teacher of junior chess player Joshua Waitzkin, who went on to become the world champion—<a href=\"http://en.wikipedia.org/wiki/Joshua_Waitzkin#Author\">in T’ai Chi</a>. Their story is told in the <a href=\"http://en.wikipedia.org/wiki/Searching_for_Bobby_Fischer\">movie</a> “Searching For Bobby Fischer” with Sir Ben Kingsley, which is still iconic after 20-plus years. Pandolfini is still doing what he loves as an active chess teacher in New York City. For much of this time he has also written a popular feature called “Solitaire Chess” for Chess Life magazine, which is published by the United States Chess Federation.</p><p>
Today Dick and I wish to compare styles of multiple-choice exams, with reference to “Solitaire Chess,” and have some fun as well.</p><p>
Most multiple-choice questions are designed to have a unique correct answer, with all other answers receiving 0 points or even a minus. This is like a chess problem of “find the winning move” type. Mate-in-2, mate-in-3, and endgame problems generally have unique answers—a “dual” solution is an esthetic blemish. There are several popular websites devoted to this kind of chess puzzle, which is great for honing one’s tactical ability. </p><p>
“Solitaire Chess” is different, with more emphasis on strategy. The reader takes the winning side of a notable game Bruce has prepared, and chooses his/her move before revealing the answer and the opponent’s next move. It simulates the feeling of playing a master game. </p><p>
Incidentally Bruce recently attended the wedding of another master player represented in the movie, the real-life Asa Hoffman to the former Virginia LoPresto, who also remember me from New York tournaments in the 1970′s. Among children Bruce has coached in preteen years is the world’s current 5th-ranked player, Fabiano Caruana of Brooklyn and Italy.</p><p><p><H2> Solitaire Chess </H2></p><p><p>
The difference we emphasize is that the game positions often give partial or even full credit for alternative choices. For example, here is the position at move 22 in the March 2014 Chess Life column, of a game that was played in 1934 by Fred Reinfeld, an earlier master teacher who wrote many great books until the 1960′s.  White is to play:</p><p><P><br /><a href=\"http://rjlipton.files.wordpress.com/2014/04/reinfeldposition.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/04/reinfeldposition.png?w=300&h=300\" alt=\"ReinfeldPosition\" width=\"300\" height=\"300\" class=\"aligncenter size-medium wp-image-11508\" /></a></p><p><P><br />
The top score of 5 points goes to the capture move 22.axb4, but the alternatives 22.Nc6 and 22.Ne6+ are deemed almost as good, worth 4 points each, while the non-capture move 22.a4 still gets 2 points. Several other game turns have 3-point partial credits. At the end is a chart connecting your total score over all the moves to the standard chess rating scale devised by Arpad Elo.  For instance, 81–94 points is deemed the range of a 2200–2399 master player such as myself, while 36–50 is for a “good club player” with 1600–1799 rating. </p><p>
Pandolfini’s expert judgment goes into setting both the partial credits and the overall assessment scale. Although chess positions often have 30–50 legal moves or even more, there are typically at most 3–5 moves worth considering, so this is like a standard multiple-choice test in that way. The partial credits, however, are more typical of <em>ranking</em> applications such as judging the value of search-engine hits, where there are 10, 20, 30, or hundreds or thousands of choices to consider. Our topic is about having the best of both kinds of application, and how to do the assessment scientifically.</p><p><p><H2> But Let’s Have Fun </H2></p><p><p>
Well we guess you didn’t come to a blog to take an exam, so we’ll try to make at least the first part fun, before we introduce more “strategic” questions with partial credits. You are on your honor not to Google the answers—we can tell of course; we won’t tell you how we know but our <a href=\"http://en.wikipedia.org/wiki/Heartbleed_bug\">heartbleeds</a> for you.</p><ol><li> PCP stands for which of the following?
<ol><li>
Post Correspondence Problem </p><li>
Provably Checkable Proofs </p><li> A recreational drug
<li> Probabilistically Checkable Proofs
<li> All the above
<li> Some of the above
<li> None of the above.
</ol><li> The first Turing Award Winner was—?
<ol><li> Alan Turing, posthumously for Turing Machines
<li> John Backus for Fortran
<li> Alan Perlis for Algol
<li> None of the above.
</ol><li> By the terms of the Clay Millennium Prize, it would be awarded for—?
<ol><li> A proof that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' />.
<li> A proof that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.
<li> A proof that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' /> is independent of set theory.
<li> All the above
<li> Some of the above
<li> None of the above.
</ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> stands for:
<ol><li> Not Polynomial (time).
<li> Nick Pippenger.
<li> Nondeterministic Polynomial (time).
<li> Nick’s Problems.
<li><img src='http://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' /> times <img src='http://s0.wp.com/latex.php?latex=%7BP%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{P}' title='{P}' class='latex' />.
</ol><li> Breaking RSA is equivalent to factoring integers:
<ol><li> Yes
<li> No
<li> Yes on Riemann Hypothesis
<li> No on Riemann Hypothesis
<li> Open question.
</ol><li> If <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BBQP%3DBPP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BQP=BPP}}' title='{&#92;mathsf{BQP=BPP}}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NC}}' title='{&#92;mathsf{P=NC}}' class='latex' /> then it follows that which is true?
<ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' />.
<li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNL%3DP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NL=P}}' title='{&#92;mathsf{NL=P}}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNL%3DNC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NL=NC}}' title='{&#92;mathsf{NL=NC}}' class='latex' />.
<li> All the above
<li> Some of the above
<li> None of the above.
</ol></ol><p><p><H2> Multi-Choice </H2></p><p><p>
OK, more serious now. Start your engines. Actually in chess, “start your engines” refers to computer chess programs, and would mean either you are cheating, or you are playing in the InfinityChess Freestyle <a href=\"http://www.infinitychess.com/Web/Page/Public/Article/DefaultArticle.aspx?id=141\">tournament</a>, which finishes today.</p><ol><p><li>
The main significance of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> being shown <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete in 1970-71 is: </p><ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete sets weren’t known before. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> is a natural problem, and this led to many other natural problems in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> being shown to be complete. </p><li>
Logic is a universal language. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> does not have a polynomial-time algorithm. </p><li>
Formulas that are satisfiable can be verified after guessing a good assignment in polynomial time.
</ol><li> We know that nondeterministic linear bounded automata (NLBAs) accept a different class of languages from <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> because:
<ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> allows using more than linear space. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D+%5Cneq+%5Cmathsf%7BNTIME%7D%5BO%28n%29%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP} &#92;neq &#92;mathsf{NTIME}[O(n)]}' title='{&#92;mathsf{NP} &#92;neq &#92;mathsf{NTIME}[O(n)]}' class='latex' /> by the nondeterministic time hierarchy theorem. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> is closed downward under polynomial-time many-one reductions but the class of NLBA languages is not. </p><li>
NLBAs can accept <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' />-complete languages and <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE+%5Csupset+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE &#92;supset NP}}' title='{&#92;mathsf{PSPACE &#92;supset NP}}' class='latex' />. </p><li>
NLBA languages are closed under complement, while <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> isn’t.
</ol><li> The easiest languages currently known not to be in nonuniform <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BACC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{ACC}}' title='{&#92;mathsf{ACC}}' class='latex' /> belong to:
<ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNEXP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NEXP}}' title='{&#92;mathsf{NEXP}}' class='latex' /></p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BEXP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{EXP}}' title='{&#92;mathsf{EXP}}' class='latex' /></p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /></p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /></p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNC%5E%7B1%7D%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NC^{1}}}' title='{&#92;mathsf{NC^{1}}}' class='latex' />.
</ol><li> Kurt G&ouml;del’s Second Incompleteness Theorem states that:
<ol><li>
No formal system can prove its own consistency. </p><li>
No formal system can prove its own consistency, unless it is inconsistent. </p><li>
No formal system that extends basic arithmetic can prove its own consistency. </p><li>
No formal system that extends basic arithmetic can prove its own consistency, unless it is inconsistent. </p><li>
No computably axiomatizable formal system that extends basic arithmetic can prove its own consistency, unless it is inconsistent.
</ol><li> The language of undirected simple graphs that have a unique 4-edge coloring up to isomprphisms belongs to <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />—indeed, it is just disjoint unions of star graphs. In consequence:
<ol><li>
The “Four Edge Coloring” (<img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' />) problem cannot be <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete. </p><li>
There does not exist a parsimonious polynomial-time reduction to the <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> language unless factoring is in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> cannot be polynomial-time isomorphic, unless factoring is in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> is solvable in quantum polynomial time. </p><li>
There does not exist a polynomial-time reduction from <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> to <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> that is parsimonious on the 4-edge-coloring relation, unless factoring is in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />.
</ol><li> Structural evidence for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BBPP+%3D+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP = P}}' title='{&#92;mathsf{BPP = P}}' class='latex' /> is:
<ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPrimes%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{Primes}}' title='{&#92;mathsf{Primes}}' class='latex' /> and several other classic <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BBPP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP}}' title='{&#92;mathsf{BPP}}' class='latex' /> problems are now known to be in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />. </p><li>
Polynomial identity testing can be de-randomized. </p><li>
It follows if there are languages in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BEXP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{EXP}}' title='{&#92;mathsf{EXP}}' class='latex' /> that do not have <img src='http://s0.wp.com/latex.php?latex=%7B2%5E%7Bo%28n%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^{o(n)}}' title='{2^{o(n)}}' class='latex' />-sized circuits. </p><li>
No <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BBPP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP}}' title='{&#92;mathsf{BPP}}' class='latex' />-complete problems have been found. </p><li>
A random oracle <img src='http://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A}' title='{A}' class='latex' /> makes <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BBPP%7D%5EA+%3D+%5Cmathsf%7BP%7D%5EA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP}^A = &#92;mathsf{P}^A}' title='{&#92;mathsf{BPP}^A = &#92;mathsf{P}^A}' class='latex' />.
</ol></ol><p><p><H2> Getting Help With Judgment Calls </H2></p><p><p>
We think each of our latter six “multi-choice” questions has a clear best answer, but our judgment comes from perspectives in our field. For instance, “structural” complexity came with a specific meaning apart from algorithmic and practical considerations. Even granting that meaning, arguments can be made for several answers to the last question—all except the one that is false on current knowledge. For example, random-oracle results used to be considered stronger evidence than is commonly ascribed to them now.</p><p>
We could have made catch-all “some of the above” answers as in our first set. However, this would miss our feeling of there being a pecking order even among the non-optimal answers. Again with reference to the last question, random oracles and complete languages are “structural” while the history of classifying problems is not, and between the first two, lacking a completeness level is not generally evidence of being tractable. Hence we see the possibility of better assessment by giving different partial credits to these answers.</p><p>
An even more quantitative option is to ask the test-taker to rate each statement on (say) a 0–5 scale. This would be just like asking the takers to estimate the partial credits themselves. We could then score according to distributional similarity to our own assignment, weighting closeness on the best answers the most. Of course this style of grading is most appropriate to judging search engines, based on an expert reference assessment of the importance of the various ‘hits’ returned. And it is also like simulating the creation of “Solitaire Chess” itself—more than just looking for the best move which is what we do when we actually play chess. Thus the teacher has a harder task than the player.</p><p>
The most ambitious goal is to turn the process around by making backwards inferences about the values of questions from the aggregated selection of many well-informed takers. In chess this would be like judging the value of a move based on the proportion of strong players who choose it. Nowadays this is regarded as overruled by the judgments of strong computer programs, notwithstanding the issue that players’ “book knowledge” of past games makes their choices less independent than among test takers. </p><p>
However, the ability in chess to correlate players’ judgments with computer values of moves, and map the distributions, <em>may</em> help us make inferences about “objective value” from the distributions of the test-takers. The computer values are <i>scientifically objective</i> partial credits, and “Solitaire Chess” could be scored as an app that way.  This all plays into quantifying <a href=\"http://en.wikipedia.org/wiki/The_Wisdom_of_Crowds\">the wisdom of crowds</a> along lines discussed toward the end of the Distinguished Speaker <a href=\"http://cfem.au.dk/fileadmin/www.cfem.au.dk/Downloads/CFEM-inauguration/Bounding_Rationality_by_Computation_Complexity_Lance-Fortnow.pdf\">lecture</a> given by Lance Fortnow on his visit to Buffalo last week. At least this is our motive for making tests more like strategic chess.</p><p><p><H2> Open Problems </H2></p><p><p>
What partial-credit values would you assign to our complexity questions?</p><p>
Should multiple-choice tests be more like “Solitaire Chess”? Does one obtain deeper and better assessment that way? Is the difference important enough to massive online courses? </p><p align=\"center\"> &sect; </p><p>
Here are the answers to our April Fool’s anagram <a href=\"http://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/\">quiz</a>, besides “Pearl Gates” = Peter Sagal and “Slack Laser” = Carl Kasell:</p><ul><li>
“Hydra Dye Frog” is Godfrey Hardy; the item is true. </p><li>
“Gail Kali” is Gil Kalai, and the bio is false—although the description of his eponymous <a href=\"http://en.wikipedia.org/wiki/Kalai's_3^d_conjecture\">conjecture</a> is fine. </p><li>
“Rich-Cal Fried Sugars” is Carl Friedrich Gauss, and the Ceres story is fit to go on a box of frosted cornflakes.
<li>
“One-Ale Hurdler” is Leonhard Euler, and the <a href=\"http://en.wikipedia.org/wiki/Seven_Bridges_of_Konigsberg\">K&ouml;nigsberg Bridge Problem</a> is indeed hailed as founding Graph Theory. </p><li>
“One-Cat Tree” is Terence Tao, and our extrapolation of his new <a href=\"http://terrytao.wordpress.com/2014/02/04/finite-time-blowup-for-an-averaged-three-dimensional-navier-stokes-equation/\">result</a> on Navier-Stokes is a flight of fancy. </p><li>
“Wes Gromit” is Tim Gowers, and we twisted past all the great work by him and Tao and “Gene Bern” = Ben Green on arithmetic progressions with a false statement—one falsified by the older theorem of Gustav Dirichlet that every infinite arithmetic progression without a common factor has infinitely many primes. </p><li>
“Annual Trig” is Alan Turing, true item. </p><li>
“Town Falconer” is Lance Fortnow, and we stated things backwards: he and “Semi Spiker” = Mike Sipser gave an oracle <img src='http://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A}' title='{A}' class='latex' /> for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BIP%7D%5EA+%5Cnot%5Csubseteq+%5Cmathsf%7Bco%7D%5Ctext%7B-%7D%5Cmathsf%7BNP%7D%5EA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{IP}^A &#92;not&#92;subseteq &#92;mathsf{co}&#92;text{-}&#92;mathsf{NP}^A}' title='{&#92;mathsf{IP}^A &#92;not&#92;subseteq &#92;mathsf{co}&#92;text{-}&#92;mathsf{NP}^A}' class='latex' />, while “Amish Raid” = Adi Shamir finished the oracle-exorcising result <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BIP+%3D+PSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{IP = PSPACE}}' title='{&#92;mathsf{IP = PSPACE}}' class='latex' />. </p><li>
“Joint Who Tolled” is John Littlewood, true description. </p><li>
“Glacial Warmish” is William Gasarch, but as with “Falconer” the theorem statement is backwards. </p><li>
“Glib Tales” is a well-known anagram of Bill Gates, and yes he was <a href=\"http://en.chessbase.com/post/carlsen-mates-bill-gates-in-79-seconds\">mated</a> in 9 moves. </p><li>
“Sonata Consort” is Scott Aaronson, and the opposite of our first statement is <a href=\"http://www.scottaaronson.com/blog/\">proclaimed</a> on the masthead of his blog. Indeed all six “fools” are bloggers like us…
</ul><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11505/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11505/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11505&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "http://rjlipton.wordpress.com/2014/04/10/multiple-credit-tests/" (21318 57219) new 1 nil nil ((title nil "Multiple-Credit Tests") (link nil "http://rjlipton.wordpress.com/2014/04/10/multiple-credit-tests/") (comments nil "http://rjlipton.wordpress.com/2014/04/10/multiple-credit-tests/#comments") (pubDate nil "Thu, 10 Apr 2014 18:14:27 +0000") (dc:creator nil "Pip") (category nil "All Posts") (category nil "Ideas") (category nil "anagrams") (category nil "April Fool's") (category nil "chess") (category nil "MOOCs") (category nil "multiple-choice tests") (category nil "Pandolfini") (category nil "quiz") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11505") (description nil "Can chess statistics help design multiple-choice exams? UT Dallas source Bruce Pandolfini is one of very few living people who have been played by an Oscar-winning actor. He was the real-life chess teacher of junior chess player Joshua Waitzkin, who went on to become the world champion&#8212;in T&#8217;ai Chi. Their story is told in the [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11505&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Can chess statistics help design multiple-choice exams? </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/04/pandolfini-bruce-2012-02.jpg\"><img src=\"http://rjlipton.files.wordpress.com/2014/04/pandolfini-bruce-2012-02.jpg?w=600\" alt=\"pandolfini-bruce-2012-02\"   class=\"alignright size-full wp-image-11506\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">UT Dallas <a href=\"http://www.utdallas.edu/news/2012/2/21-15941_ChessFest-To-Honor-Well-Known-Master-Coach_article-wide.html\">source</a><br /></FONT></td></table><p>
Bruce Pandolfini is one of very few living people who have been played by an Oscar-winning actor. He was the real-life chess teacher of junior chess player Joshua Waitzkin, who went on to become the world champion&#8212;<a href=\"http://en.wikipedia.org/wiki/Joshua_Waitzkin#Author\">in T&#8217;ai Chi</a>. Their story is told in the <a href=\"http://en.wikipedia.org/wiki/Searching_for_Bobby_Fischer\">movie</a> &#8220;Searching For Bobby Fischer&#8221; with Sir Ben Kingsley, which is still iconic after 20-plus years. Pandolfini is still doing what he loves as an active chess teacher in New York City. For much of this time he has also written a popular feature called &#8220;Solitaire Chess&#8221; for Chess Life magazine, which is published by the United States Chess Federation.</p><p>
Today Dick and I wish to compare styles of multiple-choice exams, with reference to &#8220;Solitaire Chess,&#8221; and have some fun as well.</p><p>
Most multiple-choice questions are designed to have a unique correct answer, with all other answers receiving 0 points or even a minus. This is like a chess problem of &#8220;find the winning move&#8221; type. Mate-in-2, mate-in-3, and endgame problems generally have unique answers&#8212;a &#8220;dual&#8221; solution is an esthetic blemish. There are several popular websites devoted to this kind of chess puzzle, which is great for honing one&#8217;s tactical ability. </p><p>
&#8220;Solitaire Chess&#8221; is different, with more emphasis on strategy. The reader takes the winning side of a notable game Bruce has prepared, and chooses his/her move before revealing the answer and the opponent&#8217;s next move. It simulates the feeling of playing a master game. </p><p>
Incidentally Bruce recently attended the wedding of another master player represented in the movie, the real-life Asa Hoffman to the former Virginia LoPresto, who also remember me from New York tournaments in the 1970&#8242;s. Among children Bruce has coached in preteen years is the world&#8217;s current 5th-ranked player, Fabiano Caruana of Brooklyn and Italy.</p><p><p><H2> Solitaire Chess </H2></p><p><p>
The difference we emphasize is that the game positions often give partial or even full credit for alternative choices. For example, here is the position at move 22 in the March 2014 Chess Life column, of a game that was played in 1934 by Fred Reinfeld, an earlier master teacher who wrote many great books until the 1960&#8242;s.  White is to play:</p><p><P><br /><a href=\"http://rjlipton.files.wordpress.com/2014/04/reinfeldposition.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/04/reinfeldposition.png?w=300&#038;h=300\" alt=\"ReinfeldPosition\" width=\"300\" height=\"300\" class=\"aligncenter size-medium wp-image-11508\" /></a></p><p><P><br />
The top score of 5 points goes to the capture move 22.axb4, but the alternatives 22.Nc6 and 22.Ne6+ are deemed almost as good, worth 4 points each, while the non-capture move 22.a4 still gets 2 points. Several other game turns have 3-point partial credits. At the end is a chart connecting your total score over all the moves to the standard chess rating scale devised by Arpad Elo.  For instance, 81&#8211;94 points is deemed the range of a 2200&#8211;2399 master player such as myself, while 36&#8211;50 is for a &#8220;good club player&#8221; with 1600&#8211;1799 rating. </p><p>
Pandolfini&#8217;s expert judgment goes into setting both the partial credits and the overall assessment scale. Although chess positions often have 30&#8211;50 legal moves or even more, there are typically at most 3&#8211;5 moves worth considering, so this is like a standard multiple-choice test in that way. The partial credits, however, are more typical of <em>ranking</em> applications such as judging the value of search-engine hits, where there are 10, 20, 30, or hundreds or thousands of choices to consider. Our topic is about having the best of both kinds of application, and how to do the assessment scientifically.</p><p><p><H2> But Let&#8217;s Have Fun </H2></p><p><p>
Well we guess you didn&#8217;t come to a blog to take an exam, so we&#8217;ll try to make at least the first part fun, before we introduce more &#8220;strategic&#8221; questions with partial credits. You are on your honor not to Google the answers&#8212;we can tell of course; we won&#8217;t tell you how we know but our <a href=\"http://en.wikipedia.org/wiki/Heartbleed_bug\">heartbleeds</a> for you.</p><ol><li> PCP stands for which of the following?
<ol><li>
Post Correspondence Problem </p><li>
Provably Checkable Proofs </p><li> A recreational drug
<li> Probabilistically Checkable Proofs
<li> All the above
<li> Some of the above
<li> None of the above.
</ol><li> The first Turing Award Winner was&#8212;?
<ol><li> Alan Turing, posthumously for Turing Machines
<li> John Backus for Fortran
<li> Alan Perlis for Algol
<li> None of the above.
</ol><li> By the terms of the Clay Millennium Prize, it would be awarded for&#8212;?
<ol><li> A proof that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' />.
<li> A proof that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.
<li> A proof that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' /> is independent of set theory.
<li> All the above
<li> Some of the above
<li> None of the above.
</ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> stands for:
<ol><li> Not Polynomial (time).
<li> Nick Pippenger.
<li> Nondeterministic Polynomial (time).
<li> Nick&#8217;s Problems.
<li><img src='http://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' /> times <img src='http://s0.wp.com/latex.php?latex=%7BP%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{P}' title='{P}' class='latex' />.
</ol><li> Breaking RSA is equivalent to factoring integers:
<ol><li> Yes
<li> No
<li> Yes on Riemann Hypothesis
<li> No on Riemann Hypothesis
<li> Open question.
</ol><li> If <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BBQP%3DBPP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BQP=BPP}}' title='{&#92;mathsf{BQP=BPP}}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NC}}' title='{&#92;mathsf{P=NC}}' class='latex' /> then it follows that which is true?
<ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' />.
<li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNL%3DP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NL=P}}' title='{&#92;mathsf{NL=P}}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNL%3DNC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NL=NC}}' title='{&#92;mathsf{NL=NC}}' class='latex' />.
<li> All the above
<li> Some of the above
<li> None of the above.
</ol></ol><p><p><H2> Multi-Choice </H2></p><p><p>
OK, more serious now. Start your engines. Actually in chess, &#8220;start your engines&#8221; refers to computer chess programs, and would mean either you are cheating, or you are playing in the InfinityChess Freestyle <a href=\"http://www.infinitychess.com/Web/Page/Public/Article/DefaultArticle.aspx?id=141\">tournament</a>, which finishes today.</p><ol><p><li>
The main significance of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> being shown <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete in 1970-71 is: </p><ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete sets weren&#8217;t known before. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> is a natural problem, and this led to many other natural problems in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> being shown to be complete. </p><li>
Logic is a universal language. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> does not have a polynomial-time algorithm. </p><li>
Formulas that are satisfiable can be verified after guessing a good assignment in polynomial time.
</ol><li> We know that nondeterministic linear bounded automata (NLBAs) accept a different class of languages from <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> because:
<ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> allows using more than linear space. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D+%5Cneq+%5Cmathsf%7BNTIME%7D%5BO%28n%29%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP} &#92;neq &#92;mathsf{NTIME}[O(n)]}' title='{&#92;mathsf{NP} &#92;neq &#92;mathsf{NTIME}[O(n)]}' class='latex' /> by the nondeterministic time hierarchy theorem. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> is closed downward under polynomial-time many-one reductions but the class of NLBA languages is not. </p><li>
NLBAs can accept <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' />-complete languages and <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE+%5Csupset+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE &#92;supset NP}}' title='{&#92;mathsf{PSPACE &#92;supset NP}}' class='latex' />. </p><li>
NLBA languages are closed under complement, while <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> isn&#8217;t.
</ol><li> The easiest languages currently known not to be in nonuniform <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BACC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{ACC}}' title='{&#92;mathsf{ACC}}' class='latex' /> belong to:
<ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNEXP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NEXP}}' title='{&#92;mathsf{NEXP}}' class='latex' /></p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BEXP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{EXP}}' title='{&#92;mathsf{EXP}}' class='latex' /></p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /></p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /></p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNC%5E%7B1%7D%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NC^{1}}}' title='{&#92;mathsf{NC^{1}}}' class='latex' />.
</ol><li> Kurt G&ouml;del&#8217;s Second Incompleteness Theorem states that:
<ol><li>
No formal system can prove its own consistency. </p><li>
No formal system can prove its own consistency, unless it is inconsistent. </p><li>
No formal system that extends basic arithmetic can prove its own consistency. </p><li>
No formal system that extends basic arithmetic can prove its own consistency, unless it is inconsistent. </p><li>
No computably axiomatizable formal system that extends basic arithmetic can prove its own consistency, unless it is inconsistent.
</ol><li> The language of undirected simple graphs that have a unique 4-edge coloring up to isomprphisms belongs to <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />&#8212;indeed, it is just disjoint unions of star graphs. In consequence:
<ol><li>
The &#8220;Four Edge Coloring&#8221; (<img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' />) problem cannot be <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete. </p><li>
There does not exist a parsimonious polynomial-time reduction to the <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> language unless factoring is in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> cannot be polynomial-time isomorphic, unless factoring is in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> is solvable in quantum polynomial time. </p><li>
There does not exist a polynomial-time reduction from <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> to <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> that is parsimonious on the 4-edge-coloring relation, unless factoring is in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />.
</ol><li> Structural evidence for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BBPP+%3D+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP = P}}' title='{&#92;mathsf{BPP = P}}' class='latex' /> is:
<ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPrimes%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{Primes}}' title='{&#92;mathsf{Primes}}' class='latex' /> and several other classic <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BBPP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP}}' title='{&#92;mathsf{BPP}}' class='latex' /> problems are now known to be in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />. </p><li>
Polynomial identity testing can be de-randomized. </p><li>
It follows if there are languages in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BEXP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{EXP}}' title='{&#92;mathsf{EXP}}' class='latex' /> that do not have <img src='http://s0.wp.com/latex.php?latex=%7B2%5E%7Bo%28n%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^{o(n)}}' title='{2^{o(n)}}' class='latex' />-sized circuits. </p><li>
No <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BBPP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP}}' title='{&#92;mathsf{BPP}}' class='latex' />-complete problems have been found. </p><li>
A random oracle <img src='http://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A}' title='{A}' class='latex' /> makes <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BBPP%7D%5EA+%3D+%5Cmathsf%7BP%7D%5EA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP}^A = &#92;mathsf{P}^A}' title='{&#92;mathsf{BPP}^A = &#92;mathsf{P}^A}' class='latex' />.
</ol></ol><p><p><H2> Getting Help With Judgment Calls </H2></p><p><p>
We think each of our latter six &#8220;multi-choice&#8221; questions has a clear best answer, but our judgment comes from perspectives in our field. For instance, &#8220;structural&#8221; complexity came with a specific meaning apart from algorithmic and practical considerations. Even granting that meaning, arguments can be made for several answers to the last question&#8212;all except the one that is false on current knowledge. For example, random-oracle results used to be considered stronger evidence than is commonly ascribed to them now.</p><p>
We could have made catch-all &#8220;some of the above&#8221; answers as in our first set. However, this would miss our feeling of there being a pecking order even among the non-optimal answers. Again with reference to the last question, random oracles and complete languages are &#8220;structural&#8221; while the history of classifying problems is not, and between the first two, lacking a completeness level is not generally evidence of being tractable. Hence we see the possibility of better assessment by giving different partial credits to these answers.</p><p>
An even more quantitative option is to ask the test-taker to rate each statement on (say) a 0&#8211;5 scale. This would be just like asking the takers to estimate the partial credits themselves. We could then score according to distributional similarity to our own assignment, weighting closeness on the best answers the most. Of course this style of grading is most appropriate to judging search engines, based on an expert reference assessment of the importance of the various &#8216;hits&#8217; returned. And it is also like simulating the creation of &#8220;Solitaire Chess&#8221; itself&#8212;more than just looking for the best move which is what we do when we actually play chess. Thus the teacher has a harder task than the player.</p><p>
The most ambitious goal is to turn the process around by making backwards inferences about the values of questions from the aggregated selection of many well-informed takers. In chess this would be like judging the value of a move based on the proportion of strong players who choose it. Nowadays this is regarded as overruled by the judgments of strong computer programs, notwithstanding the issue that players&#8217; &#8220;book knowledge&#8221; of past games makes their choices less independent than among test takers. </p><p>
However, the ability in chess to correlate players&#8217; judgments with computer values of moves, and map the distributions, <em>may</em> help us make inferences about &#8220;objective value&#8221; from the distributions of the test-takers. The computer values are <i>scientifically objective</i> partial credits, and &#8220;Solitaire Chess&#8221; could be scored as an app that way.  This all plays into quantifying <a href=\"http://en.wikipedia.org/wiki/The_Wisdom_of_Crowds\">the wisdom of crowds</a> along lines discussed toward the end of the Distinguished Speaker <a href=\"http://cfem.au.dk/fileadmin/www.cfem.au.dk/Downloads/CFEM-inauguration/Bounding_Rationality_by_Computation_Complexity_Lance-Fortnow.pdf\">lecture</a> given by Lance Fortnow on his visit to Buffalo last week. At least this is our motive for making tests more like strategic chess.</p><p><p><H2> Open Problems </H2></p><p><p>
What partial-credit values would you assign to our complexity questions?</p><p>
Should multiple-choice tests be more like &#8220;Solitaire Chess&#8221;? Does one obtain deeper and better assessment that way? Is the difference important enough to massive online courses? </p><p align=\"center\"> &sect; </p><p>
Here are the answers to our April Fool&#8217;s anagram <a href=\"http://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/\">quiz</a>, besides &#8220;Pearl Gates&#8221; = Peter Sagal and &#8220;Slack Laser&#8221; = Carl Kasell:</p><ul><li>
&#8220;Hydra Dye Frog&#8221; is Godfrey Hardy; the item is true. </p><li>
&#8220;Gail Kali&#8221; is Gil Kalai, and the bio is false&#8212;although the description of his eponymous <a href=\"http://en.wikipedia.org/wiki/Kalai's_3^d_conjecture\">conjecture</a> is fine. </p><li>
&#8220;Rich-Cal Fried Sugars&#8221; is Carl Friedrich Gauss, and the Ceres story is fit to go on a box of frosted cornflakes.
<li>
&#8220;One-Ale Hurdler&#8221; is Leonhard Euler, and the <a href=\"http://en.wikipedia.org/wiki/Seven_Bridges_of_Konigsberg\">K&ouml;nigsberg Bridge Problem</a> is indeed hailed as founding Graph Theory. </p><li>
&#8220;One-Cat Tree&#8221; is Terence Tao, and our extrapolation of his new <a href=\"http://terrytao.wordpress.com/2014/02/04/finite-time-blowup-for-an-averaged-three-dimensional-navier-stokes-equation/\">result</a> on Navier-Stokes is a flight of fancy. </p><li>
&#8220;Wes Gromit&#8221; is Tim Gowers, and we twisted past all the great work by him and Tao and &#8220;Gene Bern&#8221; = Ben Green on arithmetic progressions with a false statement&#8212;one falsified by the older theorem of Gustav Dirichlet that every infinite arithmetic progression without a common factor has infinitely many primes. </p><li>
&#8220;Annual Trig&#8221; is Alan Turing, true item. </p><li>
&#8220;Town Falconer&#8221; is Lance Fortnow, and we stated things backwards: he and &#8220;Semi Spiker&#8221; = Mike Sipser gave an oracle <img src='http://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A}' title='{A}' class='latex' /> for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BIP%7D%5EA+%5Cnot%5Csubseteq+%5Cmathsf%7Bco%7D%5Ctext%7B-%7D%5Cmathsf%7BNP%7D%5EA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{IP}^A &#92;not&#92;subseteq &#92;mathsf{co}&#92;text{-}&#92;mathsf{NP}^A}' title='{&#92;mathsf{IP}^A &#92;not&#92;subseteq &#92;mathsf{co}&#92;text{-}&#92;mathsf{NP}^A}' class='latex' />, while &#8220;Amish Raid&#8221; = Adi Shamir finished the oracle-exorcising result <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BIP+%3D+PSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{IP = PSPACE}}' title='{&#92;mathsf{IP = PSPACE}}' class='latex' />. </p><li>
&#8220;Joint Who Tolled&#8221; is John Littlewood, true description. </p><li>
&#8220;Glacial Warmish&#8221; is William Gasarch, but as with &#8220;Falconer&#8221; the theorem statement is backwards. </p><li>
&#8220;Glib Tales&#8221; is a well-known anagram of Bill Gates, and yes he was <a href=\"http://en.chessbase.com/post/carlsen-mates-bill-gates-in-79-seconds\">mated</a> in 9 moves. </p><li>
&#8220;Sonata Consort&#8221; is Scott Aaronson, and the opposite of our first statement is <a href=\"http://www.scottaaronson.com/blog/\">proclaimed</a> on the masthead of his blog. Indeed all six &#8220;fools&#8221; are bloggers like us&#8230;
</ul><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11505/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11505/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11505&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/04/10/multiple-credit-tests/feed/") (slash:comments nil "0") (media:content ((url . "http://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/04/pandolfini-bruce-2012-02.jpg") (medium . "image")) (media:title ((type . "html")) "pandolfini-bruce-2012-02")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/04/reinfeldposition.png?w=300") (medium . "image")) (media:title ((type . "html")) "ReinfeldPosition")))) ("Counting Is Sometimes Easy" "<p><font color=\"”#0066cc?\"><br /><em> Cases where we can count objects in polynomial time </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/04/sipserdean.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/04/sipserdean.png?w=180&h=216\" alt=\"SipserDean\" width=\"180\" height=\"216\" class=\"alignright wp-image-11495\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">New Interim Dean <a href=\"http://newsoffice.mit.edu/2013/michael-sipser-named-interim-dean-of-the-school-of-science-1206\">source</a>—our congrats<br /></FONT></td></table><p>
Mike Sipser is one of the top theorists, especially in complexity theory, and has been Head of the Mathematics Department at MIT since 2004. He is long known for some very clever proofs and his famous <a href=\"http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.44.9296\">survey paper</a> on the status of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' />. He is recently known for co-authoring the <a href=\"http://arxiv.org/pdf/quant-ph/0001106v1.pdf\">paper</a> that introduced <a href=\"http://en.wikipedia.org/wiki/Adiabatic_quantum_computation\">adiabatic quantum computing</a>, which is the kind being given physical realization <a href=\"http://bits.blogs.nytimes.com/2014/03/24/quantum-computing-research-may-back-controversial-company/\">by</a> the company D-Wave Systems. But he is perhaps best known nowadays for his <a href=\"http://www.amazon.com/Introduction-Theory-Computation-Michael-Sipser/dp/113318779X\">textbook</a><i>Introduction to the Theory of Computation</i>. I have used the earlier version many times for teaching our undergraduate class; I have not used the third edition, mainly because I teach other things these days.</p><p>
Today Ken and I wish to talk about a topic that is covered in his book, finite state automata, in relation to counting.<br /><span id=\"more-11490\"></span></p><p>
Yes, lowly finite state automata (FSA). In my opinion FSA are one of the great inventions of theory. They led Michael Rabin and Dana Scott to discover nondeterminism, yielding a Turing Award along the way. They led algorithm designers like Don Knuth to discover, with Jim Morris and Vaughan Pratt, the first linear-time pattern matching algorithm. And much more.</p><p>
Mike’s book was discussed before <a href=\"http://rjlipton.wordpress.com/2009/03/07/finite-state-automata-binary-decision-diagrams-and-presburger-arithmetic/\">here</a>, where I talked about his use of FSA to prove that the first order theory of addition is decidable. This is one of my favorite applications of FSA, which I learned from Ann Yasuhara directly—it is also included in her early <a href=\"http://www.amazon.com/Recursive-Function-Computer-Science-Mathematics/dp/0127689508\">book</a>, <i>Recursive Function Theory and Logic</i>.</p><p><p><H2> A Look at the Book </H2></p><p><p>
Mike’s book proves some interesting theorems that are ancient—okay, many decades old. This yields what in retrospect look like omissions, which are bound up with the history of the theorems. For example, consider the following classic one: </p><blockquote><p><b>Theorem 1</b><em> A language is context-free if and only if some nondeterministic pushdown automaton (PDA) accepts it. </em></p></blockquote><p>
This is proved in detail in his book—see page 117 in the new edition, Theorem 2.20. But the proof establishes more, much more, that is not stated. I have used both of these consequences in my own work over the years:</p><ul><li>
Given a context-free grammar we can construct the PDA in polynomial time, and conversely given the PDA we can construct the grammar. </p><li>
The sizes of the grammar and the description of the PDA are related by a polynomial bound.
</ul><p>
Note that the best construction, I believe, goes from a PDA with <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> states to a grammar with <img src='http://s0.wp.com/latex.php?latex=%7BO%28S%5E%7B3%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(S^{3})}' title='{O(S^{3})}' class='latex' /> rules. If there is a better one it would have some interesting consequences. </p><p>
Let me say that this omission is not isolated to Mike’s book, but others most always leave out these interesting refinements. I believe that the reason is simple: the above theorem was proved before polynomial time was defined, and the textbook is sequenced that way. Hence the omission. Perhaps they can be added to a fourth edition.</p><p>
Ken adds—also writing much of the rest of this post: I now like the sequence of skipping grammars and PDA’s and going straight from regular languages and FSA to Turing computability and complexity. After this ‘kernel’ material the instructor has an option of covering grammars, and then the polynomial-overhead concepts are in place. Or the instructor can do more with complexity or logic or some other core topic.</p><p><p><H2> Counting </H2></p><p><p>
Let’s get back to FSA and counting.</p><blockquote><p><b>Theorem 2</b><em> Let <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> be a deterministic FSA with <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> states and input alphabet <img src='http://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;Sigma}' title='{&#92;Sigma}' class='latex' />. Then we can determine the cardinality <img src='http://s0.wp.com/latex.php?latex=%7BC_m%28n%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{C_m(n)}' title='{C_m(n)}' class='latex' /> of the set <img src='http://s0.wp.com/latex.php?latex=%7BL%28M%29%5Ccap+%5CSigma%5E%7Bn%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{L(M)&#92;cap &#92;Sigma^{n}}' title='{L(M)&#92;cap &#92;Sigma^{n}}' class='latex' /> in time polynomial in <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />. </em></p></blockquote><p><p>
Put another way, we can count in polynomial time the number of strings of length <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> that a FSA accepts. If the FSA is fixed, then the time is polynomial only in <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />. Actually, in this case the time is essentially bi-linear in <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />—it depends on the exact computational model. </p><p>
The algorithm to prove this is often described as “dynamic programming,” but often that just means maintaining a well-chosen data structure. Here we allocate a slot for each state <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> of the FSA, and maintain for each <img src='http://s0.wp.com/latex.php?latex=%7Bk+%5Cleq+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k &#92;leq n}' title='{k &#92;leq n}' class='latex' /> the number <img src='http://s0.wp.com/latex.php?latex=%7BN_%7Bk%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{k,q}}' title='{N_{k,q}}' class='latex' /> of strings of length exactly <img src='http://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k}' title='{k}' class='latex' /> that reach <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> from the start state <img src='http://s0.wp.com/latex.php?latex=%7Bs%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s}' title='{s}' class='latex' />. Initially <img src='http://s0.wp.com/latex.php?latex=%7Bk+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k = 0}' title='{k = 0}' class='latex' />, <img src='http://s0.wp.com/latex.php?latex=%7BN_%7B0%2Cs%7D+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{0,s} = 1}' title='{N_{0,s} = 1}' class='latex' /> for the empty string, and all other <img src='http://s0.wp.com/latex.php?latex=%7BN_%7B0%2Cq%7D+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{0,q} = 0}' title='{N_{0,q} = 0}' class='latex' />. Now to update it to <img src='http://s0.wp.com/latex.php?latex=%7BN_%7Bk%2B1%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{k+1,q}}' title='{N_{k+1,q}}' class='latex' />, find all states <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and characters <img src='http://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{c}' title='{c}' class='latex' /> such that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cdelta%28p%2Cc%29+%3D+q%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;delta(p,c) = q}' title='{&#92;delta(p,c) = q}' class='latex' />, where <img src='http://s0.wp.com/latex.php?latex=%7B%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;delta}' title='{&#92;delta}' class='latex' /> is the transition function of <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' />, and sum up <img src='http://s0.wp.com/latex.php?latex=%7BN_%7Bk%2Cp%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{k,p}}' title='{N_{k,p}}' class='latex' />. That is, </p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++N_%7Bk%2B1%2Cq%7D+%3D+%5Csum_%7Bp%2Cc%3A+%5Cdelta%28p%2Cc%29+%3D+q%7D+N_%7Bk%2Cp%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  N_{k+1,q} = &#92;sum_{p,c: &#92;delta(p,c) = q} N_{k,p}. ' title='&#92;displaystyle  N_{k+1,q} = &#92;sum_{p,c: &#92;delta(p,c) = q} N_{k,p}. ' class='latex' /></p><p>
Finally <img src='http://s0.wp.com/latex.php?latex=%7BC_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n)}' title='{C_M(n)}' class='latex' /> equals the sum of <img src='http://s0.wp.com/latex.php?latex=%7BN_%7Bn%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{n,q}}' title='{N_{n,q}}' class='latex' /> over all accepting states <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' />. Assuming random access to the data slots, and unit time for arithmetic on small numbers, this runs in time <img src='http://s0.wp.com/latex.php?latex=%7BO%28Sn%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(Sn)}' title='{O(Sn)}' class='latex' />.</p><p>
Sounds simple, but as often happens in complexity, delicacy and difficulty lurk not too far away.</p><p><p><H2> The NFA Case and an Application </H2></p><p><p>
First, does the algorithm work when <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> is nondeterministic? It certainly runs, and counts <em>something</em>, but not the number of accepted strings. So can we modify it to do so? </p><p>
The answer is no—or maybe better to say “ostensibly not”: Given a Boolean formula that is a conjunction of clauses <img src='http://s0.wp.com/latex.php?latex=%7BC_1%2C%5Cdots%2CC_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_1,&#92;dots,C_m}' title='{C_1,&#92;dots,C_m}' class='latex' />, design an NFA <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> that begins with a nondeterministic choice of one of <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> states <img src='http://s0.wp.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' />. From every <img src='http://s0.wp.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' />, <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> starts reading its input <img src='http://s0.wp.com/latex.php?latex=%7Bx+%5Cin+%5C%7B0%2C1%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x &#92;in &#92;{0,1&#92;}^n}' title='{x &#92;in &#92;{0,1&#92;}^n}' class='latex' /> deterministically. The part of <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' />‘s code from <img src='http://s0.wp.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' /> is written so that if <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> is an assignment that makes every literal in <img src='http://s0.wp.com/latex.php?latex=%7BC_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_j}' title='{C_j}' class='latex' /> false—note that the literals can be presented in index order—then <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> accepts <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. Thus the formula is <em>un</em>satisfiable if and only if <img src='http://s0.wp.com/latex.php?latex=%7BC_M%28n%29+%3D+2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n) = 2^n}' title='{C_M(n) = 2^n}' class='latex' />. So if we had a <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28Sn%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(Sn)}' title='{&#92;mathsf{poly}(Sn)}' class='latex' /> algorithm to compute <img src='http://s0.wp.com/latex.php?latex=%7BC_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n)}' title='{C_M(n)}' class='latex' />, we’d have <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP+%3D+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP = P}}' title='{&#92;mathsf{NP = P}}' class='latex' />.</p><p>
Moreover, <img src='http://s0.wp.com/latex.php?latex=%7B2%5En+-+C_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^n - C_M(n)}' title='{2^n - C_M(n)}' class='latex' /> counts the satisfying assignments. Hence relaxing <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> from DFA to NFA makes our little problem <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#P}}' title='{&#92;mathsf{&#92;#P}}' class='latex' />-complete. Now it’s important that <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> is part of the input. If <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> is fixed and we only want to compute <img src='http://s0.wp.com/latex.php?latex=%7BC_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n)}' title='{C_M(n)}' class='latex' /> given <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />, then of course we can convert <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> to an equivalent DFA which is likewise fixed, and run our algorithm. Hence one must be delicate with what constitutes the input. </p><p>
For an example, call a string <b>special</b> if it contains <img src='http://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> copies of the pattern <img src='http://s0.wp.com/latex.php?latex=%7Bu+%3D+010111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{u = 010111}' title='{u = 010111}' class='latex' /> for some <img src='http://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> that is a prime number. We can count the number of special strings of length <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> in time polynomial in <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />. To do so, we take <img src='http://s0.wp.com/latex.php?latex=%7Bm+%3D+%5Clfloor+n%2F6+%5Crfloor%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m = &#92;lfloor n/6 &#92;rfloor}' title='{m = &#92;lfloor n/6 &#92;rfloor}' class='latex' /> and program a choice over all <img src='http://s0.wp.com/latex.php?latex=%7Bj+%5Cleq+m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j &#92;leq m}' title='{j &#92;leq m}' class='latex' /> as before, this time keeping only the <img src='http://s0.wp.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' /> for which <img src='http://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> is prime. From each <img src='http://s0.wp.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' /> we program a DFA <img src='http://s0.wp.com/latex.php?latex=%7BM_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M_j}' title='{M_j}' class='latex' /> that accepts a string <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> if and only if it contains exactly <img src='http://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> copies of <img src='http://s0.wp.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{u}' title='{u}' class='latex' />. This resembles the <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> case, but is different because there is no overlap in the strings accepted by the respective <img src='http://s0.wp.com/latex.php?latex=%7BM_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M_j}' title='{M_j}' class='latex' />. So we just count the numbers of length-<img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> strings accepted by each and add them up. </p><p>
This is not a hugely important application. We selected it to show that there are counting problems that might be tricky to solve without the FSA method. This and other examples may be useful.</p><p><p><H2> What Else Can Be Counted? </H2></p><p><p>
Note that even though the decision problem <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B2SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{2SAT}}' title='{&#92;mathsf{2SAT}}' class='latex' /> is in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />, the counting problem <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%232SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#2SAT}}' title='{&#92;mathsf{&#92;#2SAT}}' class='latex' /> is still <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#P}}' title='{&#92;mathsf{&#92;#P}}' class='latex' />-complete. For an aside, <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B2SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{2SAT}}' title='{&#92;mathsf{2SAT}}' class='latex' /> is a major example in Mike’s quantum paper, but here we raise the question, what else can be counted? </p><p>
For instance, counting the number <img src='http://s0.wp.com/latex.php?latex=%7BN_m%28f%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f)}' title='{N_m(f)}' class='latex' /> of solutions to an <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-variable polynomial <img src='http://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{f}' title='{f}' class='latex' /> over <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathbb%7BZ%7D_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathbb{Z}_m}' title='{&#92;mathbb{Z}_m}' class='latex' /> is <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#P}}' title='{&#92;mathsf{&#92;#P}}' class='latex' />-complete. It becomes <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7BO%281%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{O(1)}}' title='{n^{O(1)}}' class='latex' />-time, however, when <img src='http://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{f}' title='{f}' class='latex' /> has degree at most <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. This is when <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> is fixed. What if <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> is variable? We can also ask about computing <img src='http://s0.wp.com/latex.php?latex=%7BN_m%28f+-+j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f - j)}' title='{N_m(f - j)}' class='latex' /> for all <img src='http://s0.wp.com/latex.php?latex=%7Bj+%5Cin+%5Cmathbb%7BZ%7D_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j &#92;in &#92;mathbb{Z}_m}' title='{j &#92;in &#92;mathbb{Z}_m}' class='latex' />, for the particular purpose of computing the <em>exponential sum</em></p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++Z_f+%3D+%5Csum_%7Bj%3D0%7D%5E%7Bm-1%7D+N_m%28f+-+j%29+%5Comega%5Ej+%3D+%5Csum_%7Bx+%5Cin+%5Cmathbb%7BZ%7D_m%5En%7D+%5Comega%5E%7Bf%28x%29%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  Z_f = &#92;sum_{j=0}^{m-1} N_m(f - j) &#92;omega^j = &#92;sum_{x &#92;in &#92;mathbb{Z}_m^n} &#92;omega^{f(x)}, ' title='&#92;displaystyle  Z_f = &#92;sum_{j=0}^{m-1} N_m(f - j) &#92;omega^j = &#92;sum_{x &#92;in &#92;mathbb{Z}_m^n} &#92;omega^{f(x)}, ' class='latex' /></p><p>
where <img src='http://s0.wp.com/latex.php?latex=%7B%5Comega+%3D+%5Cexp%28%5Cfrac%7B2%5Cpi+i%7D%7Bm%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;omega = &#92;exp(&#92;frac{2&#92;pi i}{m})}' title='{&#92;omega = &#92;exp(&#92;frac{2&#92;pi i}{m})}' class='latex' />.</p><p>
Dick co-authored a <a href=\"http://arxiv.org/abs/1005.2632\">paper</a> recently with Jin-Yi Cai, Xi Chen, and Pinyan Lu, showing that when <img src='http://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{f}' title='{f}' class='latex' /> has degree at most <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />, <img src='http://s0.wp.com/latex.php?latex=%7BZ_f%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Z_f}' title='{Z_f}' class='latex' /> is computable in time polynomial in <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B%5Clog+m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;log m}' title='{&#92;log m}' class='latex' />. In particular this means that for <img src='http://s0.wp.com/latex.php?latex=%7Bm+%3D+2%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m = 2^r}' title='{m = 2^r}' class='latex' />, when we can represent the members of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathbb%7BZ%7D_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathbb{Z}_m}' title='{&#92;mathbb{Z}_m}' class='latex' /> by strings in <img src='http://s0.wp.com/latex.php?latex=%7B%5C%7B0%2C1%5C%7D%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{0,1&#92;}^r}' title='{&#92;{0,1&#92;}^r}' class='latex' />, the time to compute <img src='http://s0.wp.com/latex.php?latex=%7BZ_f%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Z_f}' title='{Z_f}' class='latex' /> is <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nr)}' title='{&#92;mathsf{poly}(nr)}' class='latex' />. </p><p>
A little thought shows that this suffices to compute any individual number <img src='http://s0.wp.com/latex.php?latex=%7BN_m%28f+-+j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f - j)}' title='{N_m(f - j)}' class='latex' /> in time <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nm%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nm)}' title='{&#92;mathsf{poly}(nm)}' class='latex' />, indeed by computing all of them. But if we just want one, and <img src='http://s0.wp.com/latex.php?latex=%7Bm+%3D+2%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m = 2^r}' title='{m = 2^r}' class='latex' />, can we do it in time <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nr)}' title='{&#92;mathsf{poly}(nr)}' class='latex' />? This is not obvious to me (Ken), and at least for now leaves the funny situation where we can compute in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nr)}' title='{&#92;mathsf{poly}(nr)}' class='latex' /> time the historically important <img src='http://s0.wp.com/latex.php?latex=%7BZ_f%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Z_f}' title='{Z_f}' class='latex' /> function which involves all the <img src='http://s0.wp.com/latex.php?latex=%7BN_m%28f+-+j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f - j)}' title='{N_m(f - j)}' class='latex' /> values, but don’t see a way to compute any one of them in the same time.</p><p><p><H2> Open Problems </H2></p><p><p>
Whose originally proved efficient counting for deterministic FSA? We seem to not be able to track that down. Are there some cool applications? </p><p>
What is the answer to the last problem? Should <em>counting</em> receive more emphasis in texts at the level of Mike’s?</p><p>
I (Ken) add a story: I first met Mike when we shared a compartment of the train between Hamburg, Germany and Aarhus, Denmark, on the way to ICALP 1982.  I had just moved from algebraic combinatorics into complexity during my first year at Oxford, and naturally asked him what were the propsects for proving <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.  He replied “It will be proved … yes we will prove it,” and backed up his confidence by naming <a href=\"http://link.springer.com/article/10.1007%2FBF01744431\">some</a><a href=\"http://dl.acm.org/citation.cfm?id=808733\">results</a> and giving some ideas along lines that would later be called the “Sipser programme” of approach via circuit lower bounds.  (Did we mention that he also wrote with Ravi Boppana a bellwether <a href=\"https://www.cs.umd.edu/~gasarch/BLOGPAPERS/boppana_sipser.ps\">survey</a> on circuit complexity?)  I guess there wasn’t a time limit on his assertion…</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11490/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11490/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11490&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "http://rjlipton.wordpress.com/2014/04/05/counting-is-sometimes-easy/" (21311 37187) new 2 nil nil ((title nil "Counting Is Sometimes Easy") (link nil "http://rjlipton.wordpress.com/2014/04/05/counting-is-sometimes-easy/") (comments nil "http://rjlipton.wordpress.com/2014/04/05/counting-is-sometimes-easy/#comments") (pubDate nil "Sat, 05 Apr 2014 05:14:43 +0000") (dc:creator nil "Pip") (category nil "History") (category nil "Ideas") (category nil "Oldies") (category nil "P=NP") (category nil "People") (category nil "complexity") (category nil "counting") (category nil "finite automata") (category nil "Sipser") (category nil "textbooks") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11490") (description nil "Cases where we can count objects in polynomial time New Interim Dean source&#8212;our congrats Mike Sipser is one of the top theorists, especially in complexity theory, and has been Head of the Mathematics Department at MIT since 2004. He is long known for some very clever proofs and his famous survey paper on the status [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11490&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Cases where we can count objects in polynomial time </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/04/sipserdean.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/04/sipserdean.png?w=180&#038;h=216\" alt=\"SipserDean\" width=\"180\" height=\"216\" class=\"alignright wp-image-11495\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">New Interim Dean <a href=\"http://newsoffice.mit.edu/2013/michael-sipser-named-interim-dean-of-the-school-of-science-1206\">source</a>&#8212;our congrats<br /></FONT></td></table><p>
Mike Sipser is one of the top theorists, especially in complexity theory, and has been Head of the Mathematics Department at MIT since 2004. He is long known for some very clever proofs and his famous <a href=\"http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.44.9296\">survey paper</a> on the status of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' />. He is recently known for co-authoring the <a href=\"http://arxiv.org/pdf/quant-ph/0001106v1.pdf\">paper</a> that introduced <a href=\"http://en.wikipedia.org/wiki/Adiabatic_quantum_computation\">adiabatic quantum computing</a>, which is the kind being given physical realization <a href=\"http://bits.blogs.nytimes.com/2014/03/24/quantum-computing-research-may-back-controversial-company/\">by</a> the company D-Wave Systems. But he is perhaps best known nowadays for his <a href=\"http://www.amazon.com/Introduction-Theory-Computation-Michael-Sipser/dp/113318779X\">textbook</a><i>Introduction to the Theory of Computation</i>. I have used the earlier version many times for teaching our undergraduate class; I have not used the third edition, mainly because I teach other things these days.</p><p>
Today Ken and I wish to talk about a topic that is covered in his book, finite state automata, in relation to counting.<br /><span id=\"more-11490\"></span></p><p>
Yes, lowly finite state automata (FSA). In my opinion FSA are one of the great inventions of theory. They led Michael Rabin and Dana Scott to discover nondeterminism, yielding a Turing Award along the way. They led algorithm designers like Don Knuth to discover, with Jim Morris and Vaughan Pratt, the first linear-time pattern matching algorithm. And much more.</p><p>
Mike&#8217;s book was discussed before <a href=\"http://rjlipton.wordpress.com/2009/03/07/finite-state-automata-binary-decision-diagrams-and-presburger-arithmetic/\">here</a>, where I talked about his use of FSA to prove that the first order theory of addition is decidable. This is one of my favorite applications of FSA, which I learned from Ann Yasuhara directly&#8212;it is also included in her early <a href=\"http://www.amazon.com/Recursive-Function-Computer-Science-Mathematics/dp/0127689508\">book</a>, <i>Recursive Function Theory and Logic</i>.</p><p><p><H2> A Look at the Book </H2></p><p><p>
Mike&#8217;s book proves some interesting theorems that are ancient&#8212;okay, many decades old. This yields what in retrospect look like omissions, which are bound up with the history of the theorems. For example, consider the following classic one: </p><blockquote><p><b>Theorem 1</b><em> A language is context-free if and only if some nondeterministic pushdown automaton (PDA) accepts it. </em></p></blockquote><p>
This is proved in detail in his book&#8212;see page 117 in the new edition, Theorem 2.20. But the proof establishes more, much more, that is not stated. I have used both of these consequences in my own work over the years:</p><ul><li>
Given a context-free grammar we can construct the PDA in polynomial time, and conversely given the PDA we can construct the grammar. </p><li>
The sizes of the grammar and the description of the PDA are related by a polynomial bound.
</ul><p>
Note that the best construction, I believe, goes from a PDA with <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> states to a grammar with <img src='http://s0.wp.com/latex.php?latex=%7BO%28S%5E%7B3%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(S^{3})}' title='{O(S^{3})}' class='latex' /> rules. If there is a better one it would have some interesting consequences. </p><p>
Let me say that this omission is not isolated to Mike&#8217;s book, but others most always leave out these interesting refinements. I believe that the reason is simple: the above theorem was proved before polynomial time was defined, and the textbook is sequenced that way. Hence the omission. Perhaps they can be added to a fourth edition.</p><p>
Ken adds&#8212;also writing much of the rest of this post: I now like the sequence of skipping grammars and PDA&#8217;s and going straight from regular languages and FSA to Turing computability and complexity. After this &#8216;kernel&#8217; material the instructor has an option of covering grammars, and then the polynomial-overhead concepts are in place. Or the instructor can do more with complexity or logic or some other core topic.</p><p><p><H2> Counting </H2></p><p><p>
Let&#8217;s get back to FSA and counting.</p><blockquote><p><b>Theorem 2</b><em> Let <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> be a deterministic FSA with <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> states and input alphabet <img src='http://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;Sigma}' title='{&#92;Sigma}' class='latex' />. Then we can determine the cardinality <img src='http://s0.wp.com/latex.php?latex=%7BC_m%28n%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{C_m(n)}' title='{C_m(n)}' class='latex' /> of the set <img src='http://s0.wp.com/latex.php?latex=%7BL%28M%29%5Ccap+%5CSigma%5E%7Bn%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{L(M)&#92;cap &#92;Sigma^{n}}' title='{L(M)&#92;cap &#92;Sigma^{n}}' class='latex' /> in time polynomial in <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />. </em></p></blockquote><p><p>
Put another way, we can count in polynomial time the number of strings of length <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> that a FSA accepts. If the FSA is fixed, then the time is polynomial only in <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />. Actually, in this case the time is essentially bi-linear in <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />&#8212;it depends on the exact computational model. </p><p>
The algorithm to prove this is often described as &#8220;dynamic programming,&#8221; but often that just means maintaining a well-chosen data structure. Here we allocate a slot for each state <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> of the FSA, and maintain for each <img src='http://s0.wp.com/latex.php?latex=%7Bk+%5Cleq+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k &#92;leq n}' title='{k &#92;leq n}' class='latex' /> the number <img src='http://s0.wp.com/latex.php?latex=%7BN_%7Bk%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{k,q}}' title='{N_{k,q}}' class='latex' /> of strings of length exactly <img src='http://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k}' title='{k}' class='latex' /> that reach <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> from the start state <img src='http://s0.wp.com/latex.php?latex=%7Bs%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s}' title='{s}' class='latex' />. Initially <img src='http://s0.wp.com/latex.php?latex=%7Bk+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k = 0}' title='{k = 0}' class='latex' />, <img src='http://s0.wp.com/latex.php?latex=%7BN_%7B0%2Cs%7D+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{0,s} = 1}' title='{N_{0,s} = 1}' class='latex' /> for the empty string, and all other <img src='http://s0.wp.com/latex.php?latex=%7BN_%7B0%2Cq%7D+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{0,q} = 0}' title='{N_{0,q} = 0}' class='latex' />. Now to update it to <img src='http://s0.wp.com/latex.php?latex=%7BN_%7Bk%2B1%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{k+1,q}}' title='{N_{k+1,q}}' class='latex' />, find all states <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and characters <img src='http://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{c}' title='{c}' class='latex' /> such that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cdelta%28p%2Cc%29+%3D+q%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;delta(p,c) = q}' title='{&#92;delta(p,c) = q}' class='latex' />, where <img src='http://s0.wp.com/latex.php?latex=%7B%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;delta}' title='{&#92;delta}' class='latex' /> is the transition function of <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' />, and sum up <img src='http://s0.wp.com/latex.php?latex=%7BN_%7Bk%2Cp%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{k,p}}' title='{N_{k,p}}' class='latex' />. That is, </p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++N_%7Bk%2B1%2Cq%7D+%3D+%5Csum_%7Bp%2Cc%3A+%5Cdelta%28p%2Cc%29+%3D+q%7D+N_%7Bk%2Cp%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  N_{k+1,q} = &#92;sum_{p,c: &#92;delta(p,c) = q} N_{k,p}. ' title='&#92;displaystyle  N_{k+1,q} = &#92;sum_{p,c: &#92;delta(p,c) = q} N_{k,p}. ' class='latex' /></p><p>
Finally <img src='http://s0.wp.com/latex.php?latex=%7BC_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n)}' title='{C_M(n)}' class='latex' /> equals the sum of <img src='http://s0.wp.com/latex.php?latex=%7BN_%7Bn%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{n,q}}' title='{N_{n,q}}' class='latex' /> over all accepting states <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' />. Assuming random access to the data slots, and unit time for arithmetic on small numbers, this runs in time <img src='http://s0.wp.com/latex.php?latex=%7BO%28Sn%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(Sn)}' title='{O(Sn)}' class='latex' />.</p><p>
Sounds simple, but as often happens in complexity, delicacy and difficulty lurk not too far away.</p><p><p><H2> The NFA Case and an Application </H2></p><p><p>
First, does the algorithm work when <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> is nondeterministic? It certainly runs, and counts <em>something</em>, but not the number of accepted strings. So can we modify it to do so? </p><p>
The answer is no&#8212;or maybe better to say &#8220;ostensibly not&#8221;: Given a Boolean formula that is a conjunction of clauses <img src='http://s0.wp.com/latex.php?latex=%7BC_1%2C%5Cdots%2CC_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_1,&#92;dots,C_m}' title='{C_1,&#92;dots,C_m}' class='latex' />, design an NFA <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> that begins with a nondeterministic choice of one of <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> states <img src='http://s0.wp.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' />. From every <img src='http://s0.wp.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' />, <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> starts reading its input <img src='http://s0.wp.com/latex.php?latex=%7Bx+%5Cin+%5C%7B0%2C1%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x &#92;in &#92;{0,1&#92;}^n}' title='{x &#92;in &#92;{0,1&#92;}^n}' class='latex' /> deterministically. The part of <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' />&#8216;s code from <img src='http://s0.wp.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' /> is written so that if <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> is an assignment that makes every literal in <img src='http://s0.wp.com/latex.php?latex=%7BC_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_j}' title='{C_j}' class='latex' /> false&#8212;note that the literals can be presented in index order&#8212;then <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> accepts <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. Thus the formula is <em>un</em>satisfiable if and only if <img src='http://s0.wp.com/latex.php?latex=%7BC_M%28n%29+%3D+2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n) = 2^n}' title='{C_M(n) = 2^n}' class='latex' />. So if we had a <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28Sn%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(Sn)}' title='{&#92;mathsf{poly}(Sn)}' class='latex' /> algorithm to compute <img src='http://s0.wp.com/latex.php?latex=%7BC_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n)}' title='{C_M(n)}' class='latex' />, we&#8217;d have <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP+%3D+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP = P}}' title='{&#92;mathsf{NP = P}}' class='latex' />.</p><p>
Moreover, <img src='http://s0.wp.com/latex.php?latex=%7B2%5En+-+C_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^n - C_M(n)}' title='{2^n - C_M(n)}' class='latex' /> counts the satisfying assignments. Hence relaxing <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> from DFA to NFA makes our little problem <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#P}}' title='{&#92;mathsf{&#92;#P}}' class='latex' />-complete. Now it&#8217;s important that <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> is part of the input. If <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> is fixed and we only want to compute <img src='http://s0.wp.com/latex.php?latex=%7BC_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n)}' title='{C_M(n)}' class='latex' /> given <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />, then of course we can convert <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> to an equivalent DFA which is likewise fixed, and run our algorithm. Hence one must be delicate with what constitutes the input. </p><p>
For an example, call a string <b>special</b> if it contains <img src='http://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> copies of the pattern <img src='http://s0.wp.com/latex.php?latex=%7Bu+%3D+010111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{u = 010111}' title='{u = 010111}' class='latex' /> for some <img src='http://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> that is a prime number. We can count the number of special strings of length <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> in time polynomial in <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />. To do so, we take <img src='http://s0.wp.com/latex.php?latex=%7Bm+%3D+%5Clfloor+n%2F6+%5Crfloor%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m = &#92;lfloor n/6 &#92;rfloor}' title='{m = &#92;lfloor n/6 &#92;rfloor}' class='latex' /> and program a choice over all <img src='http://s0.wp.com/latex.php?latex=%7Bj+%5Cleq+m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j &#92;leq m}' title='{j &#92;leq m}' class='latex' /> as before, this time keeping only the <img src='http://s0.wp.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' /> for which <img src='http://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> is prime. From each <img src='http://s0.wp.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' /> we program a DFA <img src='http://s0.wp.com/latex.php?latex=%7BM_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M_j}' title='{M_j}' class='latex' /> that accepts a string <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> if and only if it contains exactly <img src='http://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> copies of <img src='http://s0.wp.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{u}' title='{u}' class='latex' />. This resembles the <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> case, but is different because there is no overlap in the strings accepted by the respective <img src='http://s0.wp.com/latex.php?latex=%7BM_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M_j}' title='{M_j}' class='latex' />. So we just count the numbers of length-<img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> strings accepted by each and add them up. </p><p>
This is not a hugely important application. We selected it to show that there are counting problems that might be tricky to solve without the FSA method. This and other examples may be useful.</p><p><p><H2> What Else Can Be Counted? </H2></p><p><p>
Note that even though the decision problem <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B2SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{2SAT}}' title='{&#92;mathsf{2SAT}}' class='latex' /> is in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />, the counting problem <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%232SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#2SAT}}' title='{&#92;mathsf{&#92;#2SAT}}' class='latex' /> is still <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#P}}' title='{&#92;mathsf{&#92;#P}}' class='latex' />-complete. For an aside, <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B2SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{2SAT}}' title='{&#92;mathsf{2SAT}}' class='latex' /> is a major example in Mike&#8217;s quantum paper, but here we raise the question, what else can be counted? </p><p>
For instance, counting the number <img src='http://s0.wp.com/latex.php?latex=%7BN_m%28f%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f)}' title='{N_m(f)}' class='latex' /> of solutions to an <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-variable polynomial <img src='http://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{f}' title='{f}' class='latex' /> over <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathbb%7BZ%7D_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathbb{Z}_m}' title='{&#92;mathbb{Z}_m}' class='latex' /> is <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#P}}' title='{&#92;mathsf{&#92;#P}}' class='latex' />-complete. It becomes <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7BO%281%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{O(1)}}' title='{n^{O(1)}}' class='latex' />-time, however, when <img src='http://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{f}' title='{f}' class='latex' /> has degree at most <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. This is when <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> is fixed. What if <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> is variable? We can also ask about computing <img src='http://s0.wp.com/latex.php?latex=%7BN_m%28f+-+j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f - j)}' title='{N_m(f - j)}' class='latex' /> for all <img src='http://s0.wp.com/latex.php?latex=%7Bj+%5Cin+%5Cmathbb%7BZ%7D_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j &#92;in &#92;mathbb{Z}_m}' title='{j &#92;in &#92;mathbb{Z}_m}' class='latex' />, for the particular purpose of computing the <em>exponential sum</em></p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++Z_f+%3D+%5Csum_%7Bj%3D0%7D%5E%7Bm-1%7D+N_m%28f+-+j%29+%5Comega%5Ej+%3D+%5Csum_%7Bx+%5Cin+%5Cmathbb%7BZ%7D_m%5En%7D+%5Comega%5E%7Bf%28x%29%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  Z_f = &#92;sum_{j=0}^{m-1} N_m(f - j) &#92;omega^j = &#92;sum_{x &#92;in &#92;mathbb{Z}_m^n} &#92;omega^{f(x)}, ' title='&#92;displaystyle  Z_f = &#92;sum_{j=0}^{m-1} N_m(f - j) &#92;omega^j = &#92;sum_{x &#92;in &#92;mathbb{Z}_m^n} &#92;omega^{f(x)}, ' class='latex' /></p><p>
where <img src='http://s0.wp.com/latex.php?latex=%7B%5Comega+%3D+%5Cexp%28%5Cfrac%7B2%5Cpi+i%7D%7Bm%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;omega = &#92;exp(&#92;frac{2&#92;pi i}{m})}' title='{&#92;omega = &#92;exp(&#92;frac{2&#92;pi i}{m})}' class='latex' />.</p><p>
Dick co-authored a <a href=\"http://arxiv.org/abs/1005.2632\">paper</a> recently with Jin-Yi Cai, Xi Chen, and Pinyan Lu, showing that when <img src='http://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{f}' title='{f}' class='latex' /> has degree at most <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />, <img src='http://s0.wp.com/latex.php?latex=%7BZ_f%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Z_f}' title='{Z_f}' class='latex' /> is computable in time polynomial in <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B%5Clog+m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;log m}' title='{&#92;log m}' class='latex' />. In particular this means that for <img src='http://s0.wp.com/latex.php?latex=%7Bm+%3D+2%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m = 2^r}' title='{m = 2^r}' class='latex' />, when we can represent the members of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathbb%7BZ%7D_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathbb{Z}_m}' title='{&#92;mathbb{Z}_m}' class='latex' /> by strings in <img src='http://s0.wp.com/latex.php?latex=%7B%5C%7B0%2C1%5C%7D%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{0,1&#92;}^r}' title='{&#92;{0,1&#92;}^r}' class='latex' />, the time to compute <img src='http://s0.wp.com/latex.php?latex=%7BZ_f%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Z_f}' title='{Z_f}' class='latex' /> is <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nr)}' title='{&#92;mathsf{poly}(nr)}' class='latex' />. </p><p>
A little thought shows that this suffices to compute any individual number <img src='http://s0.wp.com/latex.php?latex=%7BN_m%28f+-+j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f - j)}' title='{N_m(f - j)}' class='latex' /> in time <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nm%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nm)}' title='{&#92;mathsf{poly}(nm)}' class='latex' />, indeed by computing all of them. But if we just want one, and <img src='http://s0.wp.com/latex.php?latex=%7Bm+%3D+2%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m = 2^r}' title='{m = 2^r}' class='latex' />, can we do it in time <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nr)}' title='{&#92;mathsf{poly}(nr)}' class='latex' />? This is not obvious to me (Ken), and at least for now leaves the funny situation where we can compute in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nr)}' title='{&#92;mathsf{poly}(nr)}' class='latex' /> time the historically important <img src='http://s0.wp.com/latex.php?latex=%7BZ_f%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Z_f}' title='{Z_f}' class='latex' /> function which involves all the <img src='http://s0.wp.com/latex.php?latex=%7BN_m%28f+-+j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f - j)}' title='{N_m(f - j)}' class='latex' /> values, but don&#8217;t see a way to compute any one of them in the same time.</p><p><p><H2> Open Problems </H2></p><p><p>
Whose originally proved efficient counting for deterministic FSA? We seem to not be able to track that down. Are there some cool applications? </p><p>
What is the answer to the last problem? Should <em>counting</em> receive more emphasis in texts at the level of Mike&#8217;s?</p><p>
I (Ken) add a story: I first met Mike when we shared a compartment of the train between Hamburg, Germany and Aarhus, Denmark, on the way to ICALP 1982.  I had just moved from algebraic combinatorics into complexity during my first year at Oxford, and naturally asked him what were the propsects for proving <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.  He replied &#8220;It will be proved &#8230; yes we will prove it,&#8221; and backed up his confidence by naming <a href=\"http://link.springer.com/article/10.1007%2FBF01744431\">some</a><a href=\"http://dl.acm.org/citation.cfm?id=808733\">results</a> and giving some ideas along lines that would later be called the &#8220;Sipser programme&#8221; of approach via circuit lower bounds.  (Did we mention that he also wrote with Ravi Boppana a bellwether <a href=\"https://www.cs.umd.edu/~gasarch/BLOGPAPERS/boppana_sipser.ps\">survey</a> on circuit complexity?)  I guess there wasn&#8217;t a time limit on his assertion&#8230;</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11490/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11490/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11490&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/04/05/counting-is-sometimes-easy/feed/") (slash:comments nil "11") (media:content ((url . "http://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/04/sipserdean.png?w=250") (medium . "image")) (media:title ((type . "html")) "SipserDean")))) ("Wait Wait… Don’t Fool Me!" "<p><font color=\"”#0066cc?\"><br /><em> It’s that time of year again </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/04/peterandcarlfool.jpg\"><img src=\"http://rjlipton.files.wordpress.com/2014/04/peterandcarlfool.jpg?w=240&h=180\" alt=\"peterandcarlFool\" width=\"240\" height=\"180\" class=\"alignright  wp-image-11474\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Altered from NPR <a href=\"http://www.npr.org/programs/waitwait/about.html\">source</a>.<br /></FONT></td></table><p>
Faadosly Polir is back in contact with us. We have <a href=\"http://rjlipton.wordpress.com/2009/04/01/a-new-factoring-algorithm/\">encountered</a><a href=\"http://rjlipton.wordpress.com/2010/03/31/april-fool/\">him</a><a href=\"http://rjlipton.wordpress.com/2013/04/01/interstellar-quantum-computation/\">before</a>, but this time he has company. He has teamed up with two well-known radio personalities to launch a quiz show about mathematics.</p><p>
Today Ken and I wish to talk about material for the show that Faadosly has sent us.<br /><span id=\"more-11473\"></span></p><p>
The draft he sent has the subtitle, “Strange Facts About Mathematics.” The material is not only about strange facts, but is strange in itself. Many of the “facts” are false. Everyone’s name is replaced by an anagram. Decoding the name to a true person helps you, but the fact can still be false. His co-authors on the scripts are named <b>Pearl Gates</b> and <b>Slack Laser</b>. </p><p>
Apparently the <a href=\"http://en.wikipedia.org/wiki/Wait_Wait..._Don't_Tell_Me!#Bluff_the_Listener\">idea</a> is that the quiz contestant hears three “facts” and has to say which one is true. The problem is that their math items are not arranged that way, but rather jumbled all together. The proportion of true ones seems to be more like 1/2 than 1/3. Perhaps it is harder to generate true ones that seem false than false ones that are plausible, so they figure they can do more of the latter later? Anyway, they are allowing us to share some with you.</p><p><p><H2> Some Strange Facts? </H2></p><p><p>
Here is a sampler from their draft—a mix of true stories and “fools.” Count a “fool” if either the personal description or the mathematical “fact” is false, or both.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Hydra Dye Frog</b>, while well known for his brilliant mathematics in number theory and analysis, once wrote a seminal paper on genetics. The issue was whether a dominant character should show a tendency to spread over a whole population; or put another way would all recessive characters tend to die out. Assuming a reasonable random model of mating, he showed that dominant genes would not force out recessive ones. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Gail Kali</b> is a mathematician from Chennai, India. Like her countryman Srinivasa Ramanujan, she credits a Hindu goddess for her mathematical insights—of course in her case the goddess Kali. In a dream Kali told her that every generalized Platonic solid with central symmetry in <img src='http://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' />-dimensional space has at least <img src='http://s0.wp.com/latex.php?latex=%7B3%5EN+-+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3^N - 1}' title='{3^N - 1}' class='latex' /> lower-dimensional faces, including its vertices.  Unfortunately, Gail woke up before Kali got beyond the all-triangles cases in the proof. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Rich-Cal Fried Sugars</b> was another great mathematician known for many results in number theory. But in his lifetime he was famous for helping solve one of the great mysteries of his time. Astronomers were tracking the position of Ceres, a huge asteroid, and they lost it owing to the glare of the sun. He famously predicted the path of where it would be, and on New Year’s Eve astronomers found it. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet}' title='{&#92;bullet}' class='latex' /><b>One-Ale Hurdler</b> proved that there was no way to route one-way traffic touring his whole city without causing a snarl. Even before his rule that T-junctions were bad news, he discovered that the bridges made it impossible. This problem founded an entire big branch of mathematics.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet}' title='{&#92;bullet}' class='latex' /><b>One-Cat Tree</b> proved that a relativistic smoothing of the Navier-Stokes equations allows infinite concentration of energy in finite time, because of its ability to simulate universal computation. Running this in reverse, it follows from the quantum complementarity of energy and time that the Big Bang did a lot of computation in its brief timespan. The computational results can now be read off from the pattern of gravity waves in the cosmic microwave background. At over a trillion times the concentrated power of the Large Hadron Collider, the Big Bang Computer represents almost a billion times the processing capacity of Google, whose data-mining efforts to read off long numerical calculations from it are underway. Thus we have it: the digits of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi}' title='{&#92;pi}' class='latex' /> in the sky.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Wes Gromit</b> is not related to the famous British star of animated films, but his father has composed many movie scores. In disjoint work with One-Cat Tree and <b>Gene Bern</b>, he proved the existence of an infinite arithmetical progression with exactly two prime numbers in it. Although married with five children, he was declared a bachelor by Queen Elizabeth II in 2012.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Annual Trig</b> was a mathematician who along with a colleague introduced modulo wrap-around computation to cryptography. They actually used it modulo six, but the ability to wrap was essential to make their system work. They were working on an analog system to scramble telephone calls. In their system there were six bands that had to be moved around, and they found that by doing certain arithmetic operations modulo six they had more security.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Town Falconer</b> proved that there is a language in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> whose complement does not have an interactive protocol. This flies in the face of there being an oracle constructed by <b>Amish Raid</b> that gives every language in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' /> such a protocol, so that Falconer and <b>Semi Spiker</b> are credited with proving the only truly natural non-relativizing result in complexity.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Joint Who Tolled</b> was a mathematician famous for work in analysis and related areas. He was a doubter of the Riemann Hypothesis (RH) throughout his life. There are claims—but who can tell—that he might have changed his mind if he knew some of the modern computations that show RH holding for a huge number of zeroes. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Glacial Warmish</b> is a complexity theorist who is interested in Kolmogorov Complexity, among other things. One of his main results is a proof that this theory gives a natural construction of a set that is undecidable, but is weaker than the Halting problem. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Glib Tales</b> co-wrote a paper proving what until recently was the fastest known way to flip pancakes in a stack so that the larger ones end up below smaller ones. Instead of opening a pancake business he founded a company which became rich enough to sponsor him in a match against the world chess champion. However, he got checkmated in nine moves. The paper still earned him an Erdős Number of 4.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet}' title='{&#92;bullet}' class='latex' /><b>Sonata Consort</b> proved that quantum computers can solve <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete problems. Although his algorithm is “galactic” in worst case, his ideas inspired a Vancouver startup company to build a quantum computer that solves <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete problems in many cases, perhaps even without needing anything “quantum” at all. As this company’s most valuable consultant, he is paid in a quantum-money scheme of his own devising. </p><p><p><H2> Open Problems </H2></p><p><p>
Which ones are the “fools”? Try not to be fooled today. As a hint, the fools have something in common…</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11473/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11473/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11473&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "http://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/" (21307 809) new 3 nil nil ((title nil "Wait Wait… Don’t Fool Me!") (link nil "http://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/") (comments nil "http://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/#comments") (pubDate nil "Tue, 01 Apr 2014 18:19:21 +0000") (dc:creator nil "Pip") (category nil "Ideas") (category nil "People") (category nil "April Fool") (category nil "Computation") (category nil "Faadosly Polir") (category nil "gravity waves") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11473") (description nil "It&#8217;s that time of year again Altered from NPR source. Faadosly Polir is back in contact with us. We have encountered him before, but this time he has company. He has teamed up with two well-known radio personalities to launch a quiz show about mathematics. Today Ken and I wish to talk about material for [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11473&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> It&#8217;s that time of year again </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/04/peterandcarlfool.jpg\"><img src=\"http://rjlipton.files.wordpress.com/2014/04/peterandcarlfool.jpg?w=240&#038;h=180\" alt=\"peterandcarlFool\" width=\"240\" height=\"180\" class=\"alignright  wp-image-11474\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Altered from NPR <a href=\"http://www.npr.org/programs/waitwait/about.html\">source</a>.<br /></FONT></td></table><p>
Faadosly Polir is back in contact with us. We have <a href=\"http://rjlipton.wordpress.com/2009/04/01/a-new-factoring-algorithm/\">encountered</a><a href=\"http://rjlipton.wordpress.com/2010/03/31/april-fool/\">him</a><a href=\"http://rjlipton.wordpress.com/2013/04/01/interstellar-quantum-computation/\">before</a>, but this time he has company. He has teamed up with two well-known radio personalities to launch a quiz show about mathematics.</p><p>
Today Ken and I wish to talk about material for the show that Faadosly has sent us.<br /><span id=\"more-11473\"></span></p><p>
The draft he sent has the subtitle, &#8220;Strange Facts About Mathematics.&#8221; The material is not only about strange facts, but is strange in itself. Many of the &#8220;facts&#8221; are false. Everyone&#8217;s name is replaced by an anagram. Decoding the name to a true person helps you, but the fact can still be false. His co-authors on the scripts are named <b>Pearl Gates</b> and <b>Slack Laser</b>. </p><p>
Apparently the <a href=\"http://en.wikipedia.org/wiki/Wait_Wait..._Don't_Tell_Me!#Bluff_the_Listener\">idea</a> is that the quiz contestant hears three &#8220;facts&#8221; and has to say which one is true. The problem is that their math items are not arranged that way, but rather jumbled all together. The proportion of true ones seems to be more like 1/2 than 1/3. Perhaps it is harder to generate true ones that seem false than false ones that are plausible, so they figure they can do more of the latter later? Anyway, they are allowing us to share some with you.</p><p><p><H2> Some Strange Facts? </H2></p><p><p>
Here is a sampler from their draft&#8212;a mix of true stories and &#8220;fools.&#8221; Count a &#8220;fool&#8221; if either the personal description or the mathematical &#8220;fact&#8221; is false, or both.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Hydra Dye Frog</b>, while well known for his brilliant mathematics in number theory and analysis, once wrote a seminal paper on genetics. The issue was whether a dominant character should show a tendency to spread over a whole population; or put another way would all recessive characters tend to die out. Assuming a reasonable random model of mating, he showed that dominant genes would not force out recessive ones. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Gail Kali</b> is a mathematician from Chennai, India. Like her countryman Srinivasa Ramanujan, she credits a Hindu goddess for her mathematical insights&#8212;of course in her case the goddess Kali. In a dream Kali told her that every generalized Platonic solid with central symmetry in <img src='http://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' />-dimensional space has at least <img src='http://s0.wp.com/latex.php?latex=%7B3%5EN+-+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3^N - 1}' title='{3^N - 1}' class='latex' /> lower-dimensional faces, including its vertices.  Unfortunately, Gail woke up before Kali got beyond the all-triangles cases in the proof. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Rich-Cal Fried Sugars</b> was another great mathematician known for many results in number theory. But in his lifetime he was famous for helping solve one of the great mysteries of his time. Astronomers were tracking the position of Ceres, a huge asteroid, and they lost it owing to the glare of the sun. He famously predicted the path of where it would be, and on New Year&#8217;s Eve astronomers found it. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet}' title='{&#92;bullet}' class='latex' /><b>One-Ale Hurdler</b> proved that there was no way to route one-way traffic touring his whole city without causing a snarl. Even before his rule that T-junctions were bad news, he discovered that the bridges made it impossible. This problem founded an entire big branch of mathematics.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet}' title='{&#92;bullet}' class='latex' /><b>One-Cat Tree</b> proved that a relativistic smoothing of the Navier-Stokes equations allows infinite concentration of energy in finite time, because of its ability to simulate universal computation. Running this in reverse, it follows from the quantum complementarity of energy and time that the Big Bang did a lot of computation in its brief timespan. The computational results can now be read off from the pattern of gravity waves in the cosmic microwave background. At over a trillion times the concentrated power of the Large Hadron Collider, the Big Bang Computer represents almost a billion times the processing capacity of Google, whose data-mining efforts to read off long numerical calculations from it are underway. Thus we have it: the digits of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi}' title='{&#92;pi}' class='latex' /> in the sky.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Wes Gromit</b> is not related to the famous British star of animated films, but his father has composed many movie scores. In disjoint work with One-Cat Tree and <b>Gene Bern</b>, he proved the existence of an infinite arithmetical progression with exactly two prime numbers in it. Although married with five children, he was declared a bachelor by Queen Elizabeth II in 2012.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Annual Trig</b> was a mathematician who along with a colleague introduced modulo wrap-around computation to cryptography. They actually used it modulo six, but the ability to wrap was essential to make their system work. They were working on an analog system to scramble telephone calls. In their system there were six bands that had to be moved around, and they found that by doing certain arithmetic operations modulo six they had more security.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Town Falconer</b> proved that there is a language in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> whose complement does not have an interactive protocol. This flies in the face of there being an oracle constructed by <b>Amish Raid</b> that gives every language in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' /> such a protocol, so that Falconer and <b>Semi Spiker</b> are credited with proving the only truly natural non-relativizing result in complexity.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Joint Who Tolled</b> was a mathematician famous for work in analysis and related areas. He was a doubter of the Riemann Hypothesis (RH) throughout his life. There are claims&#8212;but who can tell&#8212;that he might have changed his mind if he knew some of the modern computations that show RH holding for a huge number of zeroes. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Glacial Warmish</b> is a complexity theorist who is interested in Kolmogorov Complexity, among other things. One of his main results is a proof that this theory gives a natural construction of a set that is undecidable, but is weaker than the Halting problem. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Glib Tales</b> co-wrote a paper proving what until recently was the fastest known way to flip pancakes in a stack so that the larger ones end up below smaller ones. Instead of opening a pancake business he founded a company which became rich enough to sponsor him in a match against the world chess champion. However, he got checkmated in nine moves. The paper still earned him an Erd&#337;s Number of 4.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet}' title='{&#92;bullet}' class='latex' /><b>Sonata Consort</b> proved that quantum computers can solve <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete problems. Although his algorithm is &#8220;galactic&#8221; in worst case, his ideas inspired a Vancouver startup company to build a quantum computer that solves <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete problems in many cases, perhaps even without needing anything &#8220;quantum&#8221; at all. As this company&#8217;s most valuable consultant, he is paid in a quantum-money scheme of his own devising. </p><p><p><H2> Open Problems </H2></p><p><p>
Which ones are the &#8220;fools&#8221;? Try not to be fooled today. As a hint, the fools have something in common&#8230;</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11473/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11473/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11473&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/feed/") (slash:comments nil "3") (media:content ((url . "http://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/04/peterandcarlfool.jpg?w=240") (medium . "image")) (media:title ((type . "html")) "peterandcarlFool")))) ("A Matchless Result" "<p><font color=\"”#0066cc?\"><br /><em> A famous algorithm, a new paper, a full correctness proof </em><br /><font color=\"”#000000?\"></p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/vijaygatech.jpg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/vijaygatech.jpg?w=208&h=300\" alt=\"VijayGatech\"   class=\"alignright size-medium wp-image-11450\" /></a></p><p>
Vijay Vazirani is one of the world experts on algorithmic theory, and is especially known for his masterful <a href=\"http://www.amazon.com/Approximation-Algorithms-Vijay-V-Vazirani/dp/3540653678\">book</a> on approximation algorithms. Among many results in computational complexity, two have been Wikified: his <a href=\"http://en.wikipedia.org/wiki/Valiant-Vazirani_theorem\">theorem</a> with Les Valiant on unique SAT, and the subsequent generalized <a href=\"http://en.wikipedia.org/wiki/Isolation_lemma\">Isolation Lemma</a> with Ketan Mulmuley and his brother Umesh Vazirani. Lately his focus has been more on computational aspects of auctions, economic systems, and game theory.</p><p>
Today Ken and I wish to discuss a recent paper by Vijay on matching.<br /><span id=\"more-11449\"></span></p><p>
His paper is quite unique—is “quite” redundant?—well it is an isolated case of a top researcher taking the time and energy to explain the correctness of one of his famous algorithms, originally in joint work with Silvio Micali. As our field matures we should see more of this.</p><p>
Given an undirected graph <img src='http://s0.wp.com/latex.php?latex=%7BG%3D%28V%2CE%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{G=(V,E)}' title='{G=(V,E)}' class='latex' /> a <a href=\"http://en.wikipedia.org/wiki/Matching_(graph_theory)\">matching</a>, of course, is a set of pairwise non-adjacent edges: no two edges share a common vertex. A maximum matching is a matching that contains the largest possible number of edges. If <img src='http://s0.wp.com/latex.php?latex=%7B%7CV%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{|V|}' title='{|V|}' class='latex' /> is even then a matching with <img src='http://s0.wp.com/latex.php?latex=%7B%7CV%7C%2F2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{|V|/2}' title='{|V|/2}' class='latex' /> edges is <em>perfect</em>. The notorious Petersen graph</p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/match.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/match.png?w=600\" alt=\"match\"   class=\"aligncenter size-full wp-image-11451\" /></a></p><p>
has six different perfect matchings: the five “spokes” and others using just one spoke. Although matchings are often associated with bipartite graphs, it is important to note that the Petersen graph is not bipartite. This is important since the matching algorithm we will discuss works for general graphs, not just bipartite graphs. </p><p><H2> The Importance Of Matching </H2></p><p><p>
Finding a maximum matching is one of the foundational problems at the intersection of graph theory and algorithmic theory. The reason for this is: </p><ul><li><i>The problem is useful in practice</i>. Unlike many problems that are sometimes studied in theory, people really would like to be able to find matchings of general graphs. See <a href=\"http://www.cs.odu.edu/~mhalappa/matching/applications.html\">this</a> for a detailed list.</p><li><i>The problem is basic to the theory of graphs</i>. L&aacute;szl&oacute; Lov&aacute;sz and Michael Plummer wrote an entire book called <a href=\"http://www.amazon.com/Matching-Theory-AMS-Chelsea-Publishing/dp/0821847597\">Matching Theory</a> on—you guessed right—matchings. They shared the Niveau Prize of the Hungarian Academy of Sciences for this book in 1991. We especially like the Amazon review of the book:</p><blockquote><p>
The subject has obviously advanced a lot since the book was published, but the overview provided is still unmatched.
</p></blockquote><p>
Cool pun.</p><p><li><i>The problem is basic to the theory of algorithms</i>. Euclid may have the first non-trivial algorithm, his algorithm for finding the gcd of two numbers, but algorithms for matching started over fifty years ago. This is not the place to trace out the long and complex history of who did what algorithm for finding matchings. Suffice it to say that much of the theory of algorithms can be traced to the history of matching algorithms: various tricks and methods that are used through computing often first appeared in matching algorithms. Andras Frank has written a wonderful <a href=\"http://www.cs.elte.hu/egres/tr/egres-04-14.pdf\">piece</a> called <i>On Kuhn’s Hungarian Method—A tribute from Hungary</i> about the bipartite case—see it for some interesting history.
</ul><p>
Here is a picture of some of the applications of matching algorithms.</p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/apps.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/apps.png?w=550&h=377\" alt=\"apps\" width=\"550\" height=\"377\" class=\"aligncenter wp-image-11452\" /></a></p><p>
Let’s turn to look at Vijay’s new paper.</p><p><p><H2> The Paper’s Tracks </H2></p><p><p>
Actually we need to first look at the original paper called <i>An <img src='http://s0.wp.com/latex.php?latex=%7BO%28%5Csqrt%7B%7CV%7C%7D%7CE%7C%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(&#92;sqrt{|V|}|E|)}' title='{O(&#92;sqrt{|V|}|E|)}' class='latex' /> algoithm for finding maximum matching in general graphs</i> by Silvio Micali and Vijay Vazirani. It was <a href=\"http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=4567800\">published</a> in the 21st Annual Symposium on Foundations of Computer Science in 1980. </p><p>
We will call this paper the MV paper, and its algorithm the MV algorithm. Note the running time is <img src='http://s0.wp.com/latex.php?latex=%7BO%28m%5Csqrt%7Bn%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(m&#92;sqrt{n})}' title='{O(m&#92;sqrt{n})}' class='latex' /> using “modern” internationally agreed-upon notation: we use <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> always to denote the number of vertices and <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> the number of edges. Paul Halmos was always careful about <a href=\"http://rjlipton.wordpress.com/2009/03/30/halmos-non-standard-analysis-and-names/\">notation</a>, and once said that his worst nightmare was that someone would type 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Clim_%7B%5Cepsilon+%5Crightarrow+%5Cinfty%7D+n_%7B%5Cepsilon%7D+%3D+0.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;lim_{&#92;epsilon &#92;rightarrow &#92;infty} n_{&#92;epsilon} = 0. ' title='&#92;displaystyle  &#92;lim_{&#92;epsilon &#92;rightarrow &#92;infty} n_{&#92;epsilon} = 0. ' class='latex' /></p><p>
The title of Vijay’s original paper was created before these agreements, so it is understandable that they used the “old” style notation in the title.  It is also less prone to the problem that if you write <img src='http://s0.wp.com/latex.php?latex=%7BO%28%5Csqrt%7Bn%7Dm%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(&#92;sqrt{n}m)}' title='{O(&#92;sqrt{n}m)}' class='latex' /> it may be hard to see that the square-root sign does not also cover the <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' />.</p><p><p>
This paper presented the MV algorithm with the given running time. The major advance was that it efficiently found a maximum matching in general graphs. There is an interesting cliff that happens in the theory of algorithms for finding maximum matchings. Bipartite graphs are just much easier for matching algorithms. Of course they are easier for many other algorithms: it is trivial to find a 2-coloring of a bipartite graph, but NP-hard to find a 3-colring in a general graph. One of the achievements of the MV paper is that everything works for general graphs. </p><p>
The new <a href=\"http://www.cc.gatech.edu/~vazirani/new-proof.pdf\">paper</a> is solely authored by Vijay. It has several goals, but the main one is to give a clear but full proof of the correctness of the MV algorithm. The algorithm remains the same, but the correctness proof is new. The previous proof had a flawed case analysis. The new proof avails itself of information that the previous proof bypassed, to make the analysis tighter and more manageable.</p><p>
We will not give the whole proof, but we will give an algorithmic idea highlighted also by Vijay, which has independent interest.</p><p><p><H2> Dueling Depth-First Searches </H2></p><p><p>
Let <img src='http://s0.wp.com/latex.php?latex=%7BG+%3D+%28V%2CE%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{G = (V,E)}' title='{G = (V,E)}' class='latex' /> be a directed acyclic graph whose vertices are in <em>layers</em> numbered <img src='http://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' /> (for sinks) through <img src='http://s0.wp.com/latex.php?latex=%7B%5Cell%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;ell}' title='{&#92;ell}' class='latex' /> (sources). Edges from any non-sink node go to nodes in lower layers, not necessarily the next layer, and every node has a path to a sink in layer <img src='http://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' />. Let <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> be any two non-sink nodes. By <a href=\"http://en.wikipedia.org/wiki/Menger's_theorem\">Menger’s Theorem</a>, either</p><ol><li>
there are vertex-disjoint paths from <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> to sinks <img src='http://s0.wp.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' />, or </p><li>
the set <img src='http://s0.wp.com/latex.php?latex=%7BB_%7Bg%2Cr%7D+%3D+%5C%7Bv%3A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{B_{g,r} = &#92;{v:}' title='{B_{g,r} = &#92;{v:}' class='latex' /> every path from <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> to a sink goes through <img src='http://s0.wp.com/latex.php?latex=%7Bv%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v&#92;}}' title='{v&#92;}}' class='latex' /> is nonempty.
</ol><p>
In the latter case, let <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> be the element of <img src='http://s0.wp.com/latex.php?latex=%7BB_%7Bg%2Cr%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{B_{g,r}}' title='{B_{g,r}}' class='latex' /> in the highest layer. The algorithm must find this <em>highest bottleneck</em> node <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> within time proportional to the total number of edges in paths from <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> to <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' />. In the former case the algorithm must output paths to <img src='http://s0.wp.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' /> within time proportional to the total number of edges on all paths from <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> to either of <img src='http://s0.wp.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' />.</p><p>
The main puzzle is, how can we avoid searching past <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> and taking more than the time allowed to the latter case, if we don’t even know that it holds? For a single local search, this does indeed seem to be impossible. However, what Vijay called “Double Depth-First Search” (DDFS) solves it. Two search posses led by rangers Green and Red start respectively at <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> and mark out “green” and “red” nodes and edges both. Neither may tread on the other’s ground. The rules are:</p><ul><li>
Whichever posse is on a higher-level node gets to move; if they are on the same level, Red moves. </p><li>
If one posse’s depth-first search comes to an already-marked empty node <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />—it could have been marked by either posse on an earlier visit—it goes back and tries another down-edge from its previous node. If there are no more down-edges, it backtracks up from its previous node as in normal depth-first search. </p><li> If the other posse is <i>on</i> node <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />, however, Red and Green fight a duel at 20 paces.
</ul><p><P></p><table style=\"margin:auto;\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/03/beattyghranger.jpg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/beattyghranger.jpg?w=300&h=375\" alt=\"BeattyGHRanger\" width=\"300\" height=\"375\" class=\"aligncenter wp-image-11471\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">By permission of <a href=\"http://comicartfans.com/\">ComicArtFans</a> gallery owner Mark Geier: <a href=\"http://www.comicartfans.com/GalleryPiece.asp?Piece=1043183&amp;GSub=147878\">source</a> commissioned from artist <a href=\"http://www.terrybeatty.com/\">Terry Beatty</a><br /></FONT></td></tr></table><p>
The duel follows gentlemen’s rules. Red shoots in the air. Green takes the hint and backtracks looking for another node <img src='http://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{w}' title='{w}' class='latex' /> at the same level as <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> or lower. If Green succeeds, he sends a Western Union telegram to Red, who puts his marker on <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> and moves on. If Green gets stuck, then Red has to keep the same bargain. Red backtracks until he either finds another <img src='http://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{w}' title='{w}' class='latex' /> at the same level as <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> or lower, whereupon he telegrams Green to come back and claim <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> as his, or Red gets stuck too. If they are both stuck they both come back to <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />. Each claims just the respective (necessarily different) (sets of) edges he followed into <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />, but they identify <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> itself as the highest bottleneck <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> and share a bottle of hooch to celebrate.</p><p>
They can celebrate because they have met the time guarantee: Neither searched below <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' />, and all the edges they traversed in their wanderings had to be on paths to <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' />, since they did not find any open trails going elsewhere. And in the case where they reach separate destinations <img src='http://s0.wp.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' />, any backtracking done by one posse because of hitting the other’s marked node is inductively on a path to the other’s goal, so at most the various routes between <img src='http://s0.wp.com/latex.php?latex=%7B%5C%7Bg%2Cr%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{g,r&#92;}}' title='{&#92;{g,r&#92;}}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B%5C%7Bs_g%2Cs_r%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{s_g,s_r&#92;}}' title='{&#92;{s_g,s_r&#92;}}' class='latex' /> get searched. </p><p>
Making a search posse on a lower level wait for the other ensures that nodes below a bottleneck don’t get searched.  Many other parts of the algorithm similarly rely on co-ordination with delicate timing considerations; this is just a taste of them.  The new paper also has many other figurative concepts, with illustrations.</p><p><H2> Open Problems </H2></p><p><p>
Do read Vijay’s paper. It is one of the clearest expositions of a graph algorithm—a model for others. Also the idea that Vijay went back to an ancient paper—over thirty years old—solely to write the definitive proof of its correctness is something we all should applaud.</p><p>
Of course the central problem in matching theory is still what is the best time for an algorithm that finds a maximum matching? Given the interest today in huge graphs that arise from social networks we will like a linear time algorithm. Is this possible? See <a href=\"http://www.or.uni-bonn.de/~hougardy/paper/23matching.pdf\">this</a> for some fast approximate algorithms.</p><p>
[added words \"on all paths\" to DDFS time requirement, name and word fixes and adds, permission for vintage Green Hornet/Lone Ranger artwork]</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11449/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11449/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11449&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "http://rjlipton.wordpress.com/2014/03/28/a-matchless-result/" (21301 39412) new 4 nil nil ((title nil "A Matchless Result") (link nil "http://rjlipton.wordpress.com/2014/03/28/a-matchless-result/") (comments nil "http://rjlipton.wordpress.com/2014/03/28/a-matchless-result/#comments") (pubDate nil "Fri, 28 Mar 2014 15:49:08 +0000") (dc:creator nil "Pip") (category nil "Oldies") (category nil "Proofs") (category nil "Results") (category nil "Algorithms") (category nil "complexity") (category nil "depth-first search") (category nil "graphs") (category nil "matchings") (category nil "Silvio Micali") (category nil "Vijay Vazirani") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11449") (description nil "A famous algorithm, a new paper, a full correctness proof Vijay Vazirani is one of the world experts on algorithmic theory, and is especially known for his masterful book on approximation algorithms. Among many results in computational complexity, two have been Wikified: his theorem with Les Valiant on unique SAT, and the subsequent generalized Isolation [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11449&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> A famous algorithm, a new paper, a full correctness proof </em><br /><font color=\"”#000000?\"></p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/vijaygatech.jpg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/vijaygatech.jpg?w=208&#038;h=300\" alt=\"VijayGatech\"   class=\"alignright size-medium wp-image-11450\" /></a></p><p>
Vijay Vazirani is one of the world experts on algorithmic theory, and is especially known for his masterful <a href=\"http://www.amazon.com/Approximation-Algorithms-Vijay-V-Vazirani/dp/3540653678\">book</a> on approximation algorithms. Among many results in computational complexity, two have been Wikified: his <a href=\"http://en.wikipedia.org/wiki/Valiant-Vazirani_theorem\">theorem</a> with Les Valiant on unique SAT, and the subsequent generalized <a href=\"http://en.wikipedia.org/wiki/Isolation_lemma\">Isolation Lemma</a> with Ketan Mulmuley and his brother Umesh Vazirani. Lately his focus has been more on computational aspects of auctions, economic systems, and game theory.</p><p>
Today Ken and I wish to discuss a recent paper by Vijay on matching.<br /><span id=\"more-11449\"></span></p><p>
His paper is quite unique&#8212;is &#8220;quite&#8221; redundant?&#8212;well it is an isolated case of a top researcher taking the time and energy to explain the correctness of one of his famous algorithms, originally in joint work with Silvio Micali. As our field matures we should see more of this.</p><p>
Given an undirected graph <img src='http://s0.wp.com/latex.php?latex=%7BG%3D%28V%2CE%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{G=(V,E)}' title='{G=(V,E)}' class='latex' /> a <a href=\"http://en.wikipedia.org/wiki/Matching_(graph_theory)\">matching</a>, of course, is a set of pairwise non-adjacent edges: no two edges share a common vertex. A maximum matching is a matching that contains the largest possible number of edges. If <img src='http://s0.wp.com/latex.php?latex=%7B%7CV%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{|V|}' title='{|V|}' class='latex' /> is even then a matching with <img src='http://s0.wp.com/latex.php?latex=%7B%7CV%7C%2F2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{|V|/2}' title='{|V|/2}' class='latex' /> edges is <em>perfect</em>. The notorious Petersen graph</p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/match.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/match.png?w=600\" alt=\"match\"   class=\"aligncenter size-full wp-image-11451\" /></a></p><p>
has six different perfect matchings: the five &#8220;spokes&#8221; and others using just one spoke. Although matchings are often associated with bipartite graphs, it is important to note that the Petersen graph is not bipartite. This is important since the matching algorithm we will discuss works for general graphs, not just bipartite graphs. </p><p><H2> The Importance Of Matching </H2></p><p><p>
Finding a maximum matching is one of the foundational problems at the intersection of graph theory and algorithmic theory. The reason for this is: </p><ul><li><i>The problem is useful in practice</i>. Unlike many problems that are sometimes studied in theory, people really would like to be able to find matchings of general graphs. See <a href=\"http://www.cs.odu.edu/~mhalappa/matching/applications.html\">this</a> for a detailed list.</p><li><i>The problem is basic to the theory of graphs</i>. L&aacute;szl&oacute; Lov&aacute;sz and Michael Plummer wrote an entire book called <a href=\"http://www.amazon.com/Matching-Theory-AMS-Chelsea-Publishing/dp/0821847597\">Matching Theory</a> on&#8212;you guessed right&#8212;matchings. They shared the Niveau Prize of the Hungarian Academy of Sciences for this book in 1991. We especially like the Amazon review of the book:</p><blockquote><p>
The subject has obviously advanced a lot since the book was published, but the overview provided is still unmatched.
</p></blockquote><p>
Cool pun.</p><p><li><i>The problem is basic to the theory of algorithms</i>. Euclid may have the first non-trivial algorithm, his algorithm for finding the gcd of two numbers, but algorithms for matching started over fifty years ago. This is not the place to trace out the long and complex history of who did what algorithm for finding matchings. Suffice it to say that much of the theory of algorithms can be traced to the history of matching algorithms: various tricks and methods that are used through computing often first appeared in matching algorithms. Andras Frank has written a wonderful <a href=\"http://www.cs.elte.hu/egres/tr/egres-04-14.pdf\">piece</a> called <i>On Kuhn&#8217;s Hungarian Method&#8212;A tribute from Hungary</i> about the bipartite case&#8212;see it for some interesting history.
</ul><p>
Here is a picture of some of the applications of matching algorithms.</p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/apps.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/apps.png?w=550&#038;h=377\" alt=\"apps\" width=\"550\" height=\"377\" class=\"aligncenter wp-image-11452\" /></a></p><p>
Let&#8217;s turn to look at Vijay&#8217;s new paper.</p><p><p><H2> The Paper&#8217;s Tracks </H2></p><p><p>
Actually we need to first look at the original paper called <i>An <img src='http://s0.wp.com/latex.php?latex=%7BO%28%5Csqrt%7B%7CV%7C%7D%7CE%7C%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(&#92;sqrt{|V|}|E|)}' title='{O(&#92;sqrt{|V|}|E|)}' class='latex' /> algoithm for finding maximum matching in general graphs</i> by Silvio Micali and Vijay Vazirani. It was <a href=\"http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=4567800\">published</a> in the 21st Annual Symposium on Foundations of Computer Science in 1980. </p><p>
We will call this paper the MV paper, and its algorithm the MV algorithm. Note the running time is <img src='http://s0.wp.com/latex.php?latex=%7BO%28m%5Csqrt%7Bn%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(m&#92;sqrt{n})}' title='{O(m&#92;sqrt{n})}' class='latex' /> using &#8220;modern&#8221; internationally agreed-upon notation: we use <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> always to denote the number of vertices and <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> the number of edges. Paul Halmos was always careful about <a href=\"http://rjlipton.wordpress.com/2009/03/30/halmos-non-standard-analysis-and-names/\">notation</a>, and once said that his worst nightmare was that someone would type 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Clim_%7B%5Cepsilon+%5Crightarrow+%5Cinfty%7D+n_%7B%5Cepsilon%7D+%3D+0.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;lim_{&#92;epsilon &#92;rightarrow &#92;infty} n_{&#92;epsilon} = 0. ' title='&#92;displaystyle  &#92;lim_{&#92;epsilon &#92;rightarrow &#92;infty} n_{&#92;epsilon} = 0. ' class='latex' /></p><p>
The title of Vijay&#8217;s original paper was created before these agreements, so it is understandable that they used the &#8220;old&#8221; style notation in the title.  It is also less prone to the problem that if you write <img src='http://s0.wp.com/latex.php?latex=%7BO%28%5Csqrt%7Bn%7Dm%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(&#92;sqrt{n}m)}' title='{O(&#92;sqrt{n}m)}' class='latex' /> it may be hard to see that the square-root sign does not also cover the <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' />.</p><p><p>
This paper presented the MV algorithm with the given running time. The major advance was that it efficiently found a maximum matching in general graphs. There is an interesting cliff that happens in the theory of algorithms for finding maximum matchings. Bipartite graphs are just much easier for matching algorithms. Of course they are easier for many other algorithms: it is trivial to find a 2-coloring of a bipartite graph, but NP-hard to find a 3-colring in a general graph. One of the achievements of the MV paper is that everything works for general graphs. </p><p>
The new <a href=\"http://www.cc.gatech.edu/~vazirani/new-proof.pdf\">paper</a> is solely authored by Vijay. It has several goals, but the main one is to give a clear but full proof of the correctness of the MV algorithm. The algorithm remains the same, but the correctness proof is new. The previous proof had a flawed case analysis. The new proof avails itself of information that the previous proof bypassed, to make the analysis tighter and more manageable.</p><p>
We will not give the whole proof, but we will give an algorithmic idea highlighted also by Vijay, which has independent interest.</p><p><p><H2> Dueling Depth-First Searches </H2></p><p><p>
Let <img src='http://s0.wp.com/latex.php?latex=%7BG+%3D+%28V%2CE%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{G = (V,E)}' title='{G = (V,E)}' class='latex' /> be a directed acyclic graph whose vertices are in <em>layers</em> numbered <img src='http://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' /> (for sinks) through <img src='http://s0.wp.com/latex.php?latex=%7B%5Cell%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;ell}' title='{&#92;ell}' class='latex' /> (sources). Edges from any non-sink node go to nodes in lower layers, not necessarily the next layer, and every node has a path to a sink in layer <img src='http://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' />. Let <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> be any two non-sink nodes. By <a href=\"http://en.wikipedia.org/wiki/Menger's_theorem\">Menger&#8217;s Theorem</a>, either</p><ol><li>
there are vertex-disjoint paths from <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> to sinks <img src='http://s0.wp.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' />, or </p><li>
the set <img src='http://s0.wp.com/latex.php?latex=%7BB_%7Bg%2Cr%7D+%3D+%5C%7Bv%3A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{B_{g,r} = &#92;{v:}' title='{B_{g,r} = &#92;{v:}' class='latex' /> every path from <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> to a sink goes through <img src='http://s0.wp.com/latex.php?latex=%7Bv%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v&#92;}}' title='{v&#92;}}' class='latex' /> is nonempty.
</ol><p>
In the latter case, let <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> be the element of <img src='http://s0.wp.com/latex.php?latex=%7BB_%7Bg%2Cr%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{B_{g,r}}' title='{B_{g,r}}' class='latex' /> in the highest layer. The algorithm must find this <em>highest bottleneck</em> node <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> within time proportional to the total number of edges in paths from <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> to <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' />. In the former case the algorithm must output paths to <img src='http://s0.wp.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' /> within time proportional to the total number of edges on all paths from <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> to either of <img src='http://s0.wp.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' />.</p><p>
The main puzzle is, how can we avoid searching past <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> and taking more than the time allowed to the latter case, if we don&#8217;t even know that it holds? For a single local search, this does indeed seem to be impossible. However, what Vijay called &#8220;Double Depth-First Search&#8221; (DDFS) solves it. Two search posses led by rangers Green and Red start respectively at <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> and mark out &#8220;green&#8221; and &#8220;red&#8221; nodes and edges both. Neither may tread on the other&#8217;s ground. The rules are:</p><ul><li>
Whichever posse is on a higher-level node gets to move; if they are on the same level, Red moves. </p><li>
If one posse&#8217;s depth-first search comes to an already-marked empty node <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />&#8212;it could have been marked by either posse on an earlier visit&#8212;it goes back and tries another down-edge from its previous node. If there are no more down-edges, it backtracks up from its previous node as in normal depth-first search. </p><li> If the other posse is <i>on</i> node <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />, however, Red and Green fight a duel at 20 paces.
</ul><p><P></p><table style=\"margin:auto;\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/03/beattyghranger.jpg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/beattyghranger.jpg?w=300&#038;h=375\" alt=\"BeattyGHRanger\" width=\"300\" height=\"375\" class=\"aligncenter wp-image-11471\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">By permission of <a href=\"http://comicartfans.com/\">ComicArtFans</a> gallery owner Mark Geier: <a href=\"http://www.comicartfans.com/GalleryPiece.asp?Piece=1043183&amp;GSub=147878\">source</a> commissioned from artist <a href=\"http://www.terrybeatty.com/\">Terry Beatty</a><br /></FONT></td></tr></table><p>
The duel follows gentlemen&#8217;s rules. Red shoots in the air. Green takes the hint and backtracks looking for another node <img src='http://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{w}' title='{w}' class='latex' /> at the same level as <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> or lower. If Green succeeds, he sends a Western Union telegram to Red, who puts his marker on <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> and moves on. If Green gets stuck, then Red has to keep the same bargain. Red backtracks until he either finds another <img src='http://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{w}' title='{w}' class='latex' /> at the same level as <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> or lower, whereupon he telegrams Green to come back and claim <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> as his, or Red gets stuck too. If they are both stuck they both come back to <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />. Each claims just the respective (necessarily different) (sets of) edges he followed into <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />, but they identify <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> itself as the highest bottleneck <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> and share a bottle of hooch to celebrate.</p><p>
They can celebrate because they have met the time guarantee: Neither searched below <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' />, and all the edges they traversed in their wanderings had to be on paths to <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' />, since they did not find any open trails going elsewhere. And in the case where they reach separate destinations <img src='http://s0.wp.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' />, any backtracking done by one posse because of hitting the other&#8217;s marked node is inductively on a path to the other&#8217;s goal, so at most the various routes between <img src='http://s0.wp.com/latex.php?latex=%7B%5C%7Bg%2Cr%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{g,r&#92;}}' title='{&#92;{g,r&#92;}}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B%5C%7Bs_g%2Cs_r%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{s_g,s_r&#92;}}' title='{&#92;{s_g,s_r&#92;}}' class='latex' /> get searched. </p><p>
Making a search posse on a lower level wait for the other ensures that nodes below a bottleneck don&#8217;t get searched.  Many other parts of the algorithm similarly rely on co-ordination with delicate timing considerations; this is just a taste of them.  The new paper also has many other figurative concepts, with illustrations.</p><p><H2> Open Problems </H2></p><p><p>
Do read Vijay&#8217;s paper. It is one of the clearest expositions of a graph algorithm&#8212;a model for others. Also the idea that Vijay went back to an ancient paper&#8212;over thirty years old&#8212;solely to write the definitive proof of its correctness is something we all should applaud.</p><p>
Of course the central problem in matching theory is still what is the best time for an algorithm that finds a maximum matching? Given the interest today in huge graphs that arise from social networks we will like a linear time algorithm. Is this possible? See <a href=\"http://www.or.uni-bonn.de/~hougardy/paper/23matching.pdf\">this</a> for some fast approximate algorithms.</p><p>
[added words \"on all paths\" to DDFS time requirement, name and word fixes and adds, permission for vintage Green Hornet/Lone Ranger artwork]</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11449/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11449/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11449&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/03/28/a-matchless-result/feed/") (slash:comments nil "8") (media:content ((url . "http://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/vijaygatech.jpg?w=209") (medium . "image")) (media:title ((type . "html")) "VijayGatech")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/match.png") (medium . "image")) (media:title ((type . "html")) "match")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/apps.png?w=334") (medium . "image")) (media:title ((type . "html")) "apps")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/beattyghranger.jpg?w=238") (medium . "image")) (media:title ((type . "html")) "BeattyGHRanger")))) ("Rabin Meets Lagrange" "<p><font color=\"”#0066cc?\"><br /><em> On Rabin’s recent talks at Tech </em><br /><font color=\"”#000000?\"></p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/unknown2.jpeg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/unknown2.jpeg?w=600\" alt=\"Unknown\"   class=\"alignright size-full wp-image-11441\" /></a></p><p>
Jeffrey Shallit is a computational number theorist, with many wonderful results. He is also well known for his work as an advocate for civil liberties on the Internet, and also against <a href=\"http://en.wikipedia.org/wiki/Intelligent_design\">intelligent design</a> (ID). Indeed he was at one point slated to testify in the 2005 Dover <a href=\"http://en.wikipedia.org/wiki/Kitzmiller_v._Dover\">case</a> until a stand-down by the ID side accomplished his purpose. Ken once used his <a href=\"http://www.talkreason.org/articles/eandsdembski.pdf\">survey</a> with Wesley Elsberry in a graduate seminar on cellular automata and various forms of complexity, not to say anything about ID, but just as a source of well-written definitions and relevant examples.</p><p>
Today I would like to talk about on Michael Rabin’s talks at Tech this week and their connection to Jeff.<br /><span id=\"more-11439\"></span></p><p>
Both of Rabin’s talks were great, no surprise. They were based on his recent <a href=\"http://cacm.acm.org/magazines/2014/2/171688-cryptography-miracles-secure-auctions-matching-problem-verification/fulltext\">paper</a> with Silvio Micali in February’s issue of the CACM. Rather than talk about details I will focus on one aspect that used a “trick” that I particularly liked, and thought I would share it with you. The trick is related to an old paper with Jeff.</p><p>
The paper <a href=\"http://dl.acm.org/citation.cfm?id=896095\">appears</a> on the ACM website with the first author named “J.O. Rabin.” Those are Jeff’s initials, with the ‘O’ interestingly standing for “Outlaw.” Michael also has ‘O’ as his middle initial, so it was an easier mistake to make. O well.</p><p><h2> Secret Straight-line Computations </h2><p><p>
Rabin showed, roughly, how to perform straight-line computation in a manner that keeps the values hidden from others. His computations allowed addition, multiplication, and comparison. The last is what I found quite interesting, since hiding ring operations is not too difficult, but hiding a highly non-linear operation like comparison seems quite different. Even multiplication while non-linear is bi-linear, and has a lot of linear structure that can be exploited. </p><p>
The basic approach is to use the <i>split value</i> representation of a number. A large prime <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is fixed, and all values <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> are represented by some pair <img src='http://s0.wp.com/latex.php?latex=%7B%28u%2Cv%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(u,v)}' title='{(u,v)}' class='latex' /> so that <img src='http://s0.wp.com/latex.php?latex=%7Bu+%2B+v+%3D+x+%5Cbmod+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{u + v = x &#92;bmod p}' title='{u + v = x &#92;bmod p}' class='latex' />. If the split is done randomly, then knowing one of the pair gives no information at all about the value of <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. This idea has been used before, of course, in many crypto protocols, often in multi-party protocols. Rabin’s work uses this method to make auctions secret. and does the same for electronic elections. See their paper for the details of what type of security he and Micali are able to achieve. </p><p>
Let’s go back to the comparison operation. In order to perform it using split pairs, Rabin needs to use Lagrange’s Four Square Theorem, which I state in a moment. The reason is that he can reduce comparison to the checking that some <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> is in a certain range, but he needs that the value of <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> not be too large. Lagrange’s theorem allows him to do that. </p><p><h2> Lagrange’s Theorem </h2><p><p>
Joseph Lagrange in 1770 proved the wonderful <a href=\"http://en.wikipedia.org/wiki/Lagrange's_four-square_theorem\">theorem</a>: </p><blockquote><p><b>Theorem: </b><em> Every natural number is the sum of four squares. </em></p></blockquote><p> Thus given <img src='http://s0.wp.com/latex.php?latex=%7Bx+%5Cge+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x &#92;ge 0}' title='{x &#92;ge 0}' class='latex' /> there are <img src='http://s0.wp.com/latex.php?latex=%7Ba%2Cb%2Cc%2Cd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a,b,c,d}' title='{a,b,c,d}' class='latex' /> so that
<p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++x+%3D+a%5E%7B2%7D+%2B+b%5E%7B2%7D+%2B+c%5E%7B2%7D+%2B+d%5E%7B2%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  x = a^{2} + b^{2} + c^{2} + d^{2}. ' title='&#92;displaystyle  x = a^{2} + b^{2} + c^{2} + d^{2}. ' class='latex' /></p><p> Note, some or all of <img src='http://s0.wp.com/latex.php?latex=%7Ba%2Cb%2Cc%2Cd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a,b,c,d}' title='{a,b,c,d}' class='latex' /> can be zero.</p><p>
There are two key ideas in Lagrange’s proof of his theorem. The first is that if <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> can both be written as a sum of four squares, then so can their product. </p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/euler.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/euler.png?w=300\" alt=\"euler\" width=\"300\" class=\"aligncenter  wp-image-11440\" /></a></p><p>
The second is that, therefore, one needs only to prove that every <b>prime number</b> can be written as a sum of four squares. But this can be done using properties of primes, and we are done.</p><p><h2> Effective Lagrange’s Theorem </h2><p><p>
Not quite. Over three hundred years later—1770 to 1985—the rules have changed. We now are interested not just in the existence of a representation of a number as the sum of four squares, but are interested in finding it efficiently. In this light Lagrange’s proof breaks down immediately, since he works on primes and therefore needs the factorization of <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> in order to find its representation as four squares. This means that his proof cannot directly lead to an efficient algorithm—one must avoid factorization.</p><p>
Enter our ‘O’ duo. In their paper from 1985 they devised a randomized algorithm that runs in polynomial time and finds a four square representation of a number <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. They actually given several proofs of this statement, including additional results about other representation theorems that they can make effective. Jeff himself <a href=\"http://mathoverflow.net/questions/110239/is-there-an-algorithm-for-writing-a-number-as-a-sum-of-three-squares/110278#110278\">commented</a> in a MathOverflow <a href=\"http://mathoverflow.net/questions/110239/is-there-an-algorithm-for-writing-a-number-as-a-sum-of-three-squares/\">item</a> on possible extensions, and their paper itself was <a href=\"http://math.stackexchange.com/questions/483101/rabin-and-shallit-algorithm\">outlined</a> on StackExchange last September.</p><p>
One method uses the following neat idea: Suppose that you want to represent <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> as the sum of four squares. Pick random squares <img src='http://s0.wp.com/latex.php?latex=%7Br%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r^{2}}' title='{r^{2}}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bs%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s^{2}}' title='{s^{2}}' class='latex' /> and assume that
<p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%09x+%3D+r%5E%7B2%7D+%2B+s%5E%7B2%7D+%2B+p+%5C+%5C+%28%2A%29%2C++&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle 	x = r^{2} + s^{2} + p &#92; &#92; (*),  ' title='&#92;displaystyle 	x = r^{2} + s^{2} + p &#92; &#92; (*),  ' class='latex' /></p><p> where <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is a prime that is congruent to <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> modulo <img src='http://s0.wp.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' />. The key is that such primes are always the sum of two squares. So they build a subroutine that can solve this problem in randomized polynomial time: they have a polynomial time procedure to find such a representation of <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> provided it is a prime. As usual the procedure could be lucky and still work if <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is composite. But if the procedure fails they pick new <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bs%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s}' title='{s}' class='latex' /> and try again. A deep and amazing theorem of Yuri Linnik shows that every <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> has many representations of the form (*). This leads to the main result.</p><p><h2> A Weak Lagrange Theorem </h2><p><p>
Suppose that we want to write <img src='http://s0.wp.com/latex.php?latex=%7Bx%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x&gt;0}' title='{x&gt;0}' class='latex' /> as the sum of a few squares, but perhaps more than four. The ‘few’ must be small because it affects the cost of other computations, and also we want finding the few to be efficient. We can use the Rabin-Shallit method which is more than fast enough. But there is a very simple direct method that I thought I would share.</p><p>
Let’s suppose that <img src='http://s0.wp.com/latex.php?latex=%7Bx%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x&gt;0}' title='{x&gt;0}' class='latex' /> and apply the “greedy” method—it is always a good idea to try the simplest ideas first.</p><p>
Set <img src='http://s0.wp.com/latex.php?latex=%7Bk%3D%5Clfloor+%5Csqrt%7Bx%7D+%5Crfloor%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k=&#92;lfloor &#92;sqrt{x} &#92;rfloor}' title='{k=&#92;lfloor &#92;sqrt{x} &#92;rfloor}' class='latex' />. Let <img src='http://s0.wp.com/latex.php?latex=%7By+%3D+x-k%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y = x-k^{2}}' title='{y = x-k^{2}}' class='latex' />. Then
<p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++0+%5Cle+y+%5Cle+x-k%5E%7B2%7D+%5Cle+x+-+%28%5Csqrt%7Bx%7D-1%29%5E%7B2%7D+%3D+2%5Csqrt%7Bx%7D%2B1.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  0 &#92;le y &#92;le x-k^{2} &#92;le x - (&#92;sqrt{x}-1)^{2} = 2&#92;sqrt{x}+1. ' title='&#92;displaystyle  0 &#92;le y &#92;le x-k^{2} &#92;le x - (&#92;sqrt{x}-1)^{2} = 2&#92;sqrt{x}+1. ' class='latex' /></p><p> Then repeat this on <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> until it is small enough to do by table lookup. The number of iterations is bounded by a double logarithm in <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. So this yields an expression for <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> as a sum of at most <img src='http://s0.wp.com/latex.php?latex=%7B%5Clog+%5Clog+x%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;log &#92;log x}' title='{&#92;log &#92;log x}' class='latex' /> squares. For the range used in Rabin’s applications this value is seven rather than four. </p><p><h2> Open Problems </h2><p><p>
I like the weak effective Lagrange Theorem. If anyone knows a reference for it I would like to know. Perhaps it can be used in some other algorithms because it is extremely fast. For an <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-bit number it finds the representation in time <img src='http://s0.wp.com/latex.php?latex=%7BO%28M%28n%29%5Clog+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(M(n)&#92;log n)}' title='{O(M(n)&#92;log n)}' class='latex' /> where <img src='http://s0.wp.com/latex.php?latex=%7BM%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M(n)}' title='{M(n)}' class='latex' /> is the time to perform multiplication, while Rabin-Shallit uses <img src='http://s0.wp.com/latex.php?latex=%7BO%28M%28n%29%28%5Clog+n%29%5E%7B2%7D%5Clog%5Clog+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(M(n)(&#92;log n)^{2}&#92;log&#92;log n)}' title='{O(M(n)(&#92;log n)^{2}&#92;log&#92;log n)}' class='latex' />.</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11439/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11439/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11439&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "http://rjlipton.wordpress.com/2014/03/23/rabin-meets-lagrange/" (21295 33376) new 5 nil nil ((title nil "Rabin Meets Lagrange") (link nil "http://rjlipton.wordpress.com/2014/03/23/rabin-meets-lagrange/") (comments nil "http://rjlipton.wordpress.com/2014/03/23/rabin-meets-lagrange/#comments") (pubDate nil "Mon, 24 Mar 2014 00:54:56 +0000") (dc:creator nil "rjlipton") (category nil "History") (category nil "People") (category nil "Proofs") (category nil "four squares") (category nil "Lagrange Theorem") (category nil "secret computation") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11439") (description nil "On Rabin&#8217;s recent talks at Tech Jeffrey Shallit is a computational number theorist, with many wonderful results. He is also well known for his work as an advocate for civil liberties on the Internet, and also against intelligent design (ID). Indeed he was at one point slated to testify in the 2005 Dover case until [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11439&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> On Rabin&#8217;s recent talks at Tech </em><br /><font color=\"”#000000?\"></p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/unknown2.jpeg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/unknown2.jpeg?w=600\" alt=\"Unknown\"   class=\"alignright size-full wp-image-11441\" /></a></p><p>
Jeffrey Shallit is a computational number theorist, with many wonderful results. He is also well known for his work as an advocate for civil liberties on the Internet, and also against <a href=\"http://en.wikipedia.org/wiki/Intelligent_design\">intelligent design</a> (ID). Indeed he was at one point slated to testify in the 2005 Dover <a href=\"http://en.wikipedia.org/wiki/Kitzmiller_v._Dover\">case</a> until a stand-down by the ID side accomplished his purpose. Ken once used his <a href=\"http://www.talkreason.org/articles/eandsdembski.pdf\">survey</a> with Wesley Elsberry in a graduate seminar on cellular automata and various forms of complexity, not to say anything about ID, but just as a source of well-written definitions and relevant examples.</p><p>
Today I would like to talk about on Michael Rabin&#8217;s talks at Tech this week and their connection to Jeff.<br /><span id=\"more-11439\"></span></p><p>
Both of Rabin&#8217;s talks were great, no surprise. They were based on his recent <a href=\"http://cacm.acm.org/magazines/2014/2/171688-cryptography-miracles-secure-auctions-matching-problem-verification/fulltext\">paper</a> with Silvio Micali in February&#8217;s issue of the CACM. Rather than talk about details I will focus on one aspect that used a &#8220;trick&#8221; that I particularly liked, and thought I would share it with you. The trick is related to an old paper with Jeff.</p><p>
The paper <a href=\"http://dl.acm.org/citation.cfm?id=896095\">appears</a> on the ACM website with the first author named &#8220;J.O. Rabin.&#8221; Those are Jeff&#8217;s initials, with the &#8216;O&#8217; interestingly standing for &#8220;Outlaw.&#8221; Michael also has &#8216;O&#8217; as his middle initial, so it was an easier mistake to make. O well.</p><p><h2> Secret Straight-line Computations </h2><p><p>
Rabin showed, roughly, how to perform straight-line computation in a manner that keeps the values hidden from others. His computations allowed addition, multiplication, and comparison. The last is what I found quite interesting, since hiding ring operations is not too difficult, but hiding a highly non-linear operation like comparison seems quite different. Even multiplication while non-linear is bi-linear, and has a lot of linear structure that can be exploited. </p><p>
The basic approach is to use the <i>split value</i> representation of a number. A large prime <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is fixed, and all values <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> are represented by some pair <img src='http://s0.wp.com/latex.php?latex=%7B%28u%2Cv%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(u,v)}' title='{(u,v)}' class='latex' /> so that <img src='http://s0.wp.com/latex.php?latex=%7Bu+%2B+v+%3D+x+%5Cbmod+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{u + v = x &#92;bmod p}' title='{u + v = x &#92;bmod p}' class='latex' />. If the split is done randomly, then knowing one of the pair gives no information at all about the value of <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. This idea has been used before, of course, in many crypto protocols, often in multi-party protocols. Rabin&#8217;s work uses this method to make auctions secret. and does the same for electronic elections. See their paper for the details of what type of security he and Micali are able to achieve. </p><p>
Let&#8217;s go back to the comparison operation. In order to perform it using split pairs, Rabin needs to use Lagrange&#8217;s Four Square Theorem, which I state in a moment. The reason is that he can reduce comparison to the checking that some <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> is in a certain range, but he needs that the value of <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> not be too large. Lagrange&#8217;s theorem allows him to do that. </p><p><h2> Lagrange&#8217;s Theorem </h2><p><p>
Joseph Lagrange in 1770 proved the wonderful <a href=\"http://en.wikipedia.org/wiki/Lagrange's_four-square_theorem\">theorem</a>: </p><blockquote><p><b>Theorem: </b><em> Every natural number is the sum of four squares. </em></p></blockquote><p> Thus given <img src='http://s0.wp.com/latex.php?latex=%7Bx+%5Cge+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x &#92;ge 0}' title='{x &#92;ge 0}' class='latex' /> there are <img src='http://s0.wp.com/latex.php?latex=%7Ba%2Cb%2Cc%2Cd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a,b,c,d}' title='{a,b,c,d}' class='latex' /> so that
<p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++x+%3D+a%5E%7B2%7D+%2B+b%5E%7B2%7D+%2B+c%5E%7B2%7D+%2B+d%5E%7B2%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  x = a^{2} + b^{2} + c^{2} + d^{2}. ' title='&#92;displaystyle  x = a^{2} + b^{2} + c^{2} + d^{2}. ' class='latex' /></p><p> Note, some or all of <img src='http://s0.wp.com/latex.php?latex=%7Ba%2Cb%2Cc%2Cd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a,b,c,d}' title='{a,b,c,d}' class='latex' /> can be zero.</p><p>
There are two key ideas in Lagrange&#8217;s proof of his theorem. The first is that if <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> can both be written as a sum of four squares, then so can their product. </p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/euler.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/euler.png?w=300\" alt=\"euler\" width=\"300\" class=\"aligncenter  wp-image-11440\" /></a></p><p>
The second is that, therefore, one needs only to prove that every <b>prime number</b> can be written as a sum of four squares. But this can be done using properties of primes, and we are done.</p><p><h2> Effective Lagrange&#8217;s Theorem </h2><p><p>
Not quite. Over three hundred years later&#8212;1770 to 1985&#8212;the rules have changed. We now are interested not just in the existence of a representation of a number as the sum of four squares, but are interested in finding it efficiently. In this light Lagrange&#8217;s proof breaks down immediately, since he works on primes and therefore needs the factorization of <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> in order to find its representation as four squares. This means that his proof cannot directly lead to an efficient algorithm&#8212;one must avoid factorization.</p><p>
Enter our &#8216;O&#8217; duo. In their paper from 1985 they devised a randomized algorithm that runs in polynomial time and finds a four square representation of a number <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. They actually given several proofs of this statement, including additional results about other representation theorems that they can make effective. Jeff himself <a href=\"http://mathoverflow.net/questions/110239/is-there-an-algorithm-for-writing-a-number-as-a-sum-of-three-squares/110278#110278\">commented</a> in a MathOverflow <a href=\"http://mathoverflow.net/questions/110239/is-there-an-algorithm-for-writing-a-number-as-a-sum-of-three-squares/\">item</a> on possible extensions, and their paper itself was <a href=\"http://math.stackexchange.com/questions/483101/rabin-and-shallit-algorithm\">outlined</a> on StackExchange last September.</p><p>
One method uses the following neat idea: Suppose that you want to represent <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> as the sum of four squares. Pick random squares <img src='http://s0.wp.com/latex.php?latex=%7Br%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r^{2}}' title='{r^{2}}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bs%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s^{2}}' title='{s^{2}}' class='latex' /> and assume that
<p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%09x+%3D+r%5E%7B2%7D+%2B+s%5E%7B2%7D+%2B+p+%5C+%5C+%28%2A%29%2C++&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle 	x = r^{2} + s^{2} + p &#92; &#92; (*),  ' title='&#92;displaystyle 	x = r^{2} + s^{2} + p &#92; &#92; (*),  ' class='latex' /></p><p> where <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is a prime that is congruent to <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> modulo <img src='http://s0.wp.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' />. The key is that such primes are always the sum of two squares. So they build a subroutine that can solve this problem in randomized polynomial time: they have a polynomial time procedure to find such a representation of <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> provided it is a prime. As usual the procedure could be lucky and still work if <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is composite. But if the procedure fails they pick new <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bs%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s}' title='{s}' class='latex' /> and try again. A deep and amazing theorem of Yuri Linnik shows that every <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> has many representations of the form (*). This leads to the main result.</p><p><h2> A Weak Lagrange Theorem </h2><p><p>
Suppose that we want to write <img src='http://s0.wp.com/latex.php?latex=%7Bx%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x&gt;0}' title='{x&gt;0}' class='latex' /> as the sum of a few squares, but perhaps more than four. The &#8216;few&#8217; must be small because it affects the cost of other computations, and also we want finding the few to be efficient. We can use the Rabin-Shallit method which is more than fast enough. But there is a very simple direct method that I thought I would share.</p><p>
Let&#8217;s suppose that <img src='http://s0.wp.com/latex.php?latex=%7Bx%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x&gt;0}' title='{x&gt;0}' class='latex' /> and apply the &#8220;greedy&#8221; method&#8212;it is always a good idea to try the simplest ideas first.</p><p>
Set <img src='http://s0.wp.com/latex.php?latex=%7Bk%3D%5Clfloor+%5Csqrt%7Bx%7D+%5Crfloor%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k=&#92;lfloor &#92;sqrt{x} &#92;rfloor}' title='{k=&#92;lfloor &#92;sqrt{x} &#92;rfloor}' class='latex' />. Let <img src='http://s0.wp.com/latex.php?latex=%7By+%3D+x-k%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y = x-k^{2}}' title='{y = x-k^{2}}' class='latex' />. Then
<p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++0+%5Cle+y+%5Cle+x-k%5E%7B2%7D+%5Cle+x+-+%28%5Csqrt%7Bx%7D-1%29%5E%7B2%7D+%3D+2%5Csqrt%7Bx%7D%2B1.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  0 &#92;le y &#92;le x-k^{2} &#92;le x - (&#92;sqrt{x}-1)^{2} = 2&#92;sqrt{x}+1. ' title='&#92;displaystyle  0 &#92;le y &#92;le x-k^{2} &#92;le x - (&#92;sqrt{x}-1)^{2} = 2&#92;sqrt{x}+1. ' class='latex' /></p><p> Then repeat this on <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> until it is small enough to do by table lookup. The number of iterations is bounded by a double logarithm in <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. So this yields an expression for <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> as a sum of at most <img src='http://s0.wp.com/latex.php?latex=%7B%5Clog+%5Clog+x%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;log &#92;log x}' title='{&#92;log &#92;log x}' class='latex' /> squares. For the range used in Rabin&#8217;s applications this value is seven rather than four. </p><p><h2> Open Problems </h2><p><p>
I like the weak effective Lagrange Theorem. If anyone knows a reference for it I would like to know. Perhaps it can be used in some other algorithms because it is extremely fast. For an <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-bit number it finds the representation in time <img src='http://s0.wp.com/latex.php?latex=%7BO%28M%28n%29%5Clog+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(M(n)&#92;log n)}' title='{O(M(n)&#92;log n)}' class='latex' /> where <img src='http://s0.wp.com/latex.php?latex=%7BM%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M(n)}' title='{M(n)}' class='latex' /> is the time to perform multiplication, while Rabin-Shallit uses <img src='http://s0.wp.com/latex.php?latex=%7BO%28M%28n%29%28%5Clog+n%29%5E%7B2%7D%5Clog%5Clog+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(M(n)(&#92;log n)^{2}&#92;log&#92;log n)}' title='{O(M(n)(&#92;log n)^{2}&#92;log&#92;log n)}' class='latex' />.</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11439/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11439/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11439&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/03/23/rabin-meets-lagrange/feed/") (slash:comments nil "0") (media:content ((url . "http://1.gravatar.com/avatar/afaa664a052777146630095c596117b2?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "lipton")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/unknown2.jpeg") (medium . "image")) (media:title ((type . "html")) "Unknown")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/euler.png") (medium . "image")) (media:title ((type . "html")) "euler")))) ("The Power Of ACC" "<p><font color=\"”#0066cc?\"><br /><em> Euler’s back-door pass to Gauss sinks a bucket </em><br /><font color=\"”#000000?\"></p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/acc-basketball-hand-640_20111109111225_640_480.jpg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/acc-basketball-hand-640_20111109111225_640_480.jpg?w=200&h=150\" alt=\"ACC-basketball-hand-640_20111109111225_640_480\" width=\"200\" height=\"150\" class=\"alignright wp-image-11432\" /></a></p><p>
ACC stands for the Atlantic Coast Conference, which is an athletic organization that contains Georgia Tech and fourteen other colleges. In basketball, the top several teams in the ACC qualified for the NCAA championship tournament, which started today. We call the NCAA tournament “March Madness” because the opening rounds have games being shown on national TV seemingly every hour of every day, and often some spectacular upsets happen. Indeed Harvard has just beaten a favored University of Cincinnati team. </p><p>
Today I want talk about another ACC: our own complexity class.<span id=\"more-11431\"></span></p><p>
Recall that <a href=\"http://en.wikipedia.org/wiki/ACC0\">ACC</a>, as a complexity class, is the class of Boolean functions computed by boolean circuits of constant depth and polynomial size, and the gates include <i>modular</i> gates that can count the number of <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> inputs modulo a fixed constant. This class is quite mysterious. It could be very powerful, yet we do not even know if it contains the majority function.</p><p><p>
Alas the ACC qualifiers for the men’s tournament did not contain Georgia Tech, for our men’s team had a losing record this year.  Our women’s team, however, played well enough to receive an at-large entry into the NCAA Women’s championship, which is staggered two days after the men and so begins Saturday.  No Buffalo team made either.  The tournaments run through April 7 and 8.  Go Yellow Jackets.</p><p><H2> The Problem </H2></p><p><p>
Suppose you have a number <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' />. Now I give you an <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-bit prime number <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and ask that you check whether <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a quadratic residue modulo <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />. Recall that means that there is a <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> such that 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++a+%5Cequiv+b%5E%7B2%7D+%5Cbmod+p.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  a &#92;equiv b^{2} &#92;bmod p. ' title='&#92;displaystyle  a &#92;equiv b^{2} &#92;bmod p. ' class='latex' /></p><p>
This is the problem we are interested in solving with an ACC circuit. Note that it is a <a href=\"http://en.wikipedia.org/wiki/Promise_problem\">promise problem</a>—we only ask that your computation works when the input number <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is a prime.</p><p><p><H2> An Approach </H2></p><p>
An obvious idea is to use the famous <a href=\"http://en.wikipedia.org/wiki/Euler's_criterion\">Euler criterion</a>, which says that <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a quadratic residue if and only if 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++a%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D+%5Cequiv+1+%5Cbmod+p.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  a^{&#92;frac{p-1}{2}} &#92;equiv 1 &#92;bmod p. ' title='&#92;displaystyle  a^{&#92;frac{p-1}{2}} &#92;equiv 1 &#92;bmod p. ' class='latex' /></p><p>
Thus we need only raise <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> to a power by repeated squaring and so on. The trouble, of course, is that we do not know whether ACC can do the required repeated multiplication. </p><p><p><H2> Another Approach </H2></p><p><p>
Now let’s expressly state that <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is bounded in size by some constant. Still the Euler approach looks hopeless. But there is a deep theorem of number theory that comes to the rescue: <a href=\"http://en.wikipedia.org/wiki/Quadratic_reciprocity\">quadratic reciprocity</a>. Define the <a href=\"http://en.wikipedia.org/wiki/Legendre_symbol\">Legendre symbol</a></p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' title='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' class='latex' /></p><p>
as the value <img src='http://s0.wp.com/latex.php?latex=%7B+a%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D+%5Cbmod+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{ a^{&#92;frac{p-1}{2}} &#92;bmod p}' title='{ a^{&#92;frac{p-1}{2}} &#92;bmod p}' class='latex' /> where <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is a prime. Note it is always <img src='http://s0.wp.com/latex.php?latex=%7B-1%2C0%2C%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{-1,0,+1}' title='{-1,0,+1}' class='latex' />: it is only <img src='http://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' /> when <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> divides <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' />. Thus our problem is to compute 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' title='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' class='latex' /></p><p>
for <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> an input and <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> bounded in size. </p><p>
This is in ACC. The key is we can use the deep quadratic reciprocity <a href=\"http://en.wikipedia.org/wiki/Quadratic_reciprocity\">theorem</a> which says that 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Bp%7D%7Bq%7D+%5Cright%29+%5Cleft%28+%5Cfrac%7Bq%7D%7Bp%7D+%5Cright%29+%3D+%28-1%29%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D%28-1%29%5E%7B%5Cfrac%7Bq-1%7D%7B2%7D%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{p}{q} &#92;right) &#92;left( &#92;frac{q}{p} &#92;right) = (-1)^{&#92;frac{p-1}{2}}(-1)^{&#92;frac{q-1}{2}}, ' title='&#92;displaystyle  &#92;left( &#92;frac{p}{q} &#92;right) &#92;left( &#92;frac{q}{p} &#92;right) = (-1)^{&#92;frac{p-1}{2}}(-1)^{&#92;frac{q-1}{2}}, ' class='latex' /></p><p>
where <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> are primes. The theorem was conjectured by Leonhard Euler and Adrien-Marie Legendre, but finally proved by Carl Gauss. He referred to it as “the fundamental theorem” and wrote:  </p><blockquote><p>
The fundamental theorem must certainly be regarded as one of the most elegant of its type.
</p></blockquote><p>
So how do we proceed? Suppose first that the constant <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a prime. Then we know by reciprocity that 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+%5Cleft%28+%5Cfrac%7Bp%7D%7Ba%7D+%5Cright%29+%3D+%28-1%29%5E%7B%5Cfrac%7Ba-1%7D%7B2%7D%7D%28-1%29%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{p}{a} &#92;right) = (-1)^{&#92;frac{a-1}{2}}(-1)^{&#92;frac{p-1}{2}}. ' title='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{p}{a} &#92;right) = (-1)^{&#92;frac{a-1}{2}}(-1)^{&#92;frac{p-1}{2}}. ' class='latex' /></p><p>
The right-hand side is easy to compute in ACC. To determine it we need only compute <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />‘s residue modulo <img src='http://s0.wp.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' />. Since <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is given in binary this is trivial. Thus, all reduces to the computation of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cleft%28+%5Cfrac%7Bp%7D%7Ba%7D+%5Cright%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;left( &#92;frac{p}{a} &#92;right)}' title='{&#92;left( &#92;frac{p}{a} &#92;right)}' class='latex' />. The key is that the Legendre symbol only depends on the value of <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> modulo <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' />. Since we can do this in ACC we are done for the case when <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a prime.</p><p>
When <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is composite we use one simple fact about the Legendre symbol that follows directly from its definition. 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Bab%7D%7Bp%7D+%5Cright%29+%3D+%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+%5Cleft%28+%5Cfrac%7Bb%7D%7Bp%7D+%5Cright%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{ab}{p} &#92;right) = &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{b}{p} &#92;right). ' title='&#92;displaystyle  &#92;left( &#92;frac{ab}{p} &#92;right) = &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{b}{p} &#92;right). ' class='latex' /></p><p>
Thus we can use the case where <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is prime multiple times. </p><p><p><H2> Open Problems </H2></p><p><p>
The Legendre symbol for bounded <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is thus in ACC—the complexity class, not the conference. The rationale for this discussion is two-fold. One it shows that obvious approaches to a problem may sometimes be avoided by deep mathematics. Is this possible to do the same for other problems that we care about? The permanent, for example? Another rationale is the perennially important open problem: what can ACC actually compute? It may be hard to resolve the majority function, but perhaps other functions can be shown to be in ACC. Good luck thinking about this.</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11431/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11431/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11431&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "http://rjlipton.wordpress.com/2014/03/20/the-power-of-acc/" (21291 24649) new 6 nil nil ((title nil "The Power Of ACC") (link nil "http://rjlipton.wordpress.com/2014/03/20/the-power-of-acc/") (comments nil "http://rjlipton.wordpress.com/2014/03/20/the-power-of-acc/#comments") (pubDate nil "Thu, 20 Mar 2014 21:40:25 +0000") (dc:creator nil "Pip") (category nil "All Posts") (category nil "Ideas") (category nil "ACC") (category nil "boolean") (category nil "circuits") (category nil "complexity") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11431") (description nil "Euler&#8217;s back-door pass to Gauss sinks a bucket ACC stands for the Atlantic Coast Conference, which is an athletic organization that contains Georgia Tech and fourteen other colleges. In basketball, the top several teams in the ACC qualified for the NCAA championship tournament, which started today. We call the NCAA tournament &#8220;March Madness&#8221; because the [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11431&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Euler&#8217;s back-door pass to Gauss sinks a bucket </em><br /><font color=\"”#000000?\"></p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/acc-basketball-hand-640_20111109111225_640_480.jpg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/acc-basketball-hand-640_20111109111225_640_480.jpg?w=200&#038;h=150\" alt=\"ACC-basketball-hand-640_20111109111225_640_480\" width=\"200\" height=\"150\" class=\"alignright wp-image-11432\" /></a></p><p>
ACC stands for the Atlantic Coast Conference, which is an athletic organization that contains Georgia Tech and fourteen other colleges. In basketball, the top several teams in the ACC qualified for the NCAA championship tournament, which started today. We call the NCAA tournament &#8220;March Madness&#8221; because the opening rounds have games being shown on national TV seemingly every hour of every day, and often some spectacular upsets happen. Indeed Harvard has just beaten a favored University of Cincinnati team. </p><p>
Today I want talk about another ACC: our own complexity class.<span id=\"more-11431\"></span></p><p>
Recall that <a href=\"http://en.wikipedia.org/wiki/ACC0\">ACC</a>, as a complexity class, is the class of Boolean functions computed by boolean circuits of constant depth and polynomial size, and the gates include <i>modular</i> gates that can count the number of <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> inputs modulo a fixed constant. This class is quite mysterious. It could be very powerful, yet we do not even know if it contains the majority function.</p><p><p>
Alas the ACC qualifiers for the men&#8217;s tournament did not contain Georgia Tech, for our men&#8217;s team had a losing record this year.  Our women&#8217;s team, however, played well enough to receive an at-large entry into the NCAA Women&#8217;s championship, which is staggered two days after the men and so begins Saturday.  No Buffalo team made either.  The tournaments run through April 7 and 8.  Go Yellow Jackets.</p><p><H2> The Problem </H2></p><p><p>
Suppose you have a number <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' />. Now I give you an <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-bit prime number <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and ask that you check whether <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a quadratic residue modulo <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />. Recall that means that there is a <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> such that 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++a+%5Cequiv+b%5E%7B2%7D+%5Cbmod+p.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  a &#92;equiv b^{2} &#92;bmod p. ' title='&#92;displaystyle  a &#92;equiv b^{2} &#92;bmod p. ' class='latex' /></p><p>
This is the problem we are interested in solving with an ACC circuit. Note that it is a <a href=\"http://en.wikipedia.org/wiki/Promise_problem\">promise problem</a>&#8212;we only ask that your computation works when the input number <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is a prime.</p><p><p><H2> An Approach </H2></p><p>
An obvious idea is to use the famous <a href=\"http://en.wikipedia.org/wiki/Euler's_criterion\">Euler criterion</a>, which says that <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a quadratic residue if and only if 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++a%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D+%5Cequiv+1+%5Cbmod+p.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  a^{&#92;frac{p-1}{2}} &#92;equiv 1 &#92;bmod p. ' title='&#92;displaystyle  a^{&#92;frac{p-1}{2}} &#92;equiv 1 &#92;bmod p. ' class='latex' /></p><p>
Thus we need only raise <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> to a power by repeated squaring and so on. The trouble, of course, is that we do not know whether ACC can do the required repeated multiplication. </p><p><p><H2> Another Approach </H2></p><p><p>
Now let&#8217;s expressly state that <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is bounded in size by some constant. Still the Euler approach looks hopeless. But there is a deep theorem of number theory that comes to the rescue: <a href=\"http://en.wikipedia.org/wiki/Quadratic_reciprocity\">quadratic reciprocity</a>. Define the <a href=\"http://en.wikipedia.org/wiki/Legendre_symbol\">Legendre symbol</a></p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' title='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' class='latex' /></p><p>
as the value <img src='http://s0.wp.com/latex.php?latex=%7B+a%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D+%5Cbmod+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{ a^{&#92;frac{p-1}{2}} &#92;bmod p}' title='{ a^{&#92;frac{p-1}{2}} &#92;bmod p}' class='latex' /> where <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is a prime. Note it is always <img src='http://s0.wp.com/latex.php?latex=%7B-1%2C0%2C%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{-1,0,+1}' title='{-1,0,+1}' class='latex' />: it is only <img src='http://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' /> when <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> divides <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' />. Thus our problem is to compute 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' title='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' class='latex' /></p><p>
for <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> an input and <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> bounded in size. </p><p>
This is in ACC. The key is we can use the deep quadratic reciprocity <a href=\"http://en.wikipedia.org/wiki/Quadratic_reciprocity\">theorem</a> which says that 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Bp%7D%7Bq%7D+%5Cright%29+%5Cleft%28+%5Cfrac%7Bq%7D%7Bp%7D+%5Cright%29+%3D+%28-1%29%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D%28-1%29%5E%7B%5Cfrac%7Bq-1%7D%7B2%7D%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{p}{q} &#92;right) &#92;left( &#92;frac{q}{p} &#92;right) = (-1)^{&#92;frac{p-1}{2}}(-1)^{&#92;frac{q-1}{2}}, ' title='&#92;displaystyle  &#92;left( &#92;frac{p}{q} &#92;right) &#92;left( &#92;frac{q}{p} &#92;right) = (-1)^{&#92;frac{p-1}{2}}(-1)^{&#92;frac{q-1}{2}}, ' class='latex' /></p><p>
where <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> are primes. The theorem was conjectured by Leonhard Euler and Adrien-Marie Legendre, but finally proved by Carl Gauss. He referred to it as &#8220;the fundamental theorem&#8221; and wrote:  </p><blockquote><p>
The fundamental theorem must certainly be regarded as one of the most elegant of its type.
</p></blockquote><p>
So how do we proceed? Suppose first that the constant <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a prime. Then we know by reciprocity that 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+%5Cleft%28+%5Cfrac%7Bp%7D%7Ba%7D+%5Cright%29+%3D+%28-1%29%5E%7B%5Cfrac%7Ba-1%7D%7B2%7D%7D%28-1%29%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{p}{a} &#92;right) = (-1)^{&#92;frac{a-1}{2}}(-1)^{&#92;frac{p-1}{2}}. ' title='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{p}{a} &#92;right) = (-1)^{&#92;frac{a-1}{2}}(-1)^{&#92;frac{p-1}{2}}. ' class='latex' /></p><p>
The right-hand side is easy to compute in ACC. To determine it we need only compute <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />&#8216;s residue modulo <img src='http://s0.wp.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' />. Since <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is given in binary this is trivial. Thus, all reduces to the computation of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cleft%28+%5Cfrac%7Bp%7D%7Ba%7D+%5Cright%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;left( &#92;frac{p}{a} &#92;right)}' title='{&#92;left( &#92;frac{p}{a} &#92;right)}' class='latex' />. The key is that the Legendre symbol only depends on the value of <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> modulo <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' />. Since we can do this in ACC we are done for the case when <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a prime.</p><p>
When <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is composite we use one simple fact about the Legendre symbol that follows directly from its definition. 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Bab%7D%7Bp%7D+%5Cright%29+%3D+%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+%5Cleft%28+%5Cfrac%7Bb%7D%7Bp%7D+%5Cright%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{ab}{p} &#92;right) = &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{b}{p} &#92;right). ' title='&#92;displaystyle  &#92;left( &#92;frac{ab}{p} &#92;right) = &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{b}{p} &#92;right). ' class='latex' /></p><p>
Thus we can use the case where <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is prime multiple times. </p><p><p><H2> Open Problems </H2></p><p><p>
The Legendre symbol for bounded <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is thus in ACC&#8212;the complexity class, not the conference. The rationale for this discussion is two-fold. One it shows that obvious approaches to a problem may sometimes be avoided by deep mathematics. Is this possible to do the same for other problems that we care about? The permanent, for example? Another rationale is the perennially important open problem: what can ACC actually compute? It may be hard to resolve the majority function, but perhaps other functions can be shown to be in ACC. Good luck thinking about this.</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11431/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11431/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11431&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/03/20/the-power-of-acc/feed/") (slash:comments nil "10") (media:content ((url . "http://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/acc-basketball-hand-640_20111109111225_640_480.jpg?w=300") (medium . "image")) (media:title ((type . "html")) "ACC-basketball-hand-640_20111109111225_640_480")))) ("Happy St. Patrick’s Day 2014" "<p><font color=\"”#0066cc?\"><br /><em> A shocking story from our friendly Leprechaun </em><br /><font color=\"”#000000?\"><br /><font color=\"”#00D700\"></p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/unknown1.jpeg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/unknown1.jpeg?w=177&h=186\" alt=\"Unknown\" width=\"177\" height=\"186\" class=\"alignright  wp-image-11397\" /></a></p><p>
Neil L. is not a computer scientist—he is a Leprechaun. He has visited me every year since I started writing GLL, always visiting on St. Patrick’s day.</p><p>
Today I want to report on what happened this year.<br /><span id=\"more-11394\"></span></p><p>
Days ago I received a email from him—a first. It said:</p><blockquote><p><FONT FACE=\"veranda, arial\"><br />
If you agree to not catch me, I will be at your place at 12:01am Monday. Neil L.<br /></FONT></p></blockquote><p>
One <a href=\"http://rjlipton.wordpress.com/2011/03/17/happy-st-patricks-day-again-again/\">year</a> I did catch him, affording me three wishes. I thought I would get some of the secrets of the universe, but he outsmarted me. </p><p>
I replied back that yes I would stop trying to catch him. I got no reply. In any event I decided I would stay up late Sunday night and see if he would appear.</p><p>
Just after midnight I smelled a pungent odor, then saw a puff of green smoke, and there was Neil L. standing before me. His pipe in his mouth was putting out that green smoke, which has a strong but surprisingly pleasant smell. My dad was a pipe smoker when I was young, quitting later in life—of course his tobacco smoke was never green.</p><p>
Neil said, “Good day to you on this fine St. Patrick’s Day. I read your reply, quite clever.” I responded that I did not think I was being clever at all. Neil smiled, took another puff, and said “Come on—saying I will not <i>try</i> to catch you—come now.” He added that I must promise <i>not</i> to catch him. I nodded back yes, and he sat down on a chair across from where I was sitting. His short legs dangled off the floor.</p><p><h2> Neil’s Answer </h2><p><p>
We sat there for a moment in silence, then as I was about to speak, he interrupted and said, “I will answer ye any one question, no tricks, straight up.” I looked back surprised and figured that I had nothing to lose so I asked <em>the</em> question, </p><blockquote><p>
Is P=NP?
</p></blockquote><p>
Neil puffed away for quite a while and then said, “I appreciate your not trying to be tricky with your question. I could answer of course no, since the letters ‘P’ and ‘NP’ are different. But I will be straightforward with you. No teasing, no games today.” I was excited, perhaps I would finally know the answer. </p><p>
He added, “I could make you swear that you cannot repeat this to anyone, but I do not need to, for none will believe ye.” I said OK, so what is the answer? Neil smiled and said:</p><blockquote><p>
“We have not yet determined the answer. That’s the truth. No tricks. I swear as a Leprechaun, may you find all my gold coins if I lie.”
</p></blockquote><p>
I thought, what does that mean? <i>Not determined yet?</i> A mathematical statement is either true or it’s false. No tricks.</p><p><h2> Neil’s Explanation </h2><p><p>
I asked what did he mean by “not yet determined?” Either P=NP or P&ne;NP, I responded. Neil smiled and said that he would explain. He said:</p><blockquote><p>
“You live in a world that is really a simulation. We control it all.”
</p></blockquote><p>
I looked at him, thinking this was another trick. Neil registered my shock and added: “Yes it must be hard for you to believe, but it is true. How else can you explain a Leprechaun that appears and disappears.” With that he puffed some more on his pipe and laughed and added, “I told you no one will believe ye.”</p><p>
Okay I said, could he explain what he meant by “not yet determined”?  He nodded yes. “The simulation mostly runs itself quite well, but there are situations where it gets stuck and the committee of seven then step in and decide what it should do.”</p><p>
I asked what is the ‘committee of seven’? He answered, “It is a group of over fifty-seven wise ones who are tasked with maintaining the simulation and fixing any unexpected problems. We cannot be expected to have foreseen all possible situations, so they are the ones who decide things.” Another puff and more green smoke, and he continued, “Don’t even ask why it’s the committee of seven, it’s too long a story.”</p><p>
I finally laughed and said that this was his best visit ever—what a silly story. I told him that I did not believe a word of it. Neil looked at me and said he understood, yet he could give me some “proof.” I said that would be great.</p><p><h2> Neil’s Proof </h2><p><p>
Neil answered, “Look I know it is hard for ye to believe, but I will give ye examples of why it is true.” The first he gave is that in ancient times there were more miracles and strange occurrences, including demons and the like. Did I not agree? I said that that was the folklore but… He interrupted and said “Ay—that was when we first began to run the simulation; we were new at it and made mistakes. We are much better today. Much.”</p><p>
I started to say yes, nothing like that happens today, but Neil waved me off and said, “we don’t make errors but we still have fun—especially with your sports.” I gave him a cold stare, but he continued: “You are a fan of sailing, if I recall. What are the odds of coming back from 8–1 down in a best-of-9 series?” He was talking about the Oracle US team’s <a href=\"http://www.dailymail.co.uk/sport/othersports/article-2432966/Sir-Ben-Ainslies-Americas-Cup-win-greatest-sporting-comeback-time.html\">comeback</a> in last September’s America’s Cup final. I rounded the simple coin-flip answer: “About 250–1 against, more since they looked badly beaten.” Neil asked whether there had been anywhere near 250 final series since the America’s Cup began, and needed no answer from me as he puffed with a grin.</p><table style=\"margin:auto;\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/03/ainslietshirt.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/ainslietshirt.png?w=300\" alt=\"AinslieTshirt\" width=\"300\" class=\"aligncenter  wp-image-11403\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Commercial T-shirt <a href=\"http://stpatricksdaytee.com/view/1255850/ainslie-o-ainslie-irish-for-a-day-st-patrick-day-t-shirt\">source</a><br /></FONT></td></tr></table><p>“Do you mess with bookies?” I blurted out, then felt ashamed for incivility.  But Neil leaned forward with a hand gesture and hush for my attention: “The simulation gives us a budget of improbability, and by the Rule of Improbability we have only a tiny window to deviate. But we are free to choose which improbable events happen to maximize our fun, so long as we do not also violate the Rule of Indistinguishability.” Without even pausing for my query, he went on: “That Rule is the same one you use in defining <a href=\"http://en.wikipedia.org/wiki/Zero-knowledge_proof#Variants_of_zero-knowledge\">computational zero knowledge</a>—we can prove things to you, but it would take you too much effort to prove our tricks to a third party. To keep it, we put much effort into <em>not</em> messing with things. For instance our simulator had to work hard this weekend to calculate the true odds and allowances for Warren Buffett’s $1,000,000,000 <a href=\"http://www.nytimes.com/2014/03/16/sports/ncaabasketball/mathematicians-are-hoping-their-calculations-add-up-to-the-perfect-bracket.html?_r=0\">Bracket Challenge</a>, but we’re all set for “March Madness” now.”</p><p>
I asked if they could mess with physics, and he told me about a third rule: “The Rule of Consistency is that we may not overturn any past experimental results once their confidence has gone beyond <a href=\"http://news.discovery.com/space/big-bang-theorist-told-of-gravitational-wave-discovery-video-140317.htm\">5 sigma</a>.” Of course humanity has only had the 5-sigma rule for declaring things like the Higgs Boson or primordial gravity waves to exist for a short time, so I asked what about physics in the past. Neil continued, “I know nothing about this, but there was a problem with something called beta-decay.” I jumped in and said: yes there is a surprising effect—it is one of few physical <a href=\"http://en.wikipedia.org/wiki/Weak_interaction\">effects</a> ever discovered that tells left from right. Neil added, “Yes that is it. Some fool made a mistake and caused that to happen. Once it got into the world the committee thought it was fun to have it. A kind of insider joke. Of course it meant we had to re-program the physics part of the simulator to compute using Dirac notation, long before Dirac invented it.”</p><p><h2> The Meta Question </h2><p><p>
I was still numb from the story—it could not be true? Yet. What he just said about “programming” made me realize, surely the laws of computability and complexity must apply to them too. Now I knew I had him, so I asked:</p><blockquote><p>
Surely P=NP must have an answer in your world—which your committee is subject to. What is the answer there?
</p></blockquote><p>
Neil answered calmly, “As I said, it is not yet determined.”</p><p>
I expostulated, “Not yet determined for <em>us</em> you said. But surely it is determined for <em>them</em>.”</p><p>
A little patronizingly Neil replied, “Nay me lad. By me honor, when I said it is not yet determined I spoke true. I did say there are over fifty-seven on the committee of seven. We cannot violate consistency amongst ourselves for a mathematical proposition.”</p><p>
I remembered from writing our recent simulation <a href=\"http://rjlipton.wordpress.com/2014/02/22/the-evil-genius/\">post</a> that people who live in simulations would write their own simulations that other people could live in, <em>ad-infinitum</em> all the way down. For Neil to be right it could be infinities all the way up too. Then I realized, “Ah—I see why you said ‘over fifty-seven’ before: there’s you plus your committee of 7, then each of those is subject to a committee of 7, so <img src='http://s0.wp.com/latex.php?latex=%7B1+%2B+7+%2B+7%5E2+%3D+57%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1 + 7 + 7^2 = 57}' title='{1 + 7 + 7^2 = 57}' class='latex' /> and it goes on from there. But how can there be infinitely many leprechauns?”</p><p>
To my surprise he gave a pained start: “Ay, ye have catched me in a secret, and ye did not try to—it was me saying too much. So I must now tell ye exactly how many leprechauns we are, and it will prove to ye what I said about your mathematics.” I stood as he stood up as if to leave, and I saw he was really a little guy, only <img src='http://s0.wp.com/latex.php?latex=%7B1%2F12%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1/12}' title='{1/12}' class='latex' /> my size. Neil spoke once more as his pipe puffed mightily.</p><blockquote><p>
“We have other committees and hierarchies with other numbers, so our total is the sum of all the natural numbers <img src='http://s0.wp.com/latex.php?latex=%7B1+%2B+2+%2B+3+%2B+4+%2B+5+%2B+6+%2B+7+%2B+%5Ccdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{1 + 2 + 3 + 4 + 5 + 6 + 7 + &#92;cdots}' title='{1 + 2 + 3 + 4 + 5 + 6 + 7 + &#92;cdots}' class='latex' />—and the smoke will tell you what that is.”
</p></blockquote><p>
With a “pouf” he vanished, but once again his smoke stayed behind, and some of it knotted itself into what first looked like a snake until I recognized it was making the Greek letter zeta. Then I saw the <a href=\"http://www.nytimes.com/2014/02/04/science/in-the-end-it-all-adds-up-to.html\">value</a>, and I realized that choosing it must have caused endless committees endless mirth in their endless—but thereby finite—hierarchy:</p><p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Czeta%28-1%29+%3D+%5Cfrac%7B-1%7D%7B12%7D%5C%2C.&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle &#92;zeta(-1) = &#92;frac{-1}{12}&#92;,.' title='&#92;displaystyle &#92;zeta(-1) = &#92;frac{-1}{12}&#92;,.' class='latex' /></p><p>
I rushed to look this up in a book, the first to hand being a physics <a href=\"http://www.amazon.com/String-Cambridge-Monographs-Mathematical-Physics/dp/0521672279/ref=sr_1_1?ie=UTF8&amp;qid=1395007493&amp;sr=8-1&amp;keywords=polchinski#reader_0521672279\">book</a> on String Theory which I had just ordered from Amazon, and sure enough <a href=\"http://haacked.com/archive/2014/01/26/fun-with-infinite-sums/\">there it was</a>:</p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/polchinskiequation.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/polchinskiequation.png?w=600\" alt=\"PolchinskiEquation\"   class=\"aligncenter size-full wp-image-11395\" /></a></p><p><h2> Open Problems </h2><p><p>
Ken and I wish you a happy and safe St. Patrick’s Day. Do you believe a word of our Leprechaun, Neil? I do not. “Not determined yet”—that is ridiculous. It is silly, yet how can I distinguish <img src='http://s0.wp.com/latex.php?latex=%7B%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;dots}' title='{&#92;dots}' class='latex' /></p><p><p></font><br /><b>Update 3/18:</b><br /><font color=\"”#00D700\"><br />
We wrote and posted this before knowing about yesterday’s announced <a href=\"http://www.nytimes.com/2014/03/18/science/space/detection-of-waves-in-space-buttresses-landmark-theory-of-big-bang.html?_r=0\">discovery</a> of solid evidence for gravity waves and cosmic inflation at the Big Bang.  Where Neil L. is talking about “5-sigma” above I’ve linked this heartwarming <a href=\"http://news.discovery.com/space/big-bang-theorist-told-of-gravitational-wave-discovery-video-140317.htm\">video</a> of Andrei Linde getting the news from a collaborator on the discovering project, whose first words were, “It’s 5-sigma.”  As this St. Patty’s “big bang” is verified, let’s hope the leprechauns keep their word…</p><p>
I obtained two surprising data points for 2012 and 2013 yesterday which strengthen my own evidence <a href=\"http://www.cse.buffalo.edu/~regan/chess/fidelity/data/IPR2600reg4yr.jpg\">against</a> a different kind of “inflation” that almost all strong chess players are said to believe in.</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11394/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11394/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11394&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "http://rjlipton.wordpress.com/2014/03/17/happy-st-patricks-day-2014/" (21286 58489) new 7 nil nil ((title nil "Happy St. Patrick’s Day 2014") (link nil "http://rjlipton.wordpress.com/2014/03/17/happy-st-patricks-day-2014/") (comments nil "http://rjlipton.wordpress.com/2014/03/17/happy-st-patricks-day-2014/#comments") (pubDate nil "Mon, 17 Mar 2014 12:03:05 +0000") (dc:creator nil "rjlipton") (category nil "Ideas") (category nil "News") (category nil "People") (category nil "Proofs") (category nil "Leprechaun") (category nil "P=NP") (category nil "simulation hypothesis") (category nil "St. Patrick's Day") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11394") (description nil "A shocking story from our friendly Leprechaun Neil L. is not a computer scientist&#8212;he is a Leprechaun. He has visited me every year since I started writing GLL, always visiting on St. Patrick&#8217;s day. Today I want to report on what happened this year. Days ago I received a email from him&#8212;a first. It said: [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11394&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> A shocking story from our friendly Leprechaun </em><br /><font color=\"”#000000?\"><br /><font color=\"”#00D700\"></p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/unknown1.jpeg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/unknown1.jpeg?w=177&#038;h=186\" alt=\"Unknown\" width=\"177\" height=\"186\" class=\"alignright  wp-image-11397\" /></a></p><p>
Neil L. is not a computer scientist&#8212;he is a Leprechaun. He has visited me every year since I started writing GLL, always visiting on St. Patrick&#8217;s day.</p><p>
Today I want to report on what happened this year.<br /><span id=\"more-11394\"></span></p><p>
Days ago I received a email from him&#8212;a first. It said:</p><blockquote><p><FONT FACE=\"veranda, arial\"><br />
 If you agree to not catch me, I will be at your place at 12:01am Monday. Neil L.<br /></FONT></p></blockquote><p>
One <a href=\"http://rjlipton.wordpress.com/2011/03/17/happy-st-patricks-day-again-again/\">year</a> I did catch him, affording me three wishes. I thought I would get some of the secrets of the universe, but he outsmarted me. </p><p>
I replied back that yes I would stop trying to catch him. I got no reply. In any event I decided I would stay up late Sunday night and see if he would appear.</p><p>
Just after midnight I smelled a pungent odor, then saw a puff of green smoke, and there was Neil L. standing before me. His pipe in his mouth was putting out that green smoke, which has a strong but surprisingly pleasant smell. My dad was a pipe smoker when I was young, quitting later in life&#8212;of course his tobacco smoke was never green.</p><p>
Neil said, &#8220;Good day to you on this fine St. Patrick&#8217;s Day. I read your reply, quite clever.&#8221; I responded that I did not think I was being clever at all. Neil smiled, took another puff, and said &#8220;Come on&#8212;saying I will not <i>try</i> to catch you&#8212;come now.&#8221; He added that I must promise <i>not</i> to catch him. I nodded back yes, and he sat down on a chair across from where I was sitting. His short legs dangled off the floor.</p><p><h2> Neil&#8217;s Answer </h2><p><p>
We sat there for a moment in silence, then as I was about to speak, he interrupted and said, &#8220;I will answer ye any one question, no tricks, straight up.&#8221; I looked back surprised and figured that I had nothing to lose so I asked <em>the</em> question, </p><blockquote><p>
Is P=NP?
</p></blockquote><p>
Neil puffed away for quite a while and then said, &#8220;I appreciate your not trying to be tricky with your question. I could answer of course no, since the letters &#8216;P&#8217; and &#8216;NP&#8217; are different. But I will be straightforward with you. No teasing, no games today.&#8221; I was excited, perhaps I would finally know the answer. </p><p>
He added, &#8220;I could make you swear that you cannot repeat this to anyone, but I do not need to, for none will believe ye.&#8221; I said OK, so what is the answer? Neil smiled and said:</p><blockquote><p>
&#8220;We have not yet determined the answer. That&#8217;s the truth. No tricks. I swear as a Leprechaun, may you find all my gold coins if I lie.&#8221;
</p></blockquote><p>
I thought, what does that mean? <i>Not determined yet?</i> A mathematical statement is either true or it&#8217;s false. No tricks.</p><p><h2> Neil&#8217;s Explanation </h2><p><p>
I asked what did he mean by &#8220;not yet determined?&#8221; Either P=NP or P&ne;NP, I responded. Neil smiled and said that he would explain. He said:</p><blockquote><p>
&#8220;You live in a world that is really a simulation. We control it all.&#8221;
</p></blockquote><p>
I looked at him, thinking this was another trick. Neil registered my shock and added: &#8220;Yes it must be hard for you to believe, but it is true. How else can you explain a Leprechaun that appears and disappears.&#8221; With that he puffed some more on his pipe and laughed and added, &#8220;I told you no one will believe ye.&#8221;</p><p>
Okay I said, could he explain what he meant by &#8220;not yet determined&#8221;?  He nodded yes. &#8220;The simulation mostly runs itself quite well, but there are situations where it gets stuck and the committee of seven then step in and decide what it should do.&#8221;</p><p>
I asked what is the &#8216;committee of seven&#8217;? He answered, &#8220;It is a group of over fifty-seven wise ones who are tasked with maintaining the simulation and fixing any unexpected problems. We cannot be expected to have foreseen all possible situations, so they are the ones who decide things.&#8221; Another puff and more green smoke, and he continued, &#8220;Don&#8217;t even ask why it&#8217;s the committee of seven, it&#8217;s too long a story.&#8221;</p><p>
I finally laughed and said that this was his best visit ever&#8212;what a silly story. I told him that I did not believe a word of it. Neil looked at me and said he understood, yet he could give me some &#8220;proof.&#8221; I said that would be great.</p><p><h2> Neil&#8217;s Proof </h2><p><p>
Neil answered, &#8220;Look I know it is hard for ye to believe, but I will give ye examples of why it is true.&#8221; The first he gave is that in ancient times there were more miracles and strange occurrences, including demons and the like. Did I not agree? I said that that was the folklore but&#8230; He interrupted and said &#8220;Ay&#8212;that was when we first began to run the simulation; we were new at it and made mistakes. We are much better today. Much.&#8221;</p><p>
I started to say yes, nothing like that happens today, but Neil waved me off and said, &#8220;we don&#8217;t make errors but we still have fun&#8212;especially with your sports.&#8221; I gave him a cold stare, but he continued: &#8220;You are a fan of sailing, if I recall. What are the odds of coming back from 8&#8211;1 down in a best-of-9 series?&#8221; He was talking about the Oracle US team&#8217;s <a href=\"http://www.dailymail.co.uk/sport/othersports/article-2432966/Sir-Ben-Ainslies-Americas-Cup-win-greatest-sporting-comeback-time.html\">comeback</a> in last September&#8217;s America&#8217;s Cup final. I rounded the simple coin-flip answer: &#8220;About 250&#8211;1 against, more since they looked badly beaten.&#8221; Neil asked whether there had been anywhere near 250 final series since the America&#8217;s Cup began, and needed no answer from me as he puffed with a grin.</p><table style=\"margin:auto;\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/03/ainslietshirt.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/ainslietshirt.png?w=300\" alt=\"AinslieTshirt\" width=\"300\" class=\"aligncenter  wp-image-11403\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Commercial T-shirt <a href=\"http://stpatricksdaytee.com/view/1255850/ainslie-o-ainslie-irish-for-a-day-st-patrick-day-t-shirt\">source</a><br /></FONT></td></tr></table><p>&#8220;Do you mess with bookies?&#8221; I blurted out, then felt ashamed for incivility.  But Neil leaned forward with a hand gesture and hush for my attention: &#8220;The simulation gives us a budget of improbability, and by the Rule of Improbability we have only a tiny window to deviate. But we are free to choose which improbable events happen to maximize our fun, so long as we do not also violate the Rule of Indistinguishability.&#8221; Without even pausing for my query, he went on: &#8220;That Rule is the same one you use in defining <a href=\"http://en.wikipedia.org/wiki/Zero-knowledge_proof#Variants_of_zero-knowledge\">computational zero knowledge</a>&#8212;we can prove things to you, but it would take you too much effort to prove our tricks to a third party. To keep it, we put much effort into <em>not</em> messing with things. For instance our simulator had to work hard this weekend to calculate the true odds and allowances for Warren Buffett&#8217;s &#036;1,000,000,000 <a href=\"http://www.nytimes.com/2014/03/16/sports/ncaabasketball/mathematicians-are-hoping-their-calculations-add-up-to-the-perfect-bracket.html?_r=0\">Bracket Challenge</a>, but we&#8217;re all set for &#8220;March Madness&#8221; now.&#8221;</p><p>
I asked if they could mess with physics, and he told me about a third rule: &#8220;The Rule of Consistency is that we may not overturn any past experimental results once their confidence has gone beyond <a href=\"http://news.discovery.com/space/big-bang-theorist-told-of-gravitational-wave-discovery-video-140317.htm\">5 sigma</a>.&#8221; Of course humanity has only had the 5-sigma rule for declaring things like the Higgs Boson or primordial gravity waves to exist for a short time, so I asked what about physics in the past. Neil continued, &#8220;I know nothing about this, but there was a problem with something called beta-decay.&#8221; I jumped in and said: yes there is a surprising effect&#8212;it is one of few physical <a href=\"http://en.wikipedia.org/wiki/Weak_interaction\">effects</a> ever discovered that tells left from right. Neil added, &#8220;Yes that is it. Some fool made a mistake and caused that to happen. Once it got into the world the committee thought it was fun to have it. A kind of insider joke. Of course it meant we had to re-program the physics part of the simulator to compute using Dirac notation, long before Dirac invented it.&#8221;</p><p><h2> The Meta Question </h2><p><p>
I was still numb from the story&#8212;it could not be true? Yet. What he just said about &#8220;programming&#8221; made me realize, surely the laws of computability and complexity must apply to them too. Now I knew I had him, so I asked:</p><blockquote><p>
Surely P=NP must have an answer in your world&#8212;which your committee is subject to. What is the answer there?
</p></blockquote><p>
Neil answered calmly, &#8220;As I said, it is not yet determined.&#8221;</p><p>
I expostulated, &#8220;Not yet determined for <em>us</em> you said. But surely it is determined for <em>them</em>.&#8221;</p><p>
A little patronizingly Neil replied, &#8220;Nay me lad. By me honor, when I said it is not yet determined I spoke true. I did say there are over fifty-seven on the committee of seven. We cannot violate consistency amongst ourselves for a mathematical proposition.&#8221;</p><p>
I remembered from writing our recent simulation <a href=\"http://rjlipton.wordpress.com/2014/02/22/the-evil-genius/\">post</a> that people who live in simulations would write their own simulations that other people could live in, <em>ad-infinitum</em> all the way down. For Neil to be right it could be infinities all the way up too. Then I realized, &#8220;Ah&#8212;I see why you said &#8216;over fifty-seven&#8217; before: there&#8217;s you plus your committee of 7, then each of those is subject to a committee of 7, so <img src='http://s0.wp.com/latex.php?latex=%7B1+%2B+7+%2B+7%5E2+%3D+57%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1 + 7 + 7^2 = 57}' title='{1 + 7 + 7^2 = 57}' class='latex' /> and it goes on from there. But how can there be infinitely many leprechauns?&#8221;</p><p>
To my surprise he gave a pained start: &#8220;Ay, ye have catched me in a secret, and ye did not try to&#8212;it was me saying too much. So I must now tell ye exactly how many leprechauns we are, and it will prove to ye what I said about your mathematics.&#8221; I stood as he stood up as if to leave, and I saw he was really a little guy, only <img src='http://s0.wp.com/latex.php?latex=%7B1%2F12%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1/12}' title='{1/12}' class='latex' /> my size. Neil spoke once more as his pipe puffed mightily.</p><blockquote><p>
&#8220;We have other committees and hierarchies with other numbers, so our total is the sum of all the natural numbers <img src='http://s0.wp.com/latex.php?latex=%7B1+%2B+2+%2B+3+%2B+4+%2B+5+%2B+6+%2B+7+%2B+%5Ccdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{1 + 2 + 3 + 4 + 5 + 6 + 7 + &#92;cdots}' title='{1 + 2 + 3 + 4 + 5 + 6 + 7 + &#92;cdots}' class='latex' />&#8212;and the smoke will tell you what that is.&#8221;
</p></blockquote><p>
With a &#8220;pouf&#8221; he vanished, but once again his smoke stayed behind, and some of it knotted itself into what first looked like a snake until I recognized it was making the Greek letter zeta. Then I saw the <a href=\"http://www.nytimes.com/2014/02/04/science/in-the-end-it-all-adds-up-to.html\">value</a>, and I realized that choosing it must have caused endless committees endless mirth in their endless&#8212;but thereby finite&#8212;hierarchy:</p><p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Czeta%28-1%29+%3D+%5Cfrac%7B-1%7D%7B12%7D%5C%2C.&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle &#92;zeta(-1) = &#92;frac{-1}{12}&#92;,.' title='&#92;displaystyle &#92;zeta(-1) = &#92;frac{-1}{12}&#92;,.' class='latex' /></p><p>
I rushed to look this up in a book, the first to hand being a physics <a href=\"http://www.amazon.com/String-Cambridge-Monographs-Mathematical-Physics/dp/0521672279/ref=sr_1_1?ie=UTF8&amp;qid=1395007493&amp;sr=8-1&amp;keywords=polchinski#reader_0521672279\">book</a> on String Theory which I had just ordered from Amazon, and sure enough <a href=\"http://haacked.com/archive/2014/01/26/fun-with-infinite-sums/\">there it was</a>:</p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/polchinskiequation.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/polchinskiequation.png?w=600\" alt=\"PolchinskiEquation\"   class=\"aligncenter size-full wp-image-11395\" /></a></p><p><h2> Open Problems </h2><p><p>
Ken and I wish you a happy and safe St. Patrick&#8217;s Day. Do you believe a word of our Leprechaun, Neil? I do not. &#8220;Not determined yet&#8221;&#8212;that is ridiculous. It is silly, yet how can I distinguish <img src='http://s0.wp.com/latex.php?latex=%7B%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;dots}' title='{&#92;dots}' class='latex' /></p><p><p></font><br /><b>Update 3/18:</b><br /><font color=\"”#00D700\"><br />
We wrote and posted this before knowing about yesterday&#8217;s announced <a href=\"http://www.nytimes.com/2014/03/18/science/space/detection-of-waves-in-space-buttresses-landmark-theory-of-big-bang.html?_r=0\">discovery</a> of solid evidence for gravity waves and cosmic inflation at the Big Bang.  Where Neil L. is talking about &#8220;5-sigma&#8221; above I&#8217;ve linked this heartwarming <a href=\"http://news.discovery.com/space/big-bang-theorist-told-of-gravitational-wave-discovery-video-140317.htm\">video</a> of Andrei Linde getting the news from a collaborator on the discovering project, whose first words were, &#8220;It&#8217;s 5-sigma.&#8221;  As this St. Patty&#8217;s &#8220;big bang&#8221; is verified, let&#8217;s hope the leprechauns keep their word&#8230;</p><p>
I obtained two surprising data points for 2012 and 2013 yesterday which strengthen my own evidence <a href=\"http://www.cse.buffalo.edu/~regan/chess/fidelity/data/IPR2600reg4yr.jpg\">against</a> a different kind of &#8220;inflation&#8221; that almost all strong chess players are said to believe in.</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11394/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11394/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11394&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/03/17/happy-st-patricks-day-2014/feed/") (slash:comments nil "6") (media:content ((url . "http://1.gravatar.com/avatar/afaa664a052777146630095c596117b2?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "lipton")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/unknown1.jpeg") (medium . "image")) (media:title ((type . "html")) "Unknown")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/ainslietshirt.png") (medium . "image")) (media:title ((type . "html")) "AinslieTshirt")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/polchinskiequation.png") (medium . "image")) (media:title ((type . "html")) "PolchinskiEquation")))) ("Could We Have Felt Evidence For SDP ≠ P?" "<p><font color=\"”#0066cc?\"><br /><em> Evaluating mathematical beliefs </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/03/khachiyan.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/khachiyan.png?w=600\" alt=\"Khachiyan\"   class=\"aligncenter size-full wp-image-11379\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Rutgers in memoriam <a href=\"http://www.cs.rutgers.edu/Khachiyan/\">source</a>.<br /></FONT></td></table><p>
Leonid Khachiyan in 1979 caused arguably the most sudden surprise to the West’s popular scientific understanding since the successful launch of Sputnik in 1957. His <a href=\"http://en.wikipedia.org/wiki/Ellipsoid_method\">ellipsoid method</a> gave the first algorithm for linear programming whose polynomial running time was verified. Thanks largely to Narendra Karmarkar it has been superseded by faster <a href=\"http://en.wikipedia.org/wiki/Interior-point_method\">interior-point methods</a>, while older algorithms have since been noted to run in polynomial time, but the breakthrough and inspiration came from Khachiyan. Could something like it happen again? </p><p>
Today Ken and I want to ask whether recent argument over beliefs about <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' />? can be evaluated in light of this shock.<br /><span id=\"more-11375\"></span></p><p>
Khachiyan’s “rocket” had actually left the hangar ten months before, in a January 1979 <em>Doklady Akademii Nauk</em> paper whose title translates into English as, “A polynomial algorithm for linear programming.” As <a href=\"http://lpsdp.files.wordpress.com/2011/10/ellipsoid-stories.pdf\">recounted</a> by Berkeley’s Eugene Lawler, it was sighted at a May 1979 meeting Lawler attended in Oberwohlfach, and after Peter G&aacute;cs and L&aacute;szl&oacute; Lov&aacute;sz supplied proofs missing in the paper, it was pronounced correct at a conference in Montreal. The discovery was picked up in October by <em>Science News</em>, and then by the magazine <em>Science</em>. An allusion by the latter to the NP-complete Traveling Salesman problem was moved to the headline of a Nov. 4 story in England’s Guardian newspaper, and reflected three days later in the New York Times’s front-page screamer, “A Soviet Discovery Rocks World of Mathematics.” </p><p>
Our point is not to say that linear programming being in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> was a surprise. To those who knew the reality behind the headlines, it wasn’t. As Lawler relates, the great George Dantzig had tried to set Times reporter Malcolm Browne straight on this and points related to what LP’s can and (ostensibly) cannot solve. The simplex algorithm already solved the vast majority of <img src='http://s0.wp.com/latex.php?latex=%7Bn%5C%21%5Ctimes%5C%21n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n&#92;!&#92;times&#92;!n}' title='{n&#92;!&#92;times&#92;!n}' class='latex' /> LP cases in <img src='http://s0.wp.com/latex.php?latex=%7BO%28n%5E3%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(n^3)}' title='{O(n^3)}' class='latex' /> expected time, so there was no feeling of practical intractability. Rather our point draws on something perhaps less widely known and appreciated: that Khachiyan’s ideas extend to solve a much wider class than linear programs, including so-called <a href=\"http://en.wikipedia.org/wiki/Semidefinite_programming\">semi-definite programs</a> or SDP’s, exactly or with high approximation. Thus it can be said to show that a complexity class <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSDP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP}}' title='{&#92;mathsf{SDP}}' class='latex' /> defined by “approximation-robust” reductions to these programs equals <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />.</p><p>
We raise this with regard to the main technical argument in a recent <a href=\"http://www.scottaaronson.com/blog/?p=1720\">post</a> by Scott Aaronson titled “The Scientific Case for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' title='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' class='latex' />.” We wonder whether a similar argument might have seemed on the side of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%5Cneq+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP &#92;neq P}}' title='{&#92;mathsf{SDP &#92;neq P}}' class='latex' /> in the years before Khachiyan. Even more speculatively, we wonder whether a kind of “Reverse Oracle Result” can be formulated to make any of this more concrete. But first let’s review Scott’s comments in the wider context of belief about <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> vs. <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> and about open problems that were resolved in surprising ways.</p><p><p><H2> Scott’s Comments and Our Positions </H2></p><p><p>
Essentially Scott gave a quite reasonable argument for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />, in his usual elegant and convincing style. Bill Gasarch <a href=\"http://blog.computationalcomplexity.org/2014/03/why-do-we-think-p-ne-np-inspired-by.html\">expanded</a> it. But. But mathematics is not something we argue about like: who was the best hockey player of all time, or what is the right philosophy? The simple fact is that no one has proved that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.</p><p>
Our purpose with our recent <a href=\"http://rjlipton.wordpress.com/2014/02/28/practically-pnp/\">post</a> on a 13-GB certificate of unsatisfiability was not to start a discussion about <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />, but rather to witness that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hardness is not so great a practical obstacle as we may think. The Gr&ouml;bner basis algorithm is run all the time, despite the problem it solves being complete for exponential <em>space</em>. Notably it runs in singly-exponential time on a <a href=\"http://algo.inria.fr/seminars/summary/Bardet2002.pdf\">generic set</a> of cases. If we can shift down a level, this is like having “smoothed polynomial-time behavior” of an algorithm for a <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' />-complete problem. Solving nontrivial cases of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard problems <a href=\"http://numberwarrior.wordpress.com/2009/11/01/cheating-at-the-2009-sudoku-championship/\">is</a><a href=\"http://arxiv.org/pdf/1403.1911v1.pdf\">addictive</a>.</p><p>
Almost the entire business model of <a href=\"http://en.wikipedia.org/wiki/Quintiq\">this company</a> is to solve <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard optimization problems, using non-quantum computers. As is evident from examples on their <a href=\"http://www.quintiq.com/\">website</a>, they are not just gristing easy approximation for run-of-the-mill instances. To quote <a href=\"http://www.quintiq.com/blog/what-usain-bolt-can-teach-you-about-optimization/\">one</a> of their blog entries (their emphasis):  </p><blockquote><p>
According to academic research on NP-hard problems, it’s impossible to guarantee that optimal solutions to difficult problems will be found in a reasonable time frame. However, with almost all real-life planning puzzles, you <b>can</b> get <b>excellent</b> results very quickly.
</p></blockquote><p>
Hence our initial reaction was, who cares about discussions on <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> being true or not, aside from progress on this great question? A full solution would be wonderful, but just having small steps would be great, even a possible program for a solution would be welcome. So that was what we thought we should just say, nothing more, except noting our split <a href=\"http://rjlipton.wordpress.com/2011/06/24/polls-and-predictions-and-pnp/\">answers</a> to Bill G’s reprised <a href=\"http://blog.computationalcomplexity.org/2011/06/i-am-conducing-new-poll-on-p-vs-np.html\">poll</a> three years ago.</p><p>
But. But Dick couldn’t resist adding some more sections, while Ken made some effort to counter Scott’s facts, counterfactually.</p><p><p><H2> Dick Speaks </H2></p><p><p>
I feel compelled to explain why I am open-minded on this question perhaps more than anyone else. I have several reasons that I feel are important to remind all of us: </p><ol><li>
In mathematics people have guessed wrong before on famous open questions. </p><li>
The actual theorems about why <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> is weaker than <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> are extremely hard and very weak. </p><li>
If <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%3D+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} = &#92;mathsf{NP}}' title='{&#92;mathsf{P} = &#92;mathsf{NP}}' class='latex' /> it could still be that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> is computable in time <img src='http://s0.wp.com/latex.php?latex=%7B+n%5E%7B2%5E%7B1000%7D%7D.+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{ n^{2^{1000}}. }' title='{ n^{2^{1000}}. }' class='latex' /></p><li>
If <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> it could still be that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> is computable in time <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7B%5Clog+n%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{&#92;log n}}' title='{n^{&#92;log n}}' class='latex' />—while the evidence cited by Scott is properly for an exponential lower bound.
</ol><p>
We’ll address the full <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> versus <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> question, and not situations where say the algorithm generating <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> instances is restricted to <img src='http://s0.wp.com/latex.php?latex=%7Br%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r(n)}' title='{r(n)}' class='latex' /> random bits—a case in which we’ve <a href=\"http://rjlipton.wordpress.com/2013/08/23/a-world-without-randomness/\">noted</a> that in the limit one can solve them all in something like time <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28n%292%5E%7Br%28n%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(n)2^{r(n)}}' title='{&#92;mathsf{poly}(n)2^{r(n)}}' class='latex' />. </p><p><p><H2> Bad Guesses </H2></p><p><p>
I have discussed guesses in mathematics <a href=\"http://rjlipton.wordpress.com/2009/02/19/we-all-guessed-wrong/\">many</a><a href=\"http://rjlipton.wordpress.com/2009/09/27/surprises-in-mathematics-and-theory\">times</a><a href=\"http://rjlipton.wordpress.com/2010/06/19/guessing-the-truth/\">before</a><a href=\"http://rjlipton.wordpress.com/2011/04/13/even-great-mathematicians-guess-wrong/\">on</a><a href=\"http://rjlipton.wordpress.com/2011/05/04/guessing/\">this</a><a href=\"http://rjlipton.wordpress.com/2011/08/01/guessing-again/\">blog</a>. One of the biggest issues in guessing wrong is that people do not take seriously the other possibility. Researchers tend not to work on showing <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%3D+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} = &#92;mathsf{NP}}' title='{&#92;mathsf{P} = &#92;mathsf{NP}}' class='latex' /> anymore. Research support does not go there, since we all “know” that it would be a waste of time, and there are other consequences to the field. </p><p>
Here are some famous guesses that were essentially off by exponentials. For each I will list the time gap between the initial problem being raised and being solved.</p><ul><li><b>The Borsuk Conjecture [60 years].</b>  It was claimed that <img src='http://s0.wp.com/latex.php?latex=%7Bd%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d+1}' title='{d+1}' class='latex' /> was the answer to this <a href=\"http://en.wikipedia.org/wiki/Borsuk's_conjecture\">geometric conjecture</a>. Many top people worked on it for years and partial results were proved, showing <img src='http://s0.wp.com/latex.php?latex=%7Bd%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d+1}' title='{d+1}' class='latex' /> is correct in many important cases. Then Gil Kalai and Jeff Kahn proved that <img src='http://s0.wp.com/latex.php?latex=%7Bd%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d+1}' title='{d+1}' class='latex' /> was slightly off; the correct answer is exponential—at least <img src='http://s0.wp.com/latex.php?latex=%7Bc%5E%7B%5Csqrt%7Bd%7D%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{c^{&#92;sqrt{d}}}' title='{c^{&#92;sqrt{d}}}' class='latex' /> for some <img src='http://s0.wp.com/latex.php?latex=%7Bc%3E1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{c&gt;1}' title='{c&gt;1}' class='latex' />, and possibly with <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> in the exponent. </p><li><b>Barrington’s Theorem [26 years].</b>  I worked on lower bounds to show that bounded width computation could not compute the majority function. This was joint work with Ashok Chandra and Merrick Furst, which introduced multi-party communication. Then David Barrington came along and proved that bounded width could do all of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNC%7D%5E%7B1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NC}^{1}}' title='{&#92;mathsf{NC}^{1}}' class='latex' />. Hmmmm.</p><li><b>Law of Small Numbers [118 years].</b><br />
It was noticed by Gauss that 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cpi%28x%29+%3C+li%28x%29%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;pi(x) &lt; li(x), ' title='&#92;displaystyle  &#92;pi(x) &lt; li(x), ' class='latex' /></p><p>
for all reasonable size <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. Here <img src='http://s0.wp.com/latex.php?latex=%7Bli%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{li(x)}' title='{li(x)}' class='latex' /> is the logarithmic intergal 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cint_%7B0%7D%5E%7Bx%7D%5Cfrac%7Bdt%7D%7B%5Cln+t%2C%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;int_{0}^{x}&#92;frac{dt}{&#92;ln t,} ' title='&#92;displaystyle  &#92;int_{0}^{x}&#92;frac{dt}{&#92;ln t,} ' class='latex' /></p><p>
which is an asympotic approximation to <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(x)}' title='{&#92;pi(x)}' class='latex' />, the number of primes less than <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. It was conjectured that this would always hold and was widely believed for over a century. Then John Littlewood proved that the lead changes between <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(x)}' title='{&#92;pi(x)}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bli%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{li(x)}' title='{li(x)}' class='latex' /> infinitely often, although the first switch is upper bounded by an immense number. Richard Guy wrote a wonderful <a href=\"http://www.math.sjsu.edu/~hsu/courses/126/Law-of-Small-Numbers.pdf\">article</a> on what he called the “The Strong Law of Small Numbers”: cases when evident phenomena held for small numbers but eventually would fail. Here is a <a href=\"http://googology.wikia.com/wiki/Strong_Law_of_Small_Numbers\">table</a> with other examples:
</ul><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/lawsmall.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/lawsmall.png?w=540&h=393\" alt=\"lawsmall\" width=\"540\" height=\"393\" class=\"aligncenter wp-image-11377\" /></a></p><p>
By the way the “common clock” on <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq {NP}}' title='{&#92;mathsf{P} &#92;neq {NP}}' class='latex' /> is 43 years.</p><p><p><H2> Weak Theorems and Galactic Algorithms </H2></p><p><p>
We do have the theorem that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BDTIME%7D%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{DTIME}(n)}' title='{&#92;mathsf{DTIME}(n)}' class='latex' /> is not equal to <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNTIME%7D%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NTIME}(n)}' title='{&#92;mathsf{NTIME}(n)}' class='latex' />, which we have discussed <a href=\"http://rjlipton.wordpress.com/2011/01/19/we-believe-a-lot-but-can-prove-little/\">before</a> and which is particular to the multitape Turing machine model—make the tapes planes or trees and it goes away. We cannot even deduce from it that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BDTIME%7D%28n%5E%7B2%7D%29+%5Cneq+%5Cmathsf%7BNTIME%7D%28n%5E%7B2%7D%29.+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{DTIME}(n^{2}) &#92;neq &#92;mathsf{NTIME}(n^{2}). }' title='{&#92;mathsf{DTIME}(n^{2}) &#92;neq &#92;mathsf{NTIME}(n^{2}). }' class='latex' /> That’s pretty weak. Remember that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' title='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' class='latex' /> means that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BDTIME%7D%28n%5E%7B1000%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{DTIME}(n^{1000})}' title='{&#92;mathsf{DTIME}(n^{1000})}' class='latex' /> does not contain <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNTIME%7D%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NTIME}(n)}' title='{&#92;mathsf{NTIME}(n)}' class='latex' />. And more, of course. </p><p>
The <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> versus <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /><em>statement</em> still allows cross-cutting the generally-understood <em>significance</em>. That is:</p><ul><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' /> allows <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> to have no less than an <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7B1%2C000%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{1,000}}' title='{n^{1,000}}' class='latex' />-time algorithm. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> still allows <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> to have an <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7B%5Clog%5E%7B%2A%7D+n%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{&#92;log^{*} n}}' title='{n^{&#92;log^{*} n}}' class='latex' />-time algorithm.
</ul><p>
To be sure, some evidence cited by Scott is really for an exponential lower bound on <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' />; we have <a href=\"http://rjlipton.wordpress.com/2011/07/04/getting-on-base-with-pnp/\">discussed</a> this before too. But what we are saying still cuts against the usual argument that “many people have worked on looking for algorithms for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' />.” Yes many have looked for algorithms, but most were interested in “real” practical algorithms. For this kind of quest there is not much difference between <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7B20%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{20}}' title='{n^{20}}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B2%5E%7Bn%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^{n}}' title='{2^{n}}' class='latex' />. </p><p>
Aram Harrow communicates to us a more-concrete version of this point, which also serves as a bridge to Ken’s musings. 	</p><p><p><H2> Aram’s Bridging Thoughts </H2></p><p><p>
Quoting Aram, with light editing: “One of the stronger reasons for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> is the Bayesian one—it is easier to find algorithms than lower bounds, so our failure to find a subexponential-time algorithm for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' /> speaks louder than our failure to find a super-linear lower bound for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' />. A related way of expressing this is that before <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-completeness was understood, thousands of researchers in disparate fields were unwittingly all trying to put <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' /> into <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />.</p><p>
But a counter-argument is that all of those seemingly independent researchers would always come up with algorithms that relied on a few kinds of structure—a lot is covered by just two kinds: </p><ul><li>
Convexity/absence of local minima—cases where greedy algorithms work. </p><li>
Tree structure—cases where dynamic programming, divide-and-conquer, and related ideas work.
</ul><p>
This <em>paucity of algorithmic variety</em> can be viewed in (at least) two ways:</p><ol><li>
Algorithms, like oil deposits, are a finite resource. We’ve found all the important ones, and <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' /> is always going to require exponential time. </p><li>
The paucity is a sociological phenomenon, due to the fact that all researchers have learned essentially similar math backgrounds.
</ol><p>
On the latter, Terry Tao’s recent <a href=\"http://terrytao.wordpress.com/2014/02/04/finite-time-blowup-for-an-averaged-three-dimensional-navier-stokes-equation/\">breakthrough</a> on the Navier-Stokes equations is an example of how much the same ideas keep recirculating, and how much more quickly progress can be made by cross-applying ideas rather than coming up with radically new ones. Going from Erwin Schr&ouml;dinger’s equation to Peter Shor’s quantum factoring algorithm is a 60-minute lecture, but it took over 60 years (and a change in perspective coming from the computer revolution) to discover. Our lack of algorithms reveals only our lack of creativity, and it is arrogant to posit fundamental limits to mathematics just because we can’t solve a problem. Either way, the central question isn’t so much about <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> but rather a “throwback” of a question now being asked about quantum computers:</p><blockquote><p>
Where does the power of deterministic algorithms come from?
</p></blockquote><p>
A related question is the power of the <a href=\"http://math.mit.edu/~rothvoss/lecturenotes/lasserresurvey.pdf\">Lasserre hierarchy</a>. It has been shown to be effective for a large number of problems, but with a surprisingly small number of truly different techniques. I would love to know whether further work will increase or decrease the number of ways in which we know how to use it; that is, either by discovering new methods or by unifying apparently different methods.”</p><p><p><H2> Ken’s Sixth World </H2></p><p><p>
The Lasserre hierarchy builds upon LP’s and SDP’s, and this brings us back to the intro. I (still Dick) remember many people in the 1970′s trying to prove that certain linear/convex programming problems were <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard, despite all our confidence in the simplex algorithm for daily use. This makes Ken wonder:</p><blockquote><p>
What if SDP’s really were hard?
</p></blockquote><p>
Russell Impagliazzo famously categorized <a href=\"http://intractability.princeton.edu/blog/2009/05/program-for-workshop-on-impagliazzos-worlds/\">five worlds</a> that are consistent with current knowledge of complexity. Is there room to analyze any more, ones that are inconsistent now, but might have been meaningfully consistent had our field taken a different path?</p><p>
All of Impagliazzo’s worlds—including ones with <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> and with <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' />—have been instantiated via oracle results. All oracle results involve pretending that some ostensibly hard problem is easy. For instance, the world with <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' /> involves pretending <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' />-complete problems are easy, while known ones for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> involve granting free access to a set coded so that the free access itself activates a diagonalization. What I (Ken) wonder is whether there is a sensible formal way to do “Reverse Oracle Results,” which pretend that some easy problem <img src='http://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> is hard.</p><p><p>
One known way to get this effect is to narrow the definition of “easy” so that <img src='http://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> still has easy reductions <b>to</b><img src='http://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> from other problems <img src='http://s0.wp.com/latex.php?latex=%7BW%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{W}' title='{W}' class='latex' />. For example, linear programming problems are <a href=\"http://en.wikipedia.org/wiki/P-complete#P-complete_problems\">P-complete</a> under logspace (and even easier) reductions, as are problems of approximation by SDP’s. But here I mean something more structural—a sense in which <img src='http://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> is the <em>only</em> route to solving a whole class of problems <img src='http://s0.wp.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Y}' title='{Y}' class='latex' />. Then we can segregate this entire class and pretend it all is hard. It might suffice to give “easy” reductions <b>from</b><img src='http://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> to all these <img src='http://s0.wp.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Y}' title='{Y}' class='latex' />. In particular, a lot of <img src='http://s0.wp.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Y}' title='{Y}' class='latex' />‘s are solved via the interior-point paradigm for (LP’s and) SDP’s. It could also employ ideas in <a href=\"http://en.wikipedia.org/wiki/Reverse_mathematics\">reverse mathematics</a>.</p><p><H2> Countering Factuals with Counterfactuals </H2></p><p><p>
Scott replied to my <a href=\"http://www.scottaaronson.com/blog/?p=1720#comment-101896\">comment</a> about a possible <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7B20%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{20}}' title='{n^{20}}' class='latex' /> algorithm for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> in his post by referring to his earlier <a href=\"http://www.scottaaronson.com/blog/?p=1720#comment-101751\">comment</a> that:</p><blockquote><p>
Since it would be inelegant and unnatural for the class <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> to be “severed into two” in this way, I’d say the much likelier possibility is simply that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.
</p></blockquote><p>
Our point is, perhaps <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> remains already manifestly “severed into two” along Khachiyan’s and the interior-point fault-lines. In particular, we wonder how the following consequences would have looked as conditional results had they been proved in the late 1970′s:</p><p><blockquote><p><b>Theorem 1</b><em> If <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%3D+P%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP = P}}' title='{&#92;mathsf{SDP = P}}' class='latex' />, then it is possible to compute in polynomial time close approximations to a function <img src='http://s0.wp.com/latex.php?latex=%7B%5Cvartheta%28G%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;vartheta(G)}' title='{&#92;vartheta(G)}' class='latex' /> of undirected graphs <img src='http://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{G}' title='{G}' class='latex' /> that is <a href=\"http://en.wikipedia.org/wiki/Lov%C3%A1sz_number#Lov.C3.A1sz_.22sandwich_theorem.22\">sandwiched</a> between the <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete clique number <img src='http://s0.wp.com/latex.php?latex=%7B%5Comega%28G%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;omega(G)}' title='{&#92;omega(G)}' class='latex' /> and chromatic number <img src='http://s0.wp.com/latex.php?latex=%7B%5Cchi%28G%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;chi(G)}' title='{&#92;chi(G)}' class='latex' />, which all coincide whenever neither <img src='http://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{G}' title='{G}' class='latex' /> nor its complement has an odd induced cycle.<br /></em></p></blockquote><blockquote><p><b>Theorem 2</b><em> If <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%3D+P%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP = P}}' title='{&#92;mathsf{SDP = P}}' class='latex' />, then <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BMAX+CUT%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{MAX CUT}}' title='{&#92;mathsf{MAX CUT}}' class='latex' /> is polynomial-time approximable within <img src='http://s0.wp.com/latex.php?latex=%7B0.87856%5Cdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{0.87856&#92;dots}' title='{0.87856&#92;dots}' class='latex' />, even though it is <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard to approximate within <img src='http://s0.wp.com/latex.php?latex=%7B0.941%5Cdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{0.941&#92;dots}' title='{0.941&#92;dots}' class='latex' />. </em></p></blockquote><p>In the first theorem we have also inverted time by embracing the <a href=\"http://en.wikipedia.org/wiki/Strong_perfect_graph_theorem\">Strong Perfect Graph Theorem</a> which was proved in 2002 (final in 2006), but this conjecture was strongly felt and makes it transparent that many important families of graphs are perfect.  Hence the sweeping tractability of major <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete problems on these cases could be a surprise.  On the second theorem, why should the difference between <img src='http://s0.wp.com/latex.php?latex=%7B0.878%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0.878}' title='{0.878}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B0.9412%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0.9412}' title='{0.9412}' class='latex' /> matter to such a simple problem as <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BMAX+CUT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{MAX CUT}}' title='{&#92;mathsf{MAX CUT}}' class='latex' />? </p><p>
Of course in the light of knowledge we understand how these two <a href=\"http://en.wikipedia.org/wiki/Holographic_algorithm#History\">famous</a><a href=\"http://en.wikipedia.org/wiki/Semidefinite_programming#Example_3_.28Goemans-Williamson_MAX_CUT_approximation_algorithm.29\">theorems</a> work. On the latter the Unique Games Conjecture already helps explain how <img src='http://s0.wp.com/latex.php?latex=%7B0.87856%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0.87856&#92;dots}' title='{0.87856&#92;dots}' class='latex' /> may be special. But the present exercise is about how we reason when we don’t (yet) have the light of knowledge.</p><p><p><H2> Open Problems </H2></p><p><p>
Can we make some formal sense of a world where Khachiyan’s breakthrough never happens?</p><p><P><br /><b>Update 3/18/14:</b> The comments section has some excellent replies, including ones on the argument of the last two sections <a href=\"http://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/#comment-44250\">by</a> Scott Aaronson and <a href=\"http://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/#comment-44206\">by</a> Timothy Gowers.</p><p><P><br /><b>Update 3/17/14:</b> The Lov&aacute;sz theta-function example replaced the post’s original quoting of Leslie Valiant’s first “<a>Accidental Algorithm</a>” under a mis-memory that LP’s were involved (and SDP’s in later developments).  Snipping the irrelevant qualifier, it reads:</p><blockquote><p><b>Theorem 3</b><em> Counting assignments to a certain class of planar formulas is deterministic polynomial-time computable modulo <img src='http://s0.wp.com/latex.php?latex=%7B7%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' />, or modulo any Mersenne prime, even though it is <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard modulo <img src='http://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7B5%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' />. </em></p></blockquote><p>Aside from the fact that this computation belongs to a class called <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BGapL%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{GapL}}' title='{&#92;mathsf{GapL}}' class='latex' /> which is commonly believed to be a proper subclass of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />, the intent was to argue: “What do Mersenne primes have to do with matchings and convex programming really? Surely counting must be equally hard modulo any odd prime—after all there’s no exception for Mersenne in modular circuit lower bounds—so <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%5Cneq+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP &#92;neq P}}' title='{&#92;mathsf{SDP &#92;neq P}}' class='latex' /> must be an ‘invisible fence’ around this kind of ridiculousness.”  The intro and Borsuk statements were also amended.</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11375/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11375/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11375&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "http://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/" (21284 30858) new 8 nil nil ((title nil "Could We Have Felt Evidence For SDP ≠ P?") (link nil "http://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/") (comments nil "http://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/#comments") (pubDate nil "Sat, 15 Mar 2014 15:58:02 +0000") (dc:creator nil "Pip") (category nil "All Posts") (category nil "History") (category nil "Ideas") (category nil "Open Problems") (category nil "P=NP") (category nil "People") (category nil "approximation") (category nil "complexity") (category nil "conjecture") (category nil "deterministic") (category nil "Khachiyan") (category nil "linear programming") (category nil "lower bounds") (category nil "Nash") (category nil "polynomial") (category nil "Scott Aaronson") (category nil "SDP's") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11375") (description nil "Evaluating mathematical beliefs Rutgers in memoriam source. Leonid Khachiyan in 1979 caused arguably the most sudden surprise to the West&#8217;s popular scientific understanding since the successful launch of Sputnik in 1957. His ellipsoid method gave the first algorithm for linear programming whose polynomial running time was verified. Thanks largely to Narendra Karmarkar it has been [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11375&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Evaluating mathematical beliefs </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/03/khachiyan.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/khachiyan.png?w=600\" alt=\"Khachiyan\"   class=\"aligncenter size-full wp-image-11379\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Rutgers in memoriam <a href=\"http://www.cs.rutgers.edu/Khachiyan/\">source</a>.<br /></FONT></td></table><p>
Leonid Khachiyan in 1979 caused arguably the most sudden surprise to the West&#8217;s popular scientific understanding since the successful launch of Sputnik in 1957. His <a href=\"http://en.wikipedia.org/wiki/Ellipsoid_method\">ellipsoid method</a> gave the first algorithm for linear programming whose polynomial running time was verified. Thanks largely to Narendra Karmarkar it has been superseded by faster <a href=\"http://en.wikipedia.org/wiki/Interior-point_method\">interior-point methods</a>, while older algorithms have since been noted to run in polynomial time, but the breakthrough and inspiration came from Khachiyan. Could something like it happen again? </p><p>
Today Ken and I want to ask whether recent argument over beliefs about <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' />? can be evaluated in light of this shock.<br /><span id=\"more-11375\"></span></p><p>
Khachiyan&#8217;s &#8220;rocket&#8221; had actually left the hangar ten months before, in a January 1979 <em>Doklady Akademii Nauk</em> paper whose title translates into English as, &#8220;A polynomial algorithm for linear programming.&#8221; As <a href=\"http://lpsdp.files.wordpress.com/2011/10/ellipsoid-stories.pdf\">recounted</a> by Berkeley&#8217;s Eugene Lawler, it was sighted at a May 1979 meeting Lawler attended in Oberwohlfach, and after Peter G&aacute;cs and L&aacute;szl&oacute; Lov&aacute;sz supplied proofs missing in the paper, it was pronounced correct at a conference in Montreal. The discovery was picked up in October by <em>Science News</em>, and then by the magazine <em>Science</em>. An allusion by the latter to the NP-complete Traveling Salesman problem was moved to the headline of a Nov. 4 story in England&#8217;s Guardian newspaper, and reflected three days later in the New York Times&#8217;s front-page screamer, &#8220;A Soviet Discovery Rocks World of Mathematics.&#8221; </p><p>
Our point is not to say that linear programming being in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> was a surprise. To those who knew the reality behind the headlines, it wasn&#8217;t. As Lawler relates, the great George Dantzig had tried to set Times reporter Malcolm Browne straight on this and points related to what LP&#8217;s can and (ostensibly) cannot solve. The simplex algorithm already solved the vast majority of <img src='http://s0.wp.com/latex.php?latex=%7Bn%5C%21%5Ctimes%5C%21n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n&#92;!&#92;times&#92;!n}' title='{n&#92;!&#92;times&#92;!n}' class='latex' /> LP cases in <img src='http://s0.wp.com/latex.php?latex=%7BO%28n%5E3%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(n^3)}' title='{O(n^3)}' class='latex' /> expected time, so there was no feeling of practical intractability. Rather our point draws on something perhaps less widely known and appreciated: that Khachiyan&#8217;s ideas extend to solve a much wider class than linear programs, including so-called <a href=\"http://en.wikipedia.org/wiki/Semidefinite_programming\">semi-definite programs</a> or SDP&#8217;s, exactly or with high approximation. Thus it can be said to show that a complexity class <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSDP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP}}' title='{&#92;mathsf{SDP}}' class='latex' /> defined by &#8220;approximation-robust&#8221; reductions to these programs equals <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />.</p><p>
We raise this with regard to the main technical argument in a recent <a href=\"http://www.scottaaronson.com/blog/?p=1720\">post</a> by Scott Aaronson titled &#8220;The Scientific Case for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' title='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' class='latex' />.&#8221; We wonder whether a similar argument might have seemed on the side of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%5Cneq+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP &#92;neq P}}' title='{&#92;mathsf{SDP &#92;neq P}}' class='latex' /> in the years before Khachiyan. Even more speculatively, we wonder whether a kind of &#8220;Reverse Oracle Result&#8221; can be formulated to make any of this more concrete. But first let&#8217;s review Scott&#8217;s comments in the wider context of belief about <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> vs. <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> and about open problems that were resolved in surprising ways.</p><p><p><H2> Scott&#8217;s Comments and Our Positions </H2></p><p><p>
Essentially Scott gave a quite reasonable argument for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />, in his usual elegant and convincing style. Bill Gasarch <a href=\"http://blog.computationalcomplexity.org/2014/03/why-do-we-think-p-ne-np-inspired-by.html\">expanded</a> it. But. But mathematics is not something we argue about like: who was the best hockey player of all time, or what is the right philosophy? The simple fact is that no one has proved that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.</p><p>
Our purpose with our recent <a href=\"http://rjlipton.wordpress.com/2014/02/28/practically-pnp/\">post</a> on a 13-GB certificate of unsatisfiability was not to start a discussion about <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />, but rather to witness that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hardness is not so great a practical obstacle as we may think. The Gr&ouml;bner basis algorithm is run all the time, despite the problem it solves being complete for exponential <em>space</em>. Notably it runs in singly-exponential time on a <a href=\"http://algo.inria.fr/seminars/summary/Bardet2002.pdf\">generic set</a> of cases. If we can shift down a level, this is like having &#8220;smoothed polynomial-time behavior&#8221; of an algorithm for a <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' />-complete problem. Solving nontrivial cases of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard problems <a href=\"http://numberwarrior.wordpress.com/2009/11/01/cheating-at-the-2009-sudoku-championship/\">is</a><a href=\"http://arxiv.org/pdf/1403.1911v1.pdf\">addictive</a>.</p><p>
Almost the entire business model of <a href=\"http://en.wikipedia.org/wiki/Quintiq\">this company</a> is to solve <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard optimization problems, using non-quantum computers. As is evident from examples on their <a href=\"http://www.quintiq.com/\">website</a>, they are not just gristing easy approximation for run-of-the-mill instances. To quote <a href=\"http://www.quintiq.com/blog/what-usain-bolt-can-teach-you-about-optimization/\">one</a> of their blog entries (their emphasis):  </p><blockquote><p>
According to academic research on NP-hard problems, it&#8217;s impossible to guarantee that optimal solutions to difficult problems will be found in a reasonable time frame. However, with almost all real-life planning puzzles, you <b>can</b> get <b>excellent</b> results very quickly.
</p></blockquote><p>
Hence our initial reaction was, who cares about discussions on <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> being true or not, aside from progress on this great question? A full solution would be wonderful, but just having small steps would be great, even a possible program for a solution would be welcome. So that was what we thought we should just say, nothing more, except noting our split <a href=\"http://rjlipton.wordpress.com/2011/06/24/polls-and-predictions-and-pnp/\">answers</a> to Bill G&#8217;s reprised <a href=\"http://blog.computationalcomplexity.org/2011/06/i-am-conducing-new-poll-on-p-vs-np.html\">poll</a> three years ago.</p><p>
But. But Dick couldn&#8217;t resist adding some more sections, while Ken made some effort to counter Scott&#8217;s facts, counterfactually.</p><p><p><H2> Dick Speaks </H2></p><p><p>
I feel compelled to explain why I am open-minded on this question perhaps more than anyone else. I have several reasons that I feel are important to remind all of us: </p><ol><li>
In mathematics people have guessed wrong before on famous open questions. </p><li>
The actual theorems about why <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> is weaker than <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> are extremely hard and very weak. </p><li>
If <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%3D+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} = &#92;mathsf{NP}}' title='{&#92;mathsf{P} = &#92;mathsf{NP}}' class='latex' /> it could still be that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> is computable in time <img src='http://s0.wp.com/latex.php?latex=%7B+n%5E%7B2%5E%7B1000%7D%7D.+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{ n^{2^{1000}}. }' title='{ n^{2^{1000}}. }' class='latex' /></p><li>
If <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> it could still be that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> is computable in time <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7B%5Clog+n%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{&#92;log n}}' title='{n^{&#92;log n}}' class='latex' />&#8212;while the evidence cited by Scott is properly for an exponential lower bound.
</ol><p>
We&#8217;ll address the full <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> versus <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> question, and not situations where say the algorithm generating <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> instances is restricted to <img src='http://s0.wp.com/latex.php?latex=%7Br%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r(n)}' title='{r(n)}' class='latex' /> random bits&#8212;a case in which we&#8217;ve <a href=\"http://rjlipton.wordpress.com/2013/08/23/a-world-without-randomness/\">noted</a> that in the limit one can solve them all in something like time <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28n%292%5E%7Br%28n%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(n)2^{r(n)}}' title='{&#92;mathsf{poly}(n)2^{r(n)}}' class='latex' />. </p><p><p><H2> Bad Guesses </H2></p><p><p>
I have discussed guesses in mathematics <a href=\"http://rjlipton.wordpress.com/2009/02/19/we-all-guessed-wrong/\">many</a><a href=\"http://rjlipton.wordpress.com/2009/09/27/surprises-in-mathematics-and-theory\">times</a><a href=\"http://rjlipton.wordpress.com/2010/06/19/guessing-the-truth/\">before</a><a href=\"http://rjlipton.wordpress.com/2011/04/13/even-great-mathematicians-guess-wrong/\">on</a><a href=\"http://rjlipton.wordpress.com/2011/05/04/guessing/\">this</a><a href=\"http://rjlipton.wordpress.com/2011/08/01/guessing-again/\">blog</a>. One of the biggest issues in guessing wrong is that people do not take seriously the other possibility. Researchers tend not to work on showing <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%3D+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} = &#92;mathsf{NP}}' title='{&#92;mathsf{P} = &#92;mathsf{NP}}' class='latex' /> anymore. Research support does not go there, since we all &#8220;know&#8221; that it would be a waste of time, and there are other consequences to the field. </p><p>
Here are some famous guesses that were essentially off by exponentials. For each I will list the time gap between the initial problem being raised and being solved.</p><ul><li><b>The Borsuk Conjecture [60 years].</b>  It was claimed that <img src='http://s0.wp.com/latex.php?latex=%7Bd%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d+1}' title='{d+1}' class='latex' /> was the answer to this <a href=\"http://en.wikipedia.org/wiki/Borsuk's_conjecture\">geometric conjecture</a>. Many top people worked on it for years and partial results were proved, showing <img src='http://s0.wp.com/latex.php?latex=%7Bd%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d+1}' title='{d+1}' class='latex' /> is correct in many important cases. Then Gil Kalai and Jeff Kahn proved that <img src='http://s0.wp.com/latex.php?latex=%7Bd%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d+1}' title='{d+1}' class='latex' /> was slightly off; the correct answer is exponential&#8212;at least <img src='http://s0.wp.com/latex.php?latex=%7Bc%5E%7B%5Csqrt%7Bd%7D%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{c^{&#92;sqrt{d}}}' title='{c^{&#92;sqrt{d}}}' class='latex' /> for some <img src='http://s0.wp.com/latex.php?latex=%7Bc%3E1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{c&gt;1}' title='{c&gt;1}' class='latex' />, and possibly with <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> in the exponent. </p><li><b>Barrington&#8217;s Theorem [26 years].</b>  I worked on lower bounds to show that bounded width computation could not compute the majority function. This was joint work with Ashok Chandra and Merrick Furst, which introduced multi-party communication. Then David Barrington came along and proved that bounded width could do all of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNC%7D%5E%7B1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NC}^{1}}' title='{&#92;mathsf{NC}^{1}}' class='latex' />. Hmmmm.</p><li><b>Law of Small Numbers [118 years].</b><br />
It was noticed by Gauss that 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cpi%28x%29+%3C+li%28x%29%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;pi(x) &lt; li(x), ' title='&#92;displaystyle  &#92;pi(x) &lt; li(x), ' class='latex' /></p><p>
for all reasonable size <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. Here <img src='http://s0.wp.com/latex.php?latex=%7Bli%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{li(x)}' title='{li(x)}' class='latex' /> is the logarithmic intergal 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cint_%7B0%7D%5E%7Bx%7D%5Cfrac%7Bdt%7D%7B%5Cln+t%2C%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;int_{0}^{x}&#92;frac{dt}{&#92;ln t,} ' title='&#92;displaystyle  &#92;int_{0}^{x}&#92;frac{dt}{&#92;ln t,} ' class='latex' /></p><p>
which is an asympotic approximation to <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(x)}' title='{&#92;pi(x)}' class='latex' />, the number of primes less than <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. It was conjectured that this would always hold and was widely believed for over a century. Then John Littlewood proved that the lead changes between <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(x)}' title='{&#92;pi(x)}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bli%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{li(x)}' title='{li(x)}' class='latex' /> infinitely often, although the first switch is upper bounded by an immense number. Richard Guy wrote a wonderful <a href=\"http://www.math.sjsu.edu/~hsu/courses/126/Law-of-Small-Numbers.pdf\">article</a> on what he called the &#8220;The Strong Law of Small Numbers&#8221;: cases when evident phenomena held for small numbers but eventually would fail. Here is a <a href=\"http://googology.wikia.com/wiki/Strong_Law_of_Small_Numbers\">table</a> with other examples:
</ul><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/lawsmall.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/lawsmall.png?w=540&#038;h=393\" alt=\"lawsmall\" width=\"540\" height=\"393\" class=\"aligncenter wp-image-11377\" /></a></p><p>
By the way the &#8220;common clock&#8221; on <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq {NP}}' title='{&#92;mathsf{P} &#92;neq {NP}}' class='latex' /> is 43 years.</p><p><p><H2> Weak Theorems and Galactic Algorithms </H2></p><p><p>
We do have the theorem that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BDTIME%7D%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{DTIME}(n)}' title='{&#92;mathsf{DTIME}(n)}' class='latex' /> is not equal to <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNTIME%7D%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NTIME}(n)}' title='{&#92;mathsf{NTIME}(n)}' class='latex' />, which we have discussed <a href=\"http://rjlipton.wordpress.com/2011/01/19/we-believe-a-lot-but-can-prove-little/\">before</a> and which is particular to the multitape Turing machine model&#8212;make the tapes planes or trees and it goes away. We cannot even deduce from it that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BDTIME%7D%28n%5E%7B2%7D%29+%5Cneq+%5Cmathsf%7BNTIME%7D%28n%5E%7B2%7D%29.+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{DTIME}(n^{2}) &#92;neq &#92;mathsf{NTIME}(n^{2}). }' title='{&#92;mathsf{DTIME}(n^{2}) &#92;neq &#92;mathsf{NTIME}(n^{2}). }' class='latex' /> That&#8217;s pretty weak. Remember that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' title='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' class='latex' /> means that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BDTIME%7D%28n%5E%7B1000%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{DTIME}(n^{1000})}' title='{&#92;mathsf{DTIME}(n^{1000})}' class='latex' /> does not contain <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNTIME%7D%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NTIME}(n)}' title='{&#92;mathsf{NTIME}(n)}' class='latex' />. And more, of course. </p><p>
The <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> versus <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /><em>statement</em> still allows cross-cutting the generally-understood <em>significance</em>. That is:</p><ul><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' /> allows <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> to have no less than an <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7B1%2C000%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{1,000}}' title='{n^{1,000}}' class='latex' />-time algorithm. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> still allows <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> to have an <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7B%5Clog%5E%7B%2A%7D+n%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{&#92;log^{*} n}}' title='{n^{&#92;log^{*} n}}' class='latex' />-time algorithm.
</ul><p>
To be sure, some evidence cited by Scott is really for an exponential lower bound on <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' />; we have <a href=\"http://rjlipton.wordpress.com/2011/07/04/getting-on-base-with-pnp/\">discussed</a> this before too. But what we are saying still cuts against the usual argument that &#8220;many people have worked on looking for algorithms for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' />.&#8221; Yes many have looked for algorithms, but most were interested in &#8220;real&#8221; practical algorithms. For this kind of quest there is not much difference between <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7B20%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{20}}' title='{n^{20}}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B2%5E%7Bn%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^{n}}' title='{2^{n}}' class='latex' />. </p><p>
Aram Harrow communicates to us a more-concrete version of this point, which also serves as a bridge to Ken&#8217;s musings. 	</p><p><p><H2> Aram&#8217;s Bridging Thoughts </H2></p><p><p>
Quoting Aram, with light editing: &#8220;One of the stronger reasons for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> is the Bayesian one&#8212;it is easier to find algorithms than lower bounds, so our failure to find a subexponential-time algorithm for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' /> speaks louder than our failure to find a super-linear lower bound for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' />. A related way of expressing this is that before <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-completeness was understood, thousands of researchers in disparate fields were unwittingly all trying to put <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' /> into <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />.</p><p>
But a counter-argument is that all of those seemingly independent researchers would always come up with algorithms that relied on a few kinds of structure&#8212;a lot is covered by just two kinds: </p><ul><li>
Convexity/absence of local minima&#8212;cases where greedy algorithms work. </p><li>
Tree structure&#8212;cases where dynamic programming, divide-and-conquer, and related ideas work.
</ul><p>
This <em>paucity of algorithmic variety</em> can be viewed in (at least) two ways:</p><ol><li>
Algorithms, like oil deposits, are a finite resource. We&#8217;ve found all the important ones, and <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' /> is always going to require exponential time. </p><li>
The paucity is a sociological phenomenon, due to the fact that all researchers have learned essentially similar math backgrounds.
</ol><p>
On the latter, Terry Tao&#8217;s recent <a href=\"http://terrytao.wordpress.com/2014/02/04/finite-time-blowup-for-an-averaged-three-dimensional-navier-stokes-equation/\">breakthrough</a> on the Navier-Stokes equations is an example of how much the same ideas keep recirculating, and how much more quickly progress can be made by cross-applying ideas rather than coming up with radically new ones. Going from Erwin Schr&ouml;dinger&#8217;s equation to Peter Shor&#8217;s quantum factoring algorithm is a 60-minute lecture, but it took over 60 years (and a change in perspective coming from the computer revolution) to discover. Our lack of algorithms reveals only our lack of creativity, and it is arrogant to posit fundamental limits to mathematics just because we can&#8217;t solve a problem. Either way, the central question isn&#8217;t so much about <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> but rather a &#8220;throwback&#8221; of a question now being asked about quantum computers:</p><blockquote><p>
Where does the power of deterministic algorithms come from?
</p></blockquote><p>
A related question is the power of the <a href=\"http://math.mit.edu/~rothvoss/lecturenotes/lasserresurvey.pdf\">Lasserre hierarchy</a>. It has been shown to be effective for a large number of problems, but with a surprisingly small number of truly different techniques. I would love to know whether further work will increase or decrease the number of ways in which we know how to use it; that is, either by discovering new methods or by unifying apparently different methods.&#8221;</p><p><p><H2> Ken&#8217;s Sixth World </H2></p><p><p>
The Lasserre hierarchy builds upon LP&#8217;s and SDP&#8217;s, and this brings us back to the intro. I (still Dick) remember many people in the 1970&#8242;s trying to prove that certain linear/convex programming problems were <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard, despite all our confidence in the simplex algorithm for daily use. This makes Ken wonder:</p><blockquote><p>
What if SDP&#8217;s really were hard?
</p></blockquote><p>
Russell Impagliazzo famously categorized <a href=\"http://intractability.princeton.edu/blog/2009/05/program-for-workshop-on-impagliazzos-worlds/\">five worlds</a> that are consistent with current knowledge of complexity. Is there room to analyze any more, ones that are inconsistent now, but might have been meaningfully consistent had our field taken a different path?</p><p>
All of Impagliazzo&#8217;s worlds&#8212;including ones with <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> and with <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' />&#8212;have been instantiated via oracle results. All oracle results involve pretending that some ostensibly hard problem is easy. For instance, the world with <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' /> involves pretending <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' />-complete problems are easy, while known ones for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> involve granting free access to a set coded so that the free access itself activates a diagonalization. What I (Ken) wonder is whether there is a sensible formal way to do &#8220;Reverse Oracle Results,&#8221; which pretend that some easy problem <img src='http://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> is hard.</p><p><p>
One known way to get this effect is to narrow the definition of &#8220;easy&#8221; so that <img src='http://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> still has easy reductions <b>to</b><img src='http://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> from other problems <img src='http://s0.wp.com/latex.php?latex=%7BW%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{W}' title='{W}' class='latex' />. For example, linear programming problems are <a href=\"http://en.wikipedia.org/wiki/P-complete#P-complete_problems\">P-complete</a> under logspace (and even easier) reductions, as are problems of approximation by SDP&#8217;s. But here I mean something more structural&#8212;a sense in which <img src='http://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> is the <em>only</em> route to solving a whole class of problems <img src='http://s0.wp.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Y}' title='{Y}' class='latex' />. Then we can segregate this entire class and pretend it all is hard. It might suffice to give &#8220;easy&#8221; reductions <b>from</b><img src='http://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> to all these <img src='http://s0.wp.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Y}' title='{Y}' class='latex' />. In particular, a lot of <img src='http://s0.wp.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Y}' title='{Y}' class='latex' />&#8216;s are solved via the interior-point paradigm for (LP&#8217;s and) SDP&#8217;s. It could also employ ideas in <a href=\"http://en.wikipedia.org/wiki/Reverse_mathematics\">reverse mathematics</a>.</p><p><H2> Countering Factuals with Counterfactuals </H2></p><p><p>
Scott replied to my <a href=\"http://www.scottaaronson.com/blog/?p=1720#comment-101896\">comment</a> about a possible <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7B20%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{20}}' title='{n^{20}}' class='latex' /> algorithm for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> in his post by referring to his earlier <a href=\"http://www.scottaaronson.com/blog/?p=1720#comment-101751\">comment</a> that:</p><blockquote><p>
Since it would be inelegant and unnatural for the class <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> to be &#8220;severed into two&#8221; in this way, I&#8217;d say the much likelier possibility is simply that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.
</p></blockquote><p>
Our point is, perhaps <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> remains already manifestly &#8220;severed into two&#8221; along Khachiyan&#8217;s and the interior-point fault-lines. In particular, we wonder how the following consequences would have looked as conditional results had they been proved in the late 1970&#8242;s:</p><p><blockquote><p><b>Theorem 1</b><em> If <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%3D+P%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP = P}}' title='{&#92;mathsf{SDP = P}}' class='latex' />, then it is possible to compute in polynomial time close approximations to a function <img src='http://s0.wp.com/latex.php?latex=%7B%5Cvartheta%28G%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;vartheta(G)}' title='{&#92;vartheta(G)}' class='latex' /> of undirected graphs <img src='http://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{G}' title='{G}' class='latex' /> that is <a href=\"http://en.wikipedia.org/wiki/Lov%C3%A1sz_number#Lov.C3.A1sz_.22sandwich_theorem.22\">sandwiched</a> between the <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete clique number <img src='http://s0.wp.com/latex.php?latex=%7B%5Comega%28G%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;omega(G)}' title='{&#92;omega(G)}' class='latex' /> and chromatic number <img src='http://s0.wp.com/latex.php?latex=%7B%5Cchi%28G%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;chi(G)}' title='{&#92;chi(G)}' class='latex' />, which all coincide whenever neither <img src='http://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{G}' title='{G}' class='latex' /> nor its complement has an odd induced cycle.<br /></em></p></blockquote><blockquote><p><b>Theorem 2</b><em> If <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%3D+P%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP = P}}' title='{&#92;mathsf{SDP = P}}' class='latex' />, then <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BMAX+CUT%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{MAX CUT}}' title='{&#92;mathsf{MAX CUT}}' class='latex' /> is polynomial-time approximable within <img src='http://s0.wp.com/latex.php?latex=%7B0.87856%5Cdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{0.87856&#92;dots}' title='{0.87856&#92;dots}' class='latex' />, even though it is <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard to approximate within <img src='http://s0.wp.com/latex.php?latex=%7B0.941%5Cdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{0.941&#92;dots}' title='{0.941&#92;dots}' class='latex' />. </em></p></blockquote><p>In the first theorem we have also inverted time by embracing the <a href=\"http://en.wikipedia.org/wiki/Strong_perfect_graph_theorem\">Strong Perfect Graph Theorem</a> which was proved in 2002 (final in 2006), but this conjecture was strongly felt and makes it transparent that many important families of graphs are perfect.  Hence the sweeping tractability of major <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete problems on these cases could be a surprise.  On the second theorem, why should the difference between <img src='http://s0.wp.com/latex.php?latex=%7B0.878%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0.878}' title='{0.878}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B0.9412%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0.9412}' title='{0.9412}' class='latex' /> matter to such a simple problem as <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BMAX+CUT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{MAX CUT}}' title='{&#92;mathsf{MAX CUT}}' class='latex' />? </p><p>
Of course in the light of knowledge we understand how these two <a href=\"http://en.wikipedia.org/wiki/Holographic_algorithm#History\">famous</a><a href=\"http://en.wikipedia.org/wiki/Semidefinite_programming#Example_3_.28Goemans-Williamson_MAX_CUT_approximation_algorithm.29\">theorems</a> work. On the latter the Unique Games Conjecture already helps explain how <img src='http://s0.wp.com/latex.php?latex=%7B0.87856%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0.87856&#92;dots}' title='{0.87856&#92;dots}' class='latex' /> may be special. But the present exercise is about how we reason when we don&#8217;t (yet) have the light of knowledge.</p><p><p><H2> Open Problems </H2></p><p><p>
Can we make some formal sense of a world where Khachiyan&#8217;s breakthrough never happens?</p><p><P><br /><b>Update 3/18/14:</b> The comments section has some excellent replies, including ones on the argument of the last two sections <a href=\"http://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/#comment-44250\">by</a> Scott Aaronson and <a href=\"http://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/#comment-44206\">by</a> Timothy Gowers.</p><p><P><br /><b>Update 3/17/14:</b> The Lov&aacute;sz theta-function example replaced the post&#8217;s original quoting of Leslie Valiant&#8217;s first &#8220;<a>Accidental Algorithm</a>&#8221; under a mis-memory that LP&#8217;s were involved (and SDP&#8217;s in later developments).  Snipping the irrelevant qualifier, it reads:</p><blockquote><p><b>Theorem 3</b><em> Counting assignments to a certain class of planar formulas is deterministic polynomial-time computable modulo <img src='http://s0.wp.com/latex.php?latex=%7B7%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' />, or modulo any Mersenne prime, even though it is <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard modulo <img src='http://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7B5%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' />. </em></p></blockquote><p>Aside from the fact that this computation belongs to a class called <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BGapL%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{GapL}}' title='{&#92;mathsf{GapL}}' class='latex' /> which is commonly believed to be a proper subclass of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />, the intent was to argue: &#8220;What do Mersenne primes have to do with matchings and convex programming really? Surely counting must be equally hard modulo any odd prime&#8212;after all there&#8217;s no exception for Mersenne in modular circuit lower bounds&#8212;so <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%5Cneq+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP &#92;neq P}}' title='{&#92;mathsf{SDP &#92;neq P}}' class='latex' /> must be an &#8216;invisible fence&#8217; around this kind of ridiculousness.&#8221;  The intro and Borsuk statements were also amended.</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11375/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11375/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11375&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/feed/") (slash:comments nil "60") (media:content ((url . "http://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/khachiyan.png") (medium . "image")) (media:title ((type . "html")) "Khachiyan")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/lawsmall.png?w=600") (medium . "image")) (media:title ((type . "html")) "lawsmall")))) ("How To Carry Fame" "<p><font color=\"”#0066cc?\"><br /><em> Long proofs are not always the most important results </em><br /><font color=\"”#000000?\"></p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/unknown.jpeg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/unknown.jpeg?w=275\" alt=\"Unknown\" width=\"275\" class=\"alignright  wp-image-11367\" /></a></p><p>
Michael Rabin is visiting Georgia Tech today and tomorrow to give a pair of distinguished lectures. Both of these will be on applications of cryptography. One is to help auctions avoid cheaters, while the other is to help elections avoid cheaters. I see a pattern. Ken sees another pattern— he is helping chess tournaments avoid cheaters. </p><p>
Today I want to comment about Rabin’s fame and what makes a result important. </p><p><span id=\"more-11361\"></span></p><p>
I have known Michael since I was a graduate student at CMU—I have talked about this before <a href=\"http://rjlipton.wordpress.com/2009/03/01/rabin-flips-a-coin/\">here</a>. In the decades since then I have heard him given many talks, all of which have been brilliant. He is one of the best presenters of technical material I have every seen, perhaps the best in the world. My “proof” of this statement is:</p><blockquote><p>
that I can still recall—in detail—most of his talks, even ones from decades ago.
</p></blockquote><p>Can you recall that talk you heard last year, or even one you heard last month? I have trouble recalling my own talks. But Michael’s talks are special, memorable, informative, clear, and fun.</p><p><h2> Great Talks </h2><p><p>
I have selected a few talks of Michael that I recall in great detail—they span about forty years. There are many others that I could have added, but these should make my point.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on <i>Theoretical impediments to artificial intelligence</i>, was the first of his talks that I had ever heard. It was at the 1974 <a href=\"http://www.informatik.uni-trier.de/~ley/db/conf/ifip/ifip74.html\">IFIP Congress</a>, which occurred in Stockholm Sweden. There was a time when the IFIP Congress was a major conference that many of us went to. I met Dick Karp there for the first time.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on the introduction of <i>randomness</i> to algorithms, which was given at Yale when I was there as a junior faculty member. It was in 1977, I recall. This talk made the case for the power of randomness—Michael showed that randomness could help in a certain geometric search problem. I talked about this in detail in the same <a href=\"http://rjlipton.wordpress.com/2009/03/01/rabin-flips-a-coin/\">post</a> with the CMU story. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on the <i>Karp-Rabin pattern matching algorithm</i> was given in the 1980′s at Princeton University. We have also talked about this before <a href=\"http://rjlipton.wordpress.com/2009/04/16/the-word-problem-for-free-groups/\">here</a>.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on <i>hyper-encryption</i> was given at Georgia Tech about ten years ago. This was an cool idea—I believe—on using non-complexity assumptions to build encryption methods that were very powerful. The short insight was that memory is expensive, and one could defeat an adversary that had limited memory. This yielded a protocol that needed no assumptions about factoring or the existence of one-way functions.</p><p><h2> Great Results </h2><p><p>
Why indeed is Rabin famous? He received the Turing Award with Dana Scott for their work on finite state automata (FSA). I would argue that his most exciting results were curiously his least deep results. We all know about FSA; his introduction of randomness to all parts of computing; his primality test, independent but related to Gary Miller’s work; his pattern matching algorithm with Karp; and much more. Yet, I would argue that his deepest result is probably his least known. It was, is, his brilliant work on S2S.</p><p><h2> Second Order Monadic Theory </h2><p><p>
What is S2S? </p><p>
There are many logical theories that we study, such as Peano Arithmetic (PA). PA is a first-order theory. This means that quantifiers can only range over individual elements—in PA they range over integers. Thus, in PA we can say
<p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cforall+x+%5C+%5Cexists+r+%5C+%5Cexists+s+%5C+%5Cexists+t+%28t%5Cneq+0+%5Cwedge+tx+%3D+r%5E%7B3%7D+%2B+s%5E%7B3%7D%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;forall x &#92; &#92;exists r &#92; &#92;exists s &#92; &#92;exists t (t&#92;neq 0 &#92;wedge tx = r^{3} + s^{3}). ' title='&#92;displaystyle  &#92;forall x &#92; &#92;exists r &#92; &#92;exists s &#92; &#92;exists t (t&#92;neq 0 &#92;wedge tx = r^{3} + s^{3}). ' class='latex' /></p><p> This states that all numbers have a non-zero multiple that is a sum of two cubes. This is <a href=\"http://www.emis.de/journals/JIS/VOL6/Broughan/broughan25.pdf\">true</a>—but it is not trivial. </p><p>
The reason PA is so powerful is that it allows both addition and multiplication. Given a statement like the above about cubes it is impossible, in general, to decide whether the statement is true or not. </p><p>
We obviously like decidable theories since at least in principle they allow us to tell if a statement is true or false. Of course if <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' title='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' class='latex' />, then even for a decidable theory it may be hard to tell whether something is true. But still decidable is a great property for a theory to have. </p><p>
A difficulty is the tension between being an expressive theory and being decidable. PA is very expressive, most everyday theorems of mathematics can be proved in it, at least in principle. It is so expressive that even weak subtheories are undecidable. </p><p>
Enter S2S. The theory S2S is a different kind of theory from PA. While PA is a first-order theory, S2S is a second-order theory. The “S” in “S2S” stands for <i>second order</i>. It allows quantifiers to range over individual elements and also over finite or infinite sets of elements. The basic objects in S2S are finite paths in the infinite binary tree. </p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/rabintree.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/rabintree.png?w=300\" alt=\"RabinTree\" width=\"300\" class=\"aligncenter  wp-image-11363\" /></a></p><p align=\"center\"><p>
In S2S we can talk about the left and right successor to any such element: if <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> is an element, then <img src='http://s0.wp.com/latex.php?latex=%7Bx0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x0}' title='{x0}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bx1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x1}' title='{x1}' class='latex' /> are the respective successors. Since it is a second order theory we are also allowed quantifiy over sets of such elements. </p><p><h2> Decidedly More Power </h2><p><p>
The ability to quantify over sets makes S2S very <a href=\"http://research.microsoft.com/en-us/um/people/gurevich/opera/64.pdf\">powerful</a> and expressive. For example, here are two notions expressed <a href=\"http://scandinavianlogic.org/material/norway3a.pdf\">formally</a>:</p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/lex.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/lex.png?w=300\" alt=\"lex\" width=\"300\" class=\"aligncenter  wp-image-11364\" /></a></p><p align=\"center\"><p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/finite.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/finite.png?w=300\" alt=\"finite\" width=\"300\" class=\"aligncenter  wp-image-11365\" /></a></p><p>
The magic of this is that while the theory is expressive, it is not <b>too</b> expressive. Indeed the Rabin proved in 1969: </p><blockquote><p><b>Theorem 1</b><em> The monadic second order theory of the infinite binary tree is decidable. </em></p></blockquote><p><p>
When I first looked at Rabin’s paper, as a graduate student at CMU, it was not the depth of his proof, which is wonderful, but rather the array of applications that followed that excited me. One measure of the depth of a theorem is the number of open problems it solves. Rabin’s theorem can be used to prove the following other theories are decidable: </p><ul><li> The first order theory of rationals with the order <img src='http://s0.wp.com/latex.php?latex=%7B%3C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&lt;}' title='{&lt;}' class='latex' /> relation.
<li> The first order theory of boolean algebras with ideals.
<li> Certain modal logics, such as S4.
</ul><p> These results follow by encoding the decidability question into the powerful theory S2S and invoking Rabin’s Theorem. See this for a nice summary of S2S in slide <a href=\"http://shane.st/wp-content/uploads/2013/11/RabinsTheorem.pdf\">format</a> by Shane Steinert-Threlkeld. </p><p>
The proof of Rabin’s Theorem was a tour-de-force. It requires clever definitions and some quite detailed inductive arguments. Since his original proof people have found “easier” proofs, but the original was quite deep and intricate. </p><p>
I would argue that this theorem is one of the deepest results of Rabin’s many beautiful results over his long career. It is well known to those who work in logic and automata theory, but is perhaps less known to the whole theory community. If you already knew it fine, if not, then I hope you begin to appreciate the depth of his work.</p><p><h2> Open Problems </h2><p><p>
Perhaps a lesson here for all: fame comes from results that are game-changers, which does not always mean they are deep long complex arguments. Sometimes that is the case: clearly the solution to Fermat Last Theorem and the Poincar&eacute; Conjecture are famous and deep results. Yet many times I think Rabin’s situation is more often the case: a simple to state result that yields an “ah” moment, that opens doors for others, that changes the landscape of thinking about an area, is the most important type of result. Rabin has many many of these results. I would argue that without S2S he still would be one of the greatest theorists who has ever lived.</p><p>
What do you think?</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11361/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11361/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11361&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "http://rjlipton.wordpress.com/2014/03/10/how-to-carry-fame/" (21277 53158) new 9 nil nil ((title nil "How To Carry Fame") (link nil "http://rjlipton.wordpress.com/2014/03/10/how-to-carry-fame/") (comments nil "http://rjlipton.wordpress.com/2014/03/10/how-to-carry-fame/#comments") (pubDate nil "Mon, 10 Mar 2014 14:43:50 +0000") (dc:creator nil "rjlipton") (category nil "History") (category nil "People") (category nil "Proofs") (category nil "decidable") (category nil "fame") (category nil "Logic") (category nil "Rabin") (category nil "S2S") (category nil "talks") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11361") (description nil "Long proofs are not always the most important results Michael Rabin is visiting Georgia Tech today and tomorrow to give a pair of distinguished lectures. Both of these will be on applications of cryptography. One is to help auctions avoid cheaters, while the other is to help elections avoid cheaters. I see a pattern. Ken [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11361&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Long proofs are not always the most important results </em><br /><font color=\"”#000000?\"></p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/unknown.jpeg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/unknown.jpeg?w=275\" alt=\"Unknown\" width=\"275\" class=\"alignright  wp-image-11367\" /></a></p><p>
Michael Rabin is visiting Georgia Tech today and tomorrow to give a pair of distinguished lectures. Both of these will be on applications of cryptography. One is to help auctions avoid cheaters, while the other is to help elections avoid cheaters. I see a pattern. Ken sees another pattern&#8212; he is helping chess tournaments avoid cheaters. </p><p>
Today I want to comment about Rabin&#8217;s fame and what makes a result important. </p><p><span id=\"more-11361\"></span></p><p>
I have known Michael since I was a graduate student at CMU&#8212;I have talked about this before <a href=\"http://rjlipton.wordpress.com/2009/03/01/rabin-flips-a-coin/\">here</a>. In the decades since then I have heard him given many talks, all of which have been brilliant. He is one of the best presenters of technical material I have every seen, perhaps the best in the world. My &#8220;proof&#8221; of this statement is:</p><blockquote><p>
 that I can still recall&#8212;in detail&#8212;most of his talks, even ones from decades ago.
</p></blockquote><p>Can you recall that talk you heard last year, or even one you heard last month? I have trouble recalling my own talks. But Michael&#8217;s talks are special, memorable, informative, clear, and fun.</p><p><h2> Great Talks </h2><p><p>
I have selected a few talks of Michael that I recall in great detail&#8212;they span about forty years. There are many others that I could have added, but these should make my point.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on <i>Theoretical impediments to artificial intelligence</i>, was the first of his talks that I had ever heard. It was at the 1974 <a href=\"http://www.informatik.uni-trier.de/~ley/db/conf/ifip/ifip74.html\">IFIP Congress</a>, which occurred in Stockholm Sweden. There was a time when the IFIP Congress was a major conference that many of us went to. I met Dick Karp there for the first time.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on the introduction of <i>randomness</i> to algorithms, which was given at Yale when I was there as a junior faculty member. It was in 1977, I recall. This talk made the case for the power of randomness&#8212;Michael showed that randomness could help in a certain geometric search problem. I talked about this in detail in the same <a href=\"http://rjlipton.wordpress.com/2009/03/01/rabin-flips-a-coin/\">post</a> with the CMU story. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on the <i>Karp-Rabin pattern matching algorithm</i> was given in the 1980&#8242;s at Princeton University. We have also talked about this before <a href=\"http://rjlipton.wordpress.com/2009/04/16/the-word-problem-for-free-groups/\">here</a>.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on <i>hyper-encryption</i> was given at Georgia Tech about ten years ago. This was an cool idea&#8212;I believe&#8212;on using non-complexity assumptions to build encryption methods that were very powerful. The short insight was that memory is expensive, and one could defeat an adversary that had limited memory. This yielded a protocol that needed no assumptions about factoring or the existence of one-way functions.</p><p><h2> Great Results </h2><p><p>
Why indeed is Rabin famous? He received the Turing Award with Dana Scott for their work on finite state automata (FSA). I would argue that his most exciting results were curiously his least deep results. We all know about FSA; his introduction of randomness to all parts of computing; his primality test, independent but related to Gary Miller&#8217;s work; his pattern matching algorithm with Karp; and much more. Yet, I would argue that his deepest result is probably his least known. It was, is, his brilliant work on S2S.</p><p><h2> Second Order Monadic Theory </h2><p><p>
What is S2S? </p><p>
There are many logical theories that we study, such as Peano Arithmetic (PA). PA is a first-order theory. This means that quantifiers can only range over individual elements&#8212;in PA they range over integers. Thus, in PA we can say
<p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cforall+x+%5C+%5Cexists+r+%5C+%5Cexists+s+%5C+%5Cexists+t+%28t%5Cneq+0+%5Cwedge+tx+%3D+r%5E%7B3%7D+%2B+s%5E%7B3%7D%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;forall x &#92; &#92;exists r &#92; &#92;exists s &#92; &#92;exists t (t&#92;neq 0 &#92;wedge tx = r^{3} + s^{3}). ' title='&#92;displaystyle  &#92;forall x &#92; &#92;exists r &#92; &#92;exists s &#92; &#92;exists t (t&#92;neq 0 &#92;wedge tx = r^{3} + s^{3}). ' class='latex' /></p><p> This states that all numbers have a non-zero multiple that is a sum of two cubes. This is <a href=\"http://www.emis.de/journals/JIS/VOL6/Broughan/broughan25.pdf\">true</a>&#8212;but it is not trivial. </p><p>
The reason PA is so powerful is that it allows both addition and multiplication. Given a statement like the above about cubes it is impossible, in general, to decide whether the statement is true or not. </p><p>
We obviously like decidable theories since at least in principle they allow us to tell if a statement is true or false. Of course if <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' title='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' class='latex' />, then even for a decidable theory it may be hard to tell whether something is true. But still decidable is a great property for a theory to have. </p><p>
A difficulty is the tension between being an expressive theory and being decidable. PA is very expressive, most everyday theorems of mathematics can be proved in it, at least in principle. It is so expressive that even weak subtheories are undecidable. </p><p>
Enter S2S. The theory S2S is a different kind of theory from PA. While PA is a first-order theory, S2S is a second-order theory. The &#8220;S&#8221; in &#8220;S2S&#8221; stands for <i>second order</i>. It allows quantifiers to range over individual elements and also over finite or infinite sets of elements. The basic objects in S2S are finite paths in the infinite binary tree. </p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/rabintree.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/rabintree.png?w=300\" alt=\"RabinTree\" width=\"300\" class=\"aligncenter  wp-image-11363\" /></a></p><p align=\"center\"><p>
In S2S we can talk about the left and right successor to any such element: if <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> is an element, then <img src='http://s0.wp.com/latex.php?latex=%7Bx0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x0}' title='{x0}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bx1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x1}' title='{x1}' class='latex' /> are the respective successors. Since it is a second order theory we are also allowed quantifiy over sets of such elements. </p><p><h2> Decidedly More Power </h2><p><p>
The ability to quantify over sets makes S2S very <a href=\"http://research.microsoft.com/en-us/um/people/gurevich/opera/64.pdf\">powerful</a> and expressive. For example, here are two notions expressed <a href=\"http://scandinavianlogic.org/material/norway3a.pdf\">formally</a>:</p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/lex.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/lex.png?w=300\" alt=\"lex\" width=\"300\" class=\"aligncenter  wp-image-11364\" /></a></p><p align=\"center\"><p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/finite.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/finite.png?w=300\" alt=\"finite\" width=\"300\" class=\"aligncenter  wp-image-11365\" /></a></p><p>
The magic of this is that while the theory is expressive, it is not <b>too</b> expressive. Indeed the Rabin proved in 1969: </p><blockquote><p><b>Theorem 1</b><em> The monadic second order theory of the infinite binary tree is decidable. </em></p></blockquote><p><p>
When I first looked at Rabin&#8217;s paper, as a graduate student at CMU, it was not the depth of his proof, which is wonderful, but rather the array of applications that followed that excited me. One measure of the depth of a theorem is the number of open problems it solves. Rabin&#8217;s theorem can be used to prove the following other theories are decidable: </p><ul><li> The first order theory of rationals with the order <img src='http://s0.wp.com/latex.php?latex=%7B%3C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&lt;}' title='{&lt;}' class='latex' /> relation.
<li> The first order theory of boolean algebras with ideals.
<li> Certain modal logics, such as S4.
</ul><p> These results follow by encoding the decidability question into the powerful theory S2S and invoking Rabin&#8217;s Theorem. See this for a nice summary of S2S in slide <a href=\"http://shane.st/wp-content/uploads/2013/11/RabinsTheorem.pdf\">format</a> by Shane Steinert-Threlkeld. </p><p>
The proof of Rabin&#8217;s Theorem was a tour-de-force. It requires clever definitions and some quite detailed inductive arguments. Since his original proof people have found &#8220;easier&#8221; proofs, but the original was quite deep and intricate. </p><p>
I would argue that this theorem is one of the deepest results of Rabin&#8217;s many beautiful results over his long career. It is well known to those who work in logic and automata theory, but is perhaps less known to the whole theory community. If you already knew it fine, if not, then I hope you begin to appreciate the depth of his work.</p><p><h2> Open Problems </h2><p><p>
Perhaps a lesson here for all: fame comes from results that are game-changers, which does not always mean they are deep long complex arguments. Sometimes that is the case: clearly the solution to Fermat Last Theorem and the Poincar&eacute; Conjecture are famous and deep results. Yet many times I think Rabin&#8217;s situation is more often the case: a simple to state result that yields an &#8220;ah&#8221; moment, that opens doors for others, that changes the landscape of thinking about an area, is the most important type of result. Rabin has many many of these results. I would argue that without S2S he still would be one of the greatest theorists who has ever lived.</p><p>
What do you think?</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11361/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11361/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11361&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/03/10/how-to-carry-fame/feed/") (slash:comments nil "14") (media:content ((url . "http://1.gravatar.com/avatar/afaa664a052777146630095c596117b2?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "lipton")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/unknown.jpeg") (medium . "image")) (media:title ((type . "html")) "Unknown")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/rabintree.png") (medium . "image")) (media:title ((type . "html")) "RabinTree")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/lex.png") (medium . "image")) (media:title ((type . "html")) "lex")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/finite.png") (medium . "image")) (media:title ((type . "html")) "finite")))) ("Codes Meet Numbers" "<p><font color=\"”#0066cc?\"><br /><em> Results and problems about primes that make us think of coding theory </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/03/suninsun.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/suninsun.png?w=600\" alt=\"SunInSun\"   class=\"alignright size-full wp-image-11352\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Cropped from <a href=\"http://math.nju.edu.cn/~zwsun/with%20Prof.%20K.%20Rubin%20and%20D.%20Wan.jpg\">source</a>.<br /></FONT></td></table><p>
Zhi-Wei Sun is a professor in Mathematics at Nanjing University in China. He is the Editor in Chief of the recently-founded Journal of Combinatorics and Number Theory. His <a href=\"http://math.nju.edu.cn/~zwsun/\">homepage</a> is unique in prominently featuring a long list of </p><ul><li>
…not his awards, </p><li>
…not his papers, </p><li>
…not his theorems, </p><li>
…but rather his <em>conjectures</em>.
</ul><p>Indeed we count 432 total conjectures in his list, subtracting one that he seems last year to have proved. They do not seem to be easy conjectures—this <a href=\"https://listserv.nodak.edu/cgi-bin/wa.exe?A2=NMBRTHRY;3d24b586.1206\">one</a> implies the Riemann Hypothesis in a nontrivial way. Some of them involve powers of 2, which lend them a coding-theory flavor. </p><p>Today Ken and I wish to share ideas of using coding theory to prove number-theoretic results.<span id=\"more-11351\"></span></p><p>
Coding theory owes much to Richard Hamming, who defined <b>Hamming distance</b> between codewords and created the binary Hamming codes. The <b>Hamming sphere</b> of radius <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> centered on a word <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> is the set of all words <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> of the same length whose Hamming distance is at most <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' />, meaning <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> differ in at most <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> places. Our question is how the distributions of prime numbers and other sets relate to the Hamming spheres of their binary encodings. For example, <img src='http://s0.wp.com/latex.php?latex=%7B5+%3D+101%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{5 = 101}' title='{5 = 101}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B7+%3D+111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7 = 111}' title='{7 = 111}' class='latex' /> are twin primes of Hamming distance <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />, while <img src='http://s0.wp.com/latex.php?latex=%7B11+%3D+1011%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{11 = 1011}' title='{11 = 1011}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B13+%3D+1101%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{13 = 1101}' title='{13 = 1101}' class='latex' /> have distance <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />.</p><p>
Sun has his own “Super Twin Prime Conjecture” listed first on his page. Call a pair <img src='http://s0.wp.com/latex.php?latex=%7B%28k%2Cm%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(k,m)}' title='{(k,m)}' class='latex' /> of integers “super” if <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%28k%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(k)}' title='{&#92;pi(k)}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%28%5Cpi%28m%29%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(&#92;pi(m))}' title='{&#92;pi(&#92;pi(m))}' class='latex' /> are both twin primes, indeed the lower member of a twin pair, where <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%28k%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(k)}' title='{&#92;pi(k)}' class='latex' /> denotes the <img src='http://s0.wp.com/latex.php?latex=%7Bk%5E%7Bth%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k^{th}}' title='{k^{th}}' class='latex' /> prime number. The conjecture—a hybrid of Twin and Goldbach—is:</p><blockquote><p>
Every integer <img src='http://s0.wp.com/latex.php?latex=%7Bn+%5Cgeq+3%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n &#92;geq 3}' title='{n &#92;geq 3}' class='latex' /> is the sum of a super pair.
</p></blockquote><p>
He has verified this for <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> up to <img src='http://s0.wp.com/latex.php?latex=%7B10%5E9%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{10^9}' title='{10^9}' class='latex' />. What can motivate such a conjecture? Certainly one motivation is expected density—not only “should” the twin primes be infinite, but they should be dense enough to fill this kind of requirement, much as the set of primes themselves is dense enough to make Goldbach’s conjecture—that every even number <img src='http://s0.wp.com/latex.php?latex=%7Bn+%5Cgeq+4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n &#92;geq 4}' title='{n &#92;geq 4}' class='latex' /> is the sum of two primes—plausible. But what other structure can supply motivation? That is what we seek.</p><p><p><H2> Numbers and Codes </H2></p><p><p>
Coding theory is all about the properties of vectors over finite sets, often over the binary field <img src='http://s0.wp.com/latex.php?latex=%7B%5C%7B0%2C1%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{0,1&#92;}}' title='{&#92;{0,1&#92;}}' class='latex' />. Of course number theory is all about the additive and multiplicative properties of integers. These seem to be vastly different, yet they are related: every number can be represented by a binary vector. </p><p>
Coding theory gives a way to express relationships that might be cumbersome with arithmetical tools such as congruences. For example, say a number <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> is “top modulo <img src='http://s0.wp.com/latex.php?latex=%7B2%5Em%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^m}' title='{2^m}' class='latex' />” if its <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' />-bit encoding begins with a <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />. Of course we can specify this as <img src='http://s0.wp.com/latex.php?latex=%7B2%5E%7Bm-1%7D+%5Cleq+r+%3C+2%5Em%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^{m-1} &#92;leq r &lt; 2^m}' title='{2^{m-1} &#92;leq r &lt; 2^m}' class='latex' />, but “less-than” is a dodgy concept when working modulo some number. When <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> is odd we might want to define instead that the <em>middle</em> bit of <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> in binary is a <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />. Middle bits are sometimes important in crypto, but relations involving them are not always easy to define via congruences.</p><p>
Of course a number is odd iff its last bit in binary is <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />, and is congruent to <img src='http://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> mod <img src='http://s0.wp.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' /> iff its second-last bit is also <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />. The distinction between congruence to <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> versus <img src='http://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> mod <img src='http://s0.wp.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' /> is generally important for odd primes. How about congruence to <img src='http://s0.wp.com/latex.php?latex=%7B5%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7B7%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' /> mod <img src='http://s0.wp.com/latex.php?latex=%7B8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{8}' title='{8}' class='latex' />, versus <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' />, that is being top mod <img src='http://s0.wp.com/latex.php?latex=%7B8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{8}' title='{8}' class='latex' />? Of course one important distinction is which congruences are quadratic residues, but with binary-code notions we can define others.</p><p>
The number <img src='http://s0.wp.com/latex.php?latex=%7B71+%3D+1000111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{71 = 1000111}' title='{71 = 1000111}' class='latex' /> is congruent to <img src='http://s0.wp.com/latex.php?latex=%7B7%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' /> mod <img src='http://s0.wp.com/latex.php?latex=%7B8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{8}' title='{8}' class='latex' />, and is part of a twin pair of Hamming distance <img src='http://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7B73+%3D+1001001%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{73 = 1001001}' title='{73 = 1001001}' class='latex' />. The first twin pair with greater Hamming distance actually gives distance <img src='http://s0.wp.com/latex.php?latex=%7B6%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{6}' title='{6}' class='latex' />: <img src='http://s0.wp.com/latex.php?latex=%7B191+%3D+10111111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{191 = 10111111}' title='{191 = 10111111}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B193+%3D+11000001%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{193 = 11000001}' title='{193 = 11000001}' class='latex' />. Next comes <img src='http://s0.wp.com/latex.php?latex=%7B2687+%3D+10101111111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2687 = 10101111111}' title='{2687 = 10101111111}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B2689+%3D+10110000001%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2689 = 10110000001}' title='{2689 = 10110000001}' class='latex' /> for distance <img src='http://s0.wp.com/latex.php?latex=%7B7%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' />. Is the Hamming distance of twin primes unbounded? </p><p>
Of course we don’t even know if there are infinitely many twin primes. This is really asking whether twin primes can flank a multiple of an arbitrarily large power of <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. Quick web searches have not found this question, while our point is that our motive came from the coding-theory angle.</p><p><p><H2> Polignacs and Twins and Spheres </H2></p><p><p>
In 1848, Camille Marie de Polignac somewhat lazily conjectured that every odd number <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> is the sum of a prime number and a power of <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. We speculate that he may have intended to exclude false cases such as <img src='http://s0.wp.com/latex.php?latex=%7Bn+%3D+127%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n = 127}' title='{n = 127}' class='latex' /> where <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> itself is prime, but even so he missed <img src='http://s0.wp.com/latex.php?latex=%7Bn+%3D+905%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n = 905}' title='{n = 905}' class='latex' /> amid his reported (but to us incredible) claim to have verified this up to about 3 million. Perhaps it was spoken with the bluster of a Confederate major-general during the Civil War, which is surprisingly what this French nobleman <a href=\"http://en.wikipedia.org/wiki/Camille_Armand_Jules_Marie,_Prince_de_Polignac\">became</a>. </p><p>
His older brother, Alphonse de Polignac, made a somewhat less lazy conjecture: that every even number <img src='http://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k}' title='{k}' class='latex' /> is the difference between infinitely many pairs of consecutive primes. Of course with <img src='http://s0.wp.com/latex.php?latex=%7Bk%3D2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k=2}' title='{k=2}' class='latex' /> this subsumes the Twin Primes Conjecture, and indeed the latter is sometimes called de Polignac’s Conjecture after him. </p><p>
Should Camille have teamed up with his brother to make his conjecture? And would they have done better if they had been twins—maybe prove something about their conjecture? Well we have an example to go by: Zhi-Wei Sun has a twin brother, Zhi-Hong Sun at Huaiyin Normal University, and they teamed up in 1992 to prove something about the following conjecture by Donald Wall:</p><blockquote><p>
There are infinitely many primes <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> such that either <img src='http://s0.wp.com/latex.php?latex=%7Bp+%5Cequiv+%5Cpm+1%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p &#92;equiv &#92;pm 1}' title='{p &#92;equiv &#92;pm 1}' class='latex' /> modulo <img src='http://s0.wp.com/latex.php?latex=%7B5%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bp%5E2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p^2}' title='{p^2}' class='latex' /> divides the Fibonacci number <img src='http://s0.wp.com/latex.php?latex=%7BF_%7Bp+-+1%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_{p - 1}}' title='{F_{p - 1}}' class='latex' />, or <img src='http://s0.wp.com/latex.php?latex=%7Bp+%5Cequiv+%5Cpm+2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p &#92;equiv &#92;pm 2}' title='{p &#92;equiv &#92;pm 2}' class='latex' /> modulo <img src='http://s0.wp.com/latex.php?latex=%7B5%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bp%5E2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p^2}' title='{p^2}' class='latex' /> divides the Fibonacci number <img src='http://s0.wp.com/latex.php?latex=%7BF_%7Bp+%2B+1%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_{p + 1}}' title='{F_{p + 1}}' class='latex' />, where <img src='http://s0.wp.com/latex.php?latex=%7BF_n%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_n}' title='{F_n}' class='latex' /> is indexed with <img src='http://s0.wp.com/latex.php?latex=%7BF_0+%3D+0%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_0 = 0}' title='{F_0 = 0}' class='latex' />, <img src='http://s0.wp.com/latex.php?latex=%7BF_1+%3D+1%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_1 = 1}' title='{F_1 = 1}' class='latex' />.
</p></blockquote><p>
What Sun and Sun <a href=\"http://matwbn.icm.edu.pl/ksiazki/aa/aa60/aa6046.pdf\">proved</a> is that any minimal counterexample to Fermat’s Last Theorem would need to involve such a prime—of course from the proof of FLT two years later, we know there are none. They also gave a sufficient condition for a “Wall-Sun-Sun prime” to exist, though none has yet been found.</p><p>
Back to the Polignacs, we can try to capture ideas of both their conjectures with a case of what is actually a pretty general kind of question—a kind one can pose about other sets of numbers besides the primes:</p><blockquote><p>
What is the minimum <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> such that every odd number is within the distance-<img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> Hamming sphere of a prime number? Is it finite?
</p></blockquote><p>
To get the even numbers too we can add <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> to <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' />. Of course this is still a strong “every” kind of conjecture, and those are hard to prove. One can first try to attack “infinitely-many” versions. Obviously there are infinitely many odd numbers <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> that are <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpm+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pm 2}' title='{&#92;pm 2}' class='latex' /> from a prime <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />, but if we insist that <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> too be prime we have our old friend the Twin Prime Conjecture again. So here is the corresponding Hamming-like question:</p><blockquote><p>
What is the minimum <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> such that there are infinitely many prime numbers <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> that are within Hamming distance <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> of some other prime number?
</p></blockquote><p>
Using Hamming’s own ideas in coding theory, we can prove the minimum is at most <img src='http://s0.wp.com/latex.php?latex=%7Bd%3D2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d=2}' title='{d=2}' class='latex' />. Note that this is stronger than saying there are infinitely many pairs of primes <img src='http://s0.wp.com/latex.php?latex=%7B%28p%2Cq%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(p,q)}' title='{(p,q)}' class='latex' /> such that <img src='http://s0.wp.com/latex.php?latex=%7Bq+-+p+%3D+2%5Ek+%5Cpm+2%5El%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q - p = 2^k &#92;pm 2^l}' title='{q - p = 2^k &#92;pm 2^l}' class='latex' />, because we are also restricting what <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> have in the bit positions <img src='http://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k}' title='{k}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bl%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{l}' title='{l}' class='latex' /> from the end. </p><p><p><H2> The Proof </H2></p><p><p>
The theorem is not that amazing, or unexpected, but we think how we prove it may be of interest. The proof is via Hamming’s famous <a href=\"http://en.wikipedia.org/wiki/Hamming_bound\">theorem</a> on the density of codes. Let <img src='http://s0.wp.com/latex.php?latex=%7BA_%7Bq%7D%28n%2Cd%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A_{q}(n,d)}' title='{A_{q}(n,d)}' class='latex' /> be size of the largest set <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> of <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> vectors over an alphabet of size <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> so that any two distinct code words in <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> are at least Hamming distance <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> apart. </p><blockquote><p><b>Theorem 1</b><em> For all <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' />: 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++A_%7Bq%7D%28n%2Cd%29+%5Cle+%5Cfrac%7Bq%5E%7Bn%7D%7D%7B%5Csum_%7Bk%3D0%7D%5E%7Bt%7D+%5Cbinom%7Bn%7D%7Bk%7D%28q-1%29%5E%7Bk%7D%7D%2C+&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  A_{q}(n,d) &#92;le &#92;frac{q^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}(q-1)^{k}}, ' title='&#92;displaystyle  A_{q}(n,d) &#92;le &#92;frac{q^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}(q-1)^{k}}, ' class='latex' /></p><p>
where 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++t+%3D+%5Cleft%5Clfloor+%5Cfrac%7Bd-1%7D%7B2%7D+%5Cright%5Crfloor.+&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  t = &#92;left&#92;lfloor &#92;frac{d-1}{2} &#92;right&#92;rfloor. ' title='&#92;displaystyle  t = &#92;left&#92;lfloor &#92;frac{d-1}{2} &#92;right&#92;rfloor. ' class='latex' /></p><p></em></p></blockquote><p><p>
Now to state formally what we are proving, it is:</p><blockquote><p><b>Theorem 2</b><em> For every sufficiently large <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />, there are primes <img src='http://s0.wp.com/latex.php?latex=%7Bp%2Cq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p,q}' title='{p,q}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7B2%5En+%5Cleq+p%2Cq+%3C+2%5E%7Bn%2B1%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2^n &#92;leq p,q &lt; 2^{n+1}}' title='{2^n &#92;leq p,q &lt; 2^{n+1}}' class='latex' /> such that <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> have Hamming distance at most <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. </em></p></blockquote><p><p><em>Proof:</em>  Consider the set <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> of all primes in the interval <img src='http://s0.wp.com/latex.php?latex=%7B%5B2%5E%7Bn%7D%2C+%5Cdots%2C+2%5E%7Bn%2B1%7D-1%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{[2^{n}, &#92;dots, 2^{n+1}-1]}' title='{[2^{n}, &#92;dots, 2^{n+1}-1]}' class='latex' />. These of course can be represented by <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-bit vectors, eliding the leading <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> in the <img src='http://s0.wp.com/latex.php?latex=%7B2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^n}' title='{2^n}' class='latex' /> place. Think of them as a code. We will show that its minimum distance <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> is at most <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />, from which the theorem follows. </p><p>
Suppose that the distance is larger, that is <img src='http://s0.wp.com/latex.php?latex=%7Bd+%5Cge+3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d &#92;ge 3}' title='{d &#92;ge 3}' class='latex' />. The apply Hamming’s Theorem for <img src='http://s0.wp.com/latex.php?latex=%7BA_%7B2%7D%28n%2Cd%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A_{2}(n,d)}' title='{A_{2}(n,d)}' class='latex' /> noting that <img src='http://s0.wp.com/latex.php?latex=%7Bt+%5Cge+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{t &#92;ge 1}' title='{t &#92;ge 1}' class='latex' />. This yields </p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%7CS%7C+%5Cle+%5Cfrac%7B2%5E%7Bn%7D%7D%7B%5Csum_%7Bk%3D0%7D%5E%7Bt%7D+%5Cbinom%7Bn%7D%7Bk%7D%7D+%5Cle+%5Cfrac%7B2%5E%7Bn%7D%7D%7B1%2Bn%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  |S| &#92;le &#92;frac{2^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}} &#92;le &#92;frac{2^{n}}{1+n}. ' title='&#92;displaystyle  |S| &#92;le &#92;frac{2^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}} &#92;le &#92;frac{2^{n}}{1+n}. ' class='latex' /></p><p>
The <a href=\"http://en.wikipedia.org/wiki/Prime_number_theorem\">Prime Number Theorem</a> states that the density of primes up to <img src='http://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' /> converges to <img src='http://s0.wp.com/latex.php?latex=%7BN%2F%5Cln+N%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N/&#92;ln N}' title='{N/&#92;ln N}' class='latex' /> as <img src='http://s0.wp.com/latex.php?latex=%7BN+%5Clongrightarrow+%5Cinfty%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N &#92;longrightarrow &#92;infty}' title='{N &#92;longrightarrow &#92;infty}' class='latex' />, where <img src='http://s0.wp.com/latex.php?latex=%7B%5Cln%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;ln}' title='{&#92;ln}' class='latex' /> is natural log. By an easy manipulation of estimates it follows that for any <img src='http://s0.wp.com/latex.php?latex=%7B%5Cepsilon+%3E+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;epsilon &gt; 0}' title='{&#92;epsilon &gt; 0}' class='latex' /> and all large enough <img src='http://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' />, the primes have density at least <img src='http://s0.wp.com/latex.php?latex=%7B%281-%5Cepsilon%29%5Cfrac%7B1%7D%7B%5Cln+N%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(1-&#92;epsilon)&#92;frac{1}{&#92;ln N}}' title='{(1-&#92;epsilon)&#92;frac{1}{&#92;ln N}}' class='latex' /> in <img src='http://s0.wp.com/latex.php?latex=%7B%5BN%2F2%2C%5Cdots%2CN-1%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{[N/2,&#92;dots,N-1]}' title='{[N/2,&#92;dots,N-1]}' class='latex' />. It follows with <img src='http://s0.wp.com/latex.php?latex=%7BN+%3D+2%5E%7Bn%2B1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N = 2^{n+1}}' title='{N = 2^{n+1}}' class='latex' /> that </p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%7CS%7C+%5Cgeq+%281-%5Cepsilon%29%5Cfrac%7B2%5E%7Bn%7D%7D%7B%28n%2B1%29%5Cln+2%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  |S| &#92;geq (1-&#92;epsilon)&#92;frac{2^{n}}{(n+1)&#92;ln 2}. ' title='&#92;displaystyle  |S| &#92;geq (1-&#92;epsilon)&#92;frac{2^{n}}{(n+1)&#92;ln 2}. ' class='latex' /></p><p>
Since <img src='http://s0.wp.com/latex.php?latex=%7B1%2F%5Cln+2+%3D+%5Clog_2+e+%3D+1.44%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1/&#92;ln 2 = &#92;log_2 e = 1.44&#92;dots}' title='{1/&#92;ln 2 = &#92;log_2 e = 1.44&#92;dots}' class='latex' />, this implies with the above that </p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cfrac%7B1.44%281-%5Cepsilon%292%5En%7D%7Bn%2B1%7D+%5Cle+%5Cfrac%7B2%5En%7D%7Bn%2B1%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;frac{1.44(1-&#92;epsilon)2^n}{n+1} &#92;le &#92;frac{2^n}{n+1}, ' title='&#92;displaystyle  &#92;frac{1.44(1-&#92;epsilon)2^n}{n+1} &#92;le &#92;frac{2^n}{n+1}, ' class='latex' /></p><p>
but this is clearly false for large enough <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> and small enough <img src='http://s0.wp.com/latex.php?latex=%7B%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;epsilon}' title='{&#92;epsilon}' class='latex' />. This contradiction proves <img src='http://s0.wp.com/latex.php?latex=%7Bd+%5Cleq+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d &#92;leq 2}' title='{d &#92;leq 2}' class='latex' /> and hence the theorem. <img src='http://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;Box' title='&#92;Box' class='latex' /></p><p>
As the proof shows, there is actually a fair bit of “slack” in the counting. Hence the theorem can be extended to add conditions on the primes: we can further restrict the sizes of the primes, their residues modulo small numbers, and other properties. Indeed the counting makes this all close to working with <img src='http://s0.wp.com/latex.php?latex=%7Bd%3D1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d=1}' title='{d=1}' class='latex' />. That takes us back within the sphere of Camille de Polignac’s question as well.</p><p><p><H2> An Obstinate Question? </H2></p><p>
For <img src='http://s0.wp.com/latex.php?latex=%7Bd%3D1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d=1}' title='{d=1}' class='latex' /> the question again comes in “every” (with the qualifier “large enough”) and “infinitely many” flavors:</p><blockquote><ol><li>
Is it true that for every large enough prime <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />, there is a prime <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> such that <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> differ in one bit, or at least differ by a power of <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />? (no)</p><li>
Are there infinitely many primes <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> such that for some other prime <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' />, <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> differ in one bit, or at least <img src='http://s0.wp.com/latex.php?latex=%7Bq+-+p%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q - p}' title='{q - p}' class='latex' /> is a power of <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />? (open)
</ol></blockquote><p>
Note that <img src='http://s0.wp.com/latex.php?latex=%7Bq+%3E+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &gt; p}' title='{q &gt; p}' class='latex' /> is allowed. Without that condition we’d have already the counterexample <img src='http://s0.wp.com/latex.php?latex=%7Bp+%3D+127%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p = 127}' title='{p = 127}' class='latex' /> to Camille’s conjecture. Incidentally, counterexamples to Camille are called <em>obstinate numbers</em>, and there are <a href=\"http://sprott.physics.wisc.edu/pickover/obstinate.html\">various</a><a href=\"http://danieldockery.com/b/2002/obstinate-numbers/\">pages</a> devoted to enumerating them. A case where <img src='http://s0.wp.com/latex.php?latex=%7Bq+%3E+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &gt; p}' title='{q &gt; p}' class='latex' /> is important is <img src='http://s0.wp.com/latex.php?latex=%7Bp+%3D+113%2C%5C%21921%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p = 113,&#92;!921}' title='{p = 113,&#92;!921}' class='latex' />: <img src='http://s0.wp.com/latex.php?latex=%7Bq+%3D+p+%2B+2%5E%7B141%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q = p + 2^{141}}' title='{q = p + 2^{141}}' class='latex' /> is prime. Of course whenever <img src='http://s0.wp.com/latex.php?latex=%7Bq+%5Cgeq+2p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &#92;geq 2p}' title='{q &#92;geq 2p}' class='latex' /> such a pair also has Hamming distance <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />, using leading <img src='http://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' />‘s to pad <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> to the same length as <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' />.</p><p>
In 1964, Fred Cohen and John Selfridge noted that allowing <img src='http://s0.wp.com/latex.php?latex=%7Bq+%3E+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &gt; p}' title='{q &gt; p}' class='latex' /> made Camille’s idea good for every odd number up to <img src='http://s0.wp.com/latex.php?latex=%7B262%2C144%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{262,144}' title='{262,144}' class='latex' />. However, they <a href=\"http://www.ams.org/journals/mcom/1975-29-129/S0025-5718-1975-0376583-0/S0025-5718-1975-0376583-0.pdf\">proved</a> that the prime 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle+p+%3D+47%2C%5C%21867%2C%5C%21742%2C%5C%21232%2C%5C%21066%2C%5C%21880%2C%5C%21047%2C%5C%21611%2C%5C%21079&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle p = 47,&#92;!867,&#92;!742,&#92;!232,&#92;!066,&#92;!880,&#92;!047,&#92;!611,&#92;!079' title='&#92;displaystyle p = 47,&#92;!867,&#92;!742,&#92;!232,&#92;!066,&#92;!880,&#92;!047,&#92;!611,&#92;!079' class='latex' /></p><p>
cannot be written as <img src='http://s0.wp.com/latex.php?latex=%7Bp+%3D+q+%5Cpm+2%5Ek%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p = q &#92;pm 2^k}' title='{p = q &#92;pm 2^k}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> prime. Moreover, they gave an infinite arithmetic progression of numbers <img src='http://s0.wp.com/latex.php?latex=%7Ba+%2B+bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a + bn}' title='{a + bn}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7Ba%2Cb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a,b}' title='{a,b}' class='latex' /> coprime that cannot be written as <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpm+2%5Ek+%5Cpm+q%5El%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pm 2^k &#92;pm q^l}' title='{&#92;pm 2^k &#92;pm q^l}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> prime. Since every such progression contains infinitely many primes, this finally lays question 1 to rest even with the “large enough” modifier. Zhi-wei Sun himself made good on something stated in their abstract but not proved in their paper, in a 2000 <a href=\"http://www.ams.org/journals/mcom/1975-29-129/S0025-5718-1975-0376583-0/S0025-5718-1975-0376583-0.pdf\">paper</a> giving an infinite arithmetic progression of numbers that cannot be written as <img src='http://s0.wp.com/latex.php?latex=%7Bp%5Ek+%5Cpm+q%5El%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p^k &#92;pm q^l}' title='{p^k &#92;pm q^l}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7Bp%2Cq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p,q}' title='{p,q}' class='latex' /> prime and <img src='http://s0.wp.com/latex.php?latex=%7Bk%2Cl+%3E+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k,l &gt; 0}' title='{k,l &gt; 0}' class='latex' />. </p><p>
All this still, however, leaves the second question open. We would like to prove it, indeed find moderately dense sets of such pairs.</p><p><p><H2> Open Problems </H2></p><p><p>
Are there infinitely many pairs of primes that differ in just one bit?</p><p>
We note that there are people who have thought about connections between coding theory and number theory. For example, Toyokazu Hiramatsu and G&uuml;nter K&ouml;hler have a whole <a href=\"http://www.amazon.com/Coding-Theory-Number-Mathematics-Applications/dp/1402012039\">monograph</a> titled <i>Coding Theory and Number Theory</i> on this topic. But the idea there is to apply number theory to shed light on the structure of codes. Elliptic curves, for instance, can be used to construct certain interesting codes. We are interested in the impact of coding theory on number theory, such as the distribution of important sets like the primes, which in turn may have applications in computing theory.</p><p>
[$2^k + 2^l$ changed to $2^k \\pm 2^l$, fixed ceiling to floor in Hamming bound]</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11351/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11351/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11351&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "http://rjlipton.wordpress.com/2014/03/09/codes-meet-numbers/" (21275 63398) new 10 nil nil ((title nil "Codes Meet Numbers") (link nil "http://rjlipton.wordpress.com/2014/03/09/codes-meet-numbers/") (comments nil "http://rjlipton.wordpress.com/2014/03/09/codes-meet-numbers/#comments") (pubDate nil "Sun, 09 Mar 2014 05:09:58 +0000") (dc:creator nil "Pip") (category nil "All Posts") (category nil "History") (category nil "Ideas") (category nil "Oldies") (category nil "Open Problems") (category nil "People") (category nil "coding theory") (category nil "conjecture") (category nil "Fermat") (category nil "Hamming") (category nil "obstinate numbers") (category nil "Polignac conjecture") (category nil "primes") (category nil "twin prime conjecture") (category nil "Zhi-Wei Sun") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11351") (description nil "Results and problems about primes that make us think of coding theory Cropped from source. Zhi-Wei Sun is a professor in Mathematics at Nanjing University in China. He is the Editor in Chief of the recently-founded Journal of Combinatorics and Number Theory. His homepage is unique in prominently featuring a long list of &#8230;not his [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11351&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Results and problems about primes that make us think of coding theory </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/03/suninsun.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/suninsun.png?w=600\" alt=\"SunInSun\"   class=\"alignright size-full wp-image-11352\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Cropped from <a href=\"http://math.nju.edu.cn/~zwsun/with%20Prof.%20K.%20Rubin%20and%20D.%20Wan.jpg\">source</a>.<br /></FONT></td></table><p>
Zhi-Wei Sun is a professor in Mathematics at Nanjing University in China. He is the Editor in Chief of the recently-founded Journal of Combinatorics and Number Theory. His <a href=\"http://math.nju.edu.cn/~zwsun/\">homepage</a> is unique in prominently featuring a long list of </p><ul><li>
&#8230;not his awards, </p><li>
&#8230;not his papers, </p><li>
&#8230;not his theorems, </p><li>
&#8230;but rather his <em>conjectures</em>.
</ul><p>Indeed we count 432 total conjectures in his list, subtracting one that he seems last year to have proved. They do not seem to be easy conjectures&#8212;this <a href=\"https://listserv.nodak.edu/cgi-bin/wa.exe?A2=NMBRTHRY;3d24b586.1206\">one</a> implies the Riemann Hypothesis in a nontrivial way. Some of them involve powers of 2, which lend them a coding-theory flavor. </p><p>Today Ken and I wish to share ideas of using coding theory to prove number-theoretic results.<span id=\"more-11351\"></span></p><p>
Coding theory owes much to Richard Hamming, who defined <b>Hamming distance</b> between codewords and created the binary Hamming codes. The <b>Hamming sphere</b> of radius <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> centered on a word <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> is the set of all words <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> of the same length whose Hamming distance is at most <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' />, meaning <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> differ in at most <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> places. Our question is how the distributions of prime numbers and other sets relate to the Hamming spheres of their binary encodings. For example, <img src='http://s0.wp.com/latex.php?latex=%7B5+%3D+101%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{5 = 101}' title='{5 = 101}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B7+%3D+111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7 = 111}' title='{7 = 111}' class='latex' /> are twin primes of Hamming distance <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />, while <img src='http://s0.wp.com/latex.php?latex=%7B11+%3D+1011%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{11 = 1011}' title='{11 = 1011}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B13+%3D+1101%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{13 = 1101}' title='{13 = 1101}' class='latex' /> have distance <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />.</p><p>
Sun has his own &#8220;Super Twin Prime Conjecture&#8221; listed first on his page. Call a pair <img src='http://s0.wp.com/latex.php?latex=%7B%28k%2Cm%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(k,m)}' title='{(k,m)}' class='latex' /> of integers &#8220;super&#8221; if <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%28k%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(k)}' title='{&#92;pi(k)}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%28%5Cpi%28m%29%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(&#92;pi(m))}' title='{&#92;pi(&#92;pi(m))}' class='latex' /> are both twin primes, indeed the lower member of a twin pair, where <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%28k%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(k)}' title='{&#92;pi(k)}' class='latex' /> denotes the <img src='http://s0.wp.com/latex.php?latex=%7Bk%5E%7Bth%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k^{th}}' title='{k^{th}}' class='latex' /> prime number. The conjecture&#8212;a hybrid of Twin and Goldbach&#8212;is:</p><blockquote><p>
Every integer <img src='http://s0.wp.com/latex.php?latex=%7Bn+%5Cgeq+3%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n &#92;geq 3}' title='{n &#92;geq 3}' class='latex' /> is the sum of a super pair.
</p></blockquote><p>
He has verified this for <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> up to <img src='http://s0.wp.com/latex.php?latex=%7B10%5E9%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{10^9}' title='{10^9}' class='latex' />. What can motivate such a conjecture? Certainly one motivation is expected density&#8212;not only &#8220;should&#8221; the twin primes be infinite, but they should be dense enough to fill this kind of requirement, much as the set of primes themselves is dense enough to make Goldbach&#8217;s conjecture&#8212;that every even number <img src='http://s0.wp.com/latex.php?latex=%7Bn+%5Cgeq+4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n &#92;geq 4}' title='{n &#92;geq 4}' class='latex' /> is the sum of two primes&#8212;plausible. But what other structure can supply motivation? That is what we seek.</p><p><p><H2> Numbers and Codes </H2></p><p><p>
Coding theory is all about the properties of vectors over finite sets, often over the binary field <img src='http://s0.wp.com/latex.php?latex=%7B%5C%7B0%2C1%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{0,1&#92;}}' title='{&#92;{0,1&#92;}}' class='latex' />. Of course number theory is all about the additive and multiplicative properties of integers. These seem to be vastly different, yet they are related: every number can be represented by a binary vector. </p><p>
Coding theory gives a way to express relationships that might be cumbersome with arithmetical tools such as congruences. For example, say a number <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> is &#8220;top modulo <img src='http://s0.wp.com/latex.php?latex=%7B2%5Em%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^m}' title='{2^m}' class='latex' />&#8221; if its <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' />-bit encoding begins with a <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />. Of course we can specify this as <img src='http://s0.wp.com/latex.php?latex=%7B2%5E%7Bm-1%7D+%5Cleq+r+%3C+2%5Em%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^{m-1} &#92;leq r &lt; 2^m}' title='{2^{m-1} &#92;leq r &lt; 2^m}' class='latex' />, but &#8220;less-than&#8221; is a dodgy concept when working modulo some number. When <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> is odd we might want to define instead that the <em>middle</em> bit of <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> in binary is a <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />. Middle bits are sometimes important in crypto, but relations involving them are not always easy to define via congruences.</p><p>
Of course a number is odd iff its last bit in binary is <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />, and is congruent to <img src='http://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> mod <img src='http://s0.wp.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' /> iff its second-last bit is also <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />. The distinction between congruence to <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> versus <img src='http://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> mod <img src='http://s0.wp.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' /> is generally important for odd primes. How about congruence to <img src='http://s0.wp.com/latex.php?latex=%7B5%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7B7%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' /> mod <img src='http://s0.wp.com/latex.php?latex=%7B8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{8}' title='{8}' class='latex' />, versus <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' />, that is being top mod <img src='http://s0.wp.com/latex.php?latex=%7B8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{8}' title='{8}' class='latex' />? Of course one important distinction is which congruences are quadratic residues, but with binary-code notions we can define others.</p><p>
The number <img src='http://s0.wp.com/latex.php?latex=%7B71+%3D+1000111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{71 = 1000111}' title='{71 = 1000111}' class='latex' /> is congruent to <img src='http://s0.wp.com/latex.php?latex=%7B7%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' /> mod <img src='http://s0.wp.com/latex.php?latex=%7B8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{8}' title='{8}' class='latex' />, and is part of a twin pair of Hamming distance <img src='http://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7B73+%3D+1001001%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{73 = 1001001}' title='{73 = 1001001}' class='latex' />. The first twin pair with greater Hamming distance actually gives distance <img src='http://s0.wp.com/latex.php?latex=%7B6%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{6}' title='{6}' class='latex' />: <img src='http://s0.wp.com/latex.php?latex=%7B191+%3D+10111111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{191 = 10111111}' title='{191 = 10111111}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B193+%3D+11000001%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{193 = 11000001}' title='{193 = 11000001}' class='latex' />. Next comes <img src='http://s0.wp.com/latex.php?latex=%7B2687+%3D+10101111111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2687 = 10101111111}' title='{2687 = 10101111111}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B2689+%3D+10110000001%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2689 = 10110000001}' title='{2689 = 10110000001}' class='latex' /> for distance <img src='http://s0.wp.com/latex.php?latex=%7B7%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' />. Is the Hamming distance of twin primes unbounded? </p><p>
Of course we don&#8217;t even know if there are infinitely many twin primes. This is really asking whether twin primes can flank a multiple of an arbitrarily large power of <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. Quick web searches have not found this question, while our point is that our motive came from the coding-theory angle.</p><p><p><H2> Polignacs and Twins and Spheres </H2></p><p><p>
In 1848, Camille Marie de Polignac somewhat lazily conjectured that every odd number <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> is the sum of a prime number and a power of <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. We speculate that he may have intended to exclude false cases such as <img src='http://s0.wp.com/latex.php?latex=%7Bn+%3D+127%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n = 127}' title='{n = 127}' class='latex' /> where <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> itself is prime, but even so he missed <img src='http://s0.wp.com/latex.php?latex=%7Bn+%3D+905%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n = 905}' title='{n = 905}' class='latex' /> amid his reported (but to us incredible) claim to have verified this up to about 3 million. Perhaps it was spoken with the bluster of a Confederate major-general during the Civil War, which is surprisingly what this French nobleman <a href=\"http://en.wikipedia.org/wiki/Camille_Armand_Jules_Marie,_Prince_de_Polignac\">became</a>. </p><p>
His older brother, Alphonse de Polignac, made a somewhat less lazy conjecture: that every even number <img src='http://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k}' title='{k}' class='latex' /> is the difference between infinitely many pairs of consecutive primes. Of course with <img src='http://s0.wp.com/latex.php?latex=%7Bk%3D2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k=2}' title='{k=2}' class='latex' /> this subsumes the Twin Primes Conjecture, and indeed the latter is sometimes called de Polignac&#8217;s Conjecture after him. </p><p>
Should Camille have teamed up with his brother to make his conjecture? And would they have done better if they had been twins&#8212;maybe prove something about their conjecture? Well we have an example to go by: Zhi-Wei Sun has a twin brother, Zhi-Hong Sun at Huaiyin Normal University, and they teamed up in 1992 to prove something about the following conjecture by Donald Wall:</p><blockquote><p>
There are infinitely many primes <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> such that either <img src='http://s0.wp.com/latex.php?latex=%7Bp+%5Cequiv+%5Cpm+1%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p &#92;equiv &#92;pm 1}' title='{p &#92;equiv &#92;pm 1}' class='latex' /> modulo <img src='http://s0.wp.com/latex.php?latex=%7B5%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bp%5E2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p^2}' title='{p^2}' class='latex' /> divides the Fibonacci number <img src='http://s0.wp.com/latex.php?latex=%7BF_%7Bp+-+1%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_{p - 1}}' title='{F_{p - 1}}' class='latex' />, or <img src='http://s0.wp.com/latex.php?latex=%7Bp+%5Cequiv+%5Cpm+2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p &#92;equiv &#92;pm 2}' title='{p &#92;equiv &#92;pm 2}' class='latex' /> modulo <img src='http://s0.wp.com/latex.php?latex=%7B5%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bp%5E2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p^2}' title='{p^2}' class='latex' /> divides the Fibonacci number <img src='http://s0.wp.com/latex.php?latex=%7BF_%7Bp+%2B+1%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_{p + 1}}' title='{F_{p + 1}}' class='latex' />, where <img src='http://s0.wp.com/latex.php?latex=%7BF_n%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_n}' title='{F_n}' class='latex' /> is indexed with <img src='http://s0.wp.com/latex.php?latex=%7BF_0+%3D+0%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_0 = 0}' title='{F_0 = 0}' class='latex' />, <img src='http://s0.wp.com/latex.php?latex=%7BF_1+%3D+1%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_1 = 1}' title='{F_1 = 1}' class='latex' />.
</p></blockquote><p>
What Sun and Sun <a href=\"http://matwbn.icm.edu.pl/ksiazki/aa/aa60/aa6046.pdf\">proved</a> is that any minimal counterexample to Fermat&#8217;s Last Theorem would need to involve such a prime&#8212;of course from the proof of FLT two years later, we know there are none. They also gave a sufficient condition for a &#8220;Wall-Sun-Sun prime&#8221; to exist, though none has yet been found.</p><p>
Back to the Polignacs, we can try to capture ideas of both their conjectures with a case of what is actually a pretty general kind of question&#8212;a kind one can pose about other sets of numbers besides the primes:</p><blockquote><p>
What is the minimum <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> such that every odd number is within the distance-<img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> Hamming sphere of a prime number? Is it finite?
</p></blockquote><p>
To get the even numbers too we can add <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> to <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' />. Of course this is still a strong &#8220;every&#8221; kind of conjecture, and those are hard to prove. One can first try to attack &#8220;infinitely-many&#8221; versions. Obviously there are infinitely many odd numbers <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> that are <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpm+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pm 2}' title='{&#92;pm 2}' class='latex' /> from a prime <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />, but if we insist that <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> too be prime we have our old friend the Twin Prime Conjecture again. So here is the corresponding Hamming-like question:</p><blockquote><p>
What is the minimum <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> such that there are infinitely many prime numbers <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> that are within Hamming distance <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> of some other prime number?
</p></blockquote><p>
Using Hamming&#8217;s own ideas in coding theory, we can prove the minimum is at most <img src='http://s0.wp.com/latex.php?latex=%7Bd%3D2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d=2}' title='{d=2}' class='latex' />. Note that this is stronger than saying there are infinitely many pairs of primes <img src='http://s0.wp.com/latex.php?latex=%7B%28p%2Cq%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(p,q)}' title='{(p,q)}' class='latex' /> such that <img src='http://s0.wp.com/latex.php?latex=%7Bq+-+p+%3D+2%5Ek+%5Cpm+2%5El%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q - p = 2^k &#92;pm 2^l}' title='{q - p = 2^k &#92;pm 2^l}' class='latex' />, because we are also restricting what <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> have in the bit positions <img src='http://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k}' title='{k}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bl%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{l}' title='{l}' class='latex' /> from the end. </p><p><p><H2> The Proof </H2></p><p><p>
The theorem is not that amazing, or unexpected, but we think how we prove it may be of interest. The proof is via Hamming&#8217;s famous <a href=\"http://en.wikipedia.org/wiki/Hamming_bound\">theorem</a> on the density of codes. Let <img src='http://s0.wp.com/latex.php?latex=%7BA_%7Bq%7D%28n%2Cd%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A_{q}(n,d)}' title='{A_{q}(n,d)}' class='latex' /> be size of the largest set <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> of <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> vectors over an alphabet of size <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> so that any two distinct code words in <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> are at least Hamming distance <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> apart. </p><blockquote><p><b>Theorem 1</b><em> For all <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' />: 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++A_%7Bq%7D%28n%2Cd%29+%5Cle+%5Cfrac%7Bq%5E%7Bn%7D%7D%7B%5Csum_%7Bk%3D0%7D%5E%7Bt%7D+%5Cbinom%7Bn%7D%7Bk%7D%28q-1%29%5E%7Bk%7D%7D%2C+&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  A_{q}(n,d) &#92;le &#92;frac{q^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}(q-1)^{k}}, ' title='&#92;displaystyle  A_{q}(n,d) &#92;le &#92;frac{q^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}(q-1)^{k}}, ' class='latex' /></p><p>
where 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++t+%3D+%5Cleft%5Clfloor+%5Cfrac%7Bd-1%7D%7B2%7D+%5Cright%5Crfloor.+&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  t = &#92;left&#92;lfloor &#92;frac{d-1}{2} &#92;right&#92;rfloor. ' title='&#92;displaystyle  t = &#92;left&#92;lfloor &#92;frac{d-1}{2} &#92;right&#92;rfloor. ' class='latex' /></p><p></em></p></blockquote><p><p>
Now to state formally what we are proving, it is:</p><blockquote><p><b>Theorem 2</b><em> For every sufficiently large <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />, there are primes <img src='http://s0.wp.com/latex.php?latex=%7Bp%2Cq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p,q}' title='{p,q}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7B2%5En+%5Cleq+p%2Cq+%3C+2%5E%7Bn%2B1%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2^n &#92;leq p,q &lt; 2^{n+1}}' title='{2^n &#92;leq p,q &lt; 2^{n+1}}' class='latex' /> such that <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> have Hamming distance at most <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. </em></p></blockquote><p><p><em>Proof:</em>  Consider the set <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> of all primes in the interval <img src='http://s0.wp.com/latex.php?latex=%7B%5B2%5E%7Bn%7D%2C+%5Cdots%2C+2%5E%7Bn%2B1%7D-1%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{[2^{n}, &#92;dots, 2^{n+1}-1]}' title='{[2^{n}, &#92;dots, 2^{n+1}-1]}' class='latex' />. These of course can be represented by <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-bit vectors, eliding the leading <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> in the <img src='http://s0.wp.com/latex.php?latex=%7B2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^n}' title='{2^n}' class='latex' /> place. Think of them as a code. We will show that its minimum distance <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> is at most <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />, from which the theorem follows. </p><p>
Suppose that the distance is larger, that is <img src='http://s0.wp.com/latex.php?latex=%7Bd+%5Cge+3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d &#92;ge 3}' title='{d &#92;ge 3}' class='latex' />. The apply Hamming&#8217;s Theorem for <img src='http://s0.wp.com/latex.php?latex=%7BA_%7B2%7D%28n%2Cd%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A_{2}(n,d)}' title='{A_{2}(n,d)}' class='latex' /> noting that <img src='http://s0.wp.com/latex.php?latex=%7Bt+%5Cge+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{t &#92;ge 1}' title='{t &#92;ge 1}' class='latex' />. This yields </p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%7CS%7C+%5Cle+%5Cfrac%7B2%5E%7Bn%7D%7D%7B%5Csum_%7Bk%3D0%7D%5E%7Bt%7D+%5Cbinom%7Bn%7D%7Bk%7D%7D+%5Cle+%5Cfrac%7B2%5E%7Bn%7D%7D%7B1%2Bn%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  |S| &#92;le &#92;frac{2^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}} &#92;le &#92;frac{2^{n}}{1+n}. ' title='&#92;displaystyle  |S| &#92;le &#92;frac{2^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}} &#92;le &#92;frac{2^{n}}{1+n}. ' class='latex' /></p><p>
The <a href=\"http://en.wikipedia.org/wiki/Prime_number_theorem\">Prime Number Theorem</a> states that the density of primes up to <img src='http://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' /> converges to <img src='http://s0.wp.com/latex.php?latex=%7BN%2F%5Cln+N%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N/&#92;ln N}' title='{N/&#92;ln N}' class='latex' /> as <img src='http://s0.wp.com/latex.php?latex=%7BN+%5Clongrightarrow+%5Cinfty%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N &#92;longrightarrow &#92;infty}' title='{N &#92;longrightarrow &#92;infty}' class='latex' />, where <img src='http://s0.wp.com/latex.php?latex=%7B%5Cln%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;ln}' title='{&#92;ln}' class='latex' /> is natural log. By an easy manipulation of estimates it follows that for any <img src='http://s0.wp.com/latex.php?latex=%7B%5Cepsilon+%3E+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;epsilon &gt; 0}' title='{&#92;epsilon &gt; 0}' class='latex' /> and all large enough <img src='http://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' />, the primes have density at least <img src='http://s0.wp.com/latex.php?latex=%7B%281-%5Cepsilon%29%5Cfrac%7B1%7D%7B%5Cln+N%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(1-&#92;epsilon)&#92;frac{1}{&#92;ln N}}' title='{(1-&#92;epsilon)&#92;frac{1}{&#92;ln N}}' class='latex' /> in <img src='http://s0.wp.com/latex.php?latex=%7B%5BN%2F2%2C%5Cdots%2CN-1%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{[N/2,&#92;dots,N-1]}' title='{[N/2,&#92;dots,N-1]}' class='latex' />. It follows with <img src='http://s0.wp.com/latex.php?latex=%7BN+%3D+2%5E%7Bn%2B1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N = 2^{n+1}}' title='{N = 2^{n+1}}' class='latex' /> that </p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%7CS%7C+%5Cgeq+%281-%5Cepsilon%29%5Cfrac%7B2%5E%7Bn%7D%7D%7B%28n%2B1%29%5Cln+2%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  |S| &#92;geq (1-&#92;epsilon)&#92;frac{2^{n}}{(n+1)&#92;ln 2}. ' title='&#92;displaystyle  |S| &#92;geq (1-&#92;epsilon)&#92;frac{2^{n}}{(n+1)&#92;ln 2}. ' class='latex' /></p><p>
Since <img src='http://s0.wp.com/latex.php?latex=%7B1%2F%5Cln+2+%3D+%5Clog_2+e+%3D+1.44%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1/&#92;ln 2 = &#92;log_2 e = 1.44&#92;dots}' title='{1/&#92;ln 2 = &#92;log_2 e = 1.44&#92;dots}' class='latex' />, this implies with the above that </p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cfrac%7B1.44%281-%5Cepsilon%292%5En%7D%7Bn%2B1%7D+%5Cle+%5Cfrac%7B2%5En%7D%7Bn%2B1%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;frac{1.44(1-&#92;epsilon)2^n}{n+1} &#92;le &#92;frac{2^n}{n+1}, ' title='&#92;displaystyle  &#92;frac{1.44(1-&#92;epsilon)2^n}{n+1} &#92;le &#92;frac{2^n}{n+1}, ' class='latex' /></p><p>
but this is clearly false for large enough <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> and small enough <img src='http://s0.wp.com/latex.php?latex=%7B%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;epsilon}' title='{&#92;epsilon}' class='latex' />. This contradiction proves <img src='http://s0.wp.com/latex.php?latex=%7Bd+%5Cleq+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d &#92;leq 2}' title='{d &#92;leq 2}' class='latex' /> and hence the theorem. <img src='http://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;Box' title='&#92;Box' class='latex' /></p><p>
As the proof shows, there is actually a fair bit of &#8220;slack&#8221; in the counting. Hence the theorem can be extended to add conditions on the primes: we can further restrict the sizes of the primes, their residues modulo small numbers, and other properties. Indeed the counting makes this all close to working with <img src='http://s0.wp.com/latex.php?latex=%7Bd%3D1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d=1}' title='{d=1}' class='latex' />. That takes us back within the sphere of Camille de Polignac&#8217;s question as well.</p><p><p><H2> An Obstinate Question? </H2></p><p>
For <img src='http://s0.wp.com/latex.php?latex=%7Bd%3D1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d=1}' title='{d=1}' class='latex' /> the question again comes in &#8220;every&#8221; (with the qualifier &#8220;large enough&#8221;) and &#8220;infinitely many&#8221; flavors:</p><blockquote><ol><li>
Is it true that for every large enough prime <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />, there is a prime <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> such that <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> differ in one bit, or at least differ by a power of <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />? (no)</p><li>
Are there infinitely many primes <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> such that for some other prime <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' />, <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> differ in one bit, or at least <img src='http://s0.wp.com/latex.php?latex=%7Bq+-+p%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q - p}' title='{q - p}' class='latex' /> is a power of <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />? (open)
</ol></blockquote><p>
Note that <img src='http://s0.wp.com/latex.php?latex=%7Bq+%3E+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &gt; p}' title='{q &gt; p}' class='latex' /> is allowed. Without that condition we&#8217;d have already the counterexample <img src='http://s0.wp.com/latex.php?latex=%7Bp+%3D+127%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p = 127}' title='{p = 127}' class='latex' /> to Camille&#8217;s conjecture. Incidentally, counterexamples to Camille are called <em>obstinate numbers</em>, and there are <a href=\"http://sprott.physics.wisc.edu/pickover/obstinate.html\">various</a><a href=\"http://danieldockery.com/b/2002/obstinate-numbers/\">pages</a> devoted to enumerating them. A case where <img src='http://s0.wp.com/latex.php?latex=%7Bq+%3E+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &gt; p}' title='{q &gt; p}' class='latex' /> is important is <img src='http://s0.wp.com/latex.php?latex=%7Bp+%3D+113%2C%5C%21921%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p = 113,&#92;!921}' title='{p = 113,&#92;!921}' class='latex' />: <img src='http://s0.wp.com/latex.php?latex=%7Bq+%3D+p+%2B+2%5E%7B141%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q = p + 2^{141}}' title='{q = p + 2^{141}}' class='latex' /> is prime. Of course whenever <img src='http://s0.wp.com/latex.php?latex=%7Bq+%5Cgeq+2p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &#92;geq 2p}' title='{q &#92;geq 2p}' class='latex' /> such a pair also has Hamming distance <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />, using leading <img src='http://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' />&#8216;s to pad <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> to the same length as <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' />.</p><p>
In 1964, Fred Cohen and John Selfridge noted that allowing <img src='http://s0.wp.com/latex.php?latex=%7Bq+%3E+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &gt; p}' title='{q &gt; p}' class='latex' /> made Camille&#8217;s idea good for every odd number up to <img src='http://s0.wp.com/latex.php?latex=%7B262%2C144%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{262,144}' title='{262,144}' class='latex' />. However, they <a href=\"http://www.ams.org/journals/mcom/1975-29-129/S0025-5718-1975-0376583-0/S0025-5718-1975-0376583-0.pdf\">proved</a> that the prime 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle+p+%3D+47%2C%5C%21867%2C%5C%21742%2C%5C%21232%2C%5C%21066%2C%5C%21880%2C%5C%21047%2C%5C%21611%2C%5C%21079&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle p = 47,&#92;!867,&#92;!742,&#92;!232,&#92;!066,&#92;!880,&#92;!047,&#92;!611,&#92;!079' title='&#92;displaystyle p = 47,&#92;!867,&#92;!742,&#92;!232,&#92;!066,&#92;!880,&#92;!047,&#92;!611,&#92;!079' class='latex' /></p><p>
cannot be written as <img src='http://s0.wp.com/latex.php?latex=%7Bp+%3D+q+%5Cpm+2%5Ek%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p = q &#92;pm 2^k}' title='{p = q &#92;pm 2^k}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> prime. Moreover, they gave an infinite arithmetic progression of numbers <img src='http://s0.wp.com/latex.php?latex=%7Ba+%2B+bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a + bn}' title='{a + bn}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7Ba%2Cb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a,b}' title='{a,b}' class='latex' /> coprime that cannot be written as <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpm+2%5Ek+%5Cpm+q%5El%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pm 2^k &#92;pm q^l}' title='{&#92;pm 2^k &#92;pm q^l}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> prime. Since every such progression contains infinitely many primes, this finally lays question 1 to rest even with the &#8220;large enough&#8221; modifier. Zhi-wei Sun himself made good on something stated in their abstract but not proved in their paper, in a 2000 <a href=\"http://www.ams.org/journals/mcom/1975-29-129/S0025-5718-1975-0376583-0/S0025-5718-1975-0376583-0.pdf\">paper</a> giving an infinite arithmetic progression of numbers that cannot be written as <img src='http://s0.wp.com/latex.php?latex=%7Bp%5Ek+%5Cpm+q%5El%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p^k &#92;pm q^l}' title='{p^k &#92;pm q^l}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7Bp%2Cq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p,q}' title='{p,q}' class='latex' /> prime and <img src='http://s0.wp.com/latex.php?latex=%7Bk%2Cl+%3E+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k,l &gt; 0}' title='{k,l &gt; 0}' class='latex' />. </p><p>
All this still, however, leaves the second question open. We would like to prove it, indeed find moderately dense sets of such pairs.</p><p><p><H2> Open Problems </H2></p><p><p>
Are there infinitely many pairs of primes that differ in just one bit?</p><p>
We note that there are people who have thought about connections between coding theory and number theory. For example, Toyokazu Hiramatsu and G&uuml;nter K&ouml;hler have a whole <a href=\"http://www.amazon.com/Coding-Theory-Number-Mathematics-Applications/dp/1402012039\">monograph</a> titled <i>Coding Theory and Number Theory</i> on this topic. But the idea there is to apply number theory to shed light on the structure of codes. Elliptic curves, for instance, can be used to construct certain interesting codes. We are interested in the impact of coding theory on number theory, such as the distribution of important sets like the primes, which in turn may have applications in computing theory.</p><p>
[$2^k + 2^l$ changed to $2^k \\pm 2^l$, fixed ceiling to floor in Hamming bound]</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11351/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11351/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11351&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/03/09/codes-meet-numbers/feed/") (slash:comments nil "6") (media:content ((url . "http://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/suninsun.png") (medium . "image")) (media:title ((type . "html")) "SunInSun")))) ("Counting Is Sometimes Easy" "<p><font color=\"”#0066cc?\"><br /><em> Cases where we can count objects in polynomial time </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"https://rjlipton.files.wordpress.com/2014/04/sipserdean.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/04/sipserdean.png?w=180&h=216\" alt=\"SipserDean\" width=\"180\" height=\"216\" class=\"alignright wp-image-11495\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">New Interim Dean <a href=\"http://newsoffice.mit.edu/2013/michael-sipser-named-interim-dean-of-the-school-of-science-1206\">source</a>—our congrats<br /></FONT></td></table><p>
Mike Sipser is one of the top theorists, especially in complexity theory, and has been Head of the Mathematics Department at MIT since 2004. He is long known for some very clever proofs and his famous <a href=\"http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.44.9296\">survey paper</a> on the status of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' />. He is recently known for co-authoring the <a href=\"http://arxiv.org/pdf/quant-ph/0001106v1.pdf\">paper</a> that introduced <a href=\"http://en.wikipedia.org/wiki/Adiabatic_quantum_computation\">adiabatic quantum computing</a>, which is the kind being given physical realization <a href=\"http://bits.blogs.nytimes.com/2014/03/24/quantum-computing-research-may-back-controversial-company/\">by</a> the company D-Wave Systems. But he is perhaps best known nowadays for his <a href=\"http://www.amazon.com/Introduction-Theory-Computation-Michael-Sipser/dp/113318779X\">textbook</a><i>Introduction to the Theory of Computation</i>. I have used the earlier version many times for teaching our undergraduate class; I have not used the third edition, mainly because I teach other things these days.</p><p>
Today Ken and I wish to talk about a topic that is covered in his book, finite state automata, in relation to counting.<br /><span id=\"more-11490\"></span></p><p>
Yes, lowly finite state automata (FSA). In my opinion FSA are one of the great inventions of theory. They led Michael Rabin and Dana Scott to discover nondeterminism, yielding a Turing Award along the way. They led algorithm designers like Don Knuth to discover, with Jim Morris and Vaughan Pratt, the first linear-time pattern matching algorithm. And much more.</p><p>
Mike’s book was discussed before <a href=\"https://rjlipton.wordpress.com/2009/03/07/finite-state-automata-binary-decision-diagrams-and-presburger-arithmetic/\">here</a>, where I talked about his use of FSA to prove that the first order theory of addition is decidable. This is one of my favorite applications of FSA, which I learned from Ann Yasuhara directly—it is also included in her early <a href=\"http://www.amazon.com/Recursive-Function-Computer-Science-Mathematics/dp/0127689508\">book</a>, <i>Recursive Function Theory and Logic</i>.</p><p><p><H2> A Look at the Book </H2></p><p><p>
Mike’s book proves some interesting theorems that are ancient—okay, many decades old. This yields what in retrospect look like omissions, which are bound up with the history of the theorems. For example, consider the following classic one: </p><blockquote><p><b>Theorem 1</b><em> A language is context-free if and only if some nondeterministic pushdown automaton (PDA) accepts it. </em></p></blockquote><p>
This is proved in detail in his book—see page 117 in the new edition, Theorem 2.20. But the proof establishes more, much more, that is not stated. I have used both of these consequences in my own work over the years:</p><ul><li>
Given a context-free grammar we can construct the PDA in polynomial time, and conversely given the PDA we can construct the grammar. </p><li>
The sizes of the grammar and the description of the PDA are related by a polynomial bound.
</ul><p>
Note that the best construction, I believe, goes from a PDA with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> states to a grammar with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28S%5E%7B3%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(S^{3})}' title='{O(S^{3})}' class='latex' /> rules. If there is a better one it would have some interesting consequences. </p><p>
Let me say that this omission is not isolated to Mike’s book, but others most always leave out these interesting refinements. I believe that the reason is simple: the above theorem was proved before polynomial time was defined, and the textbook is sequenced that way. Hence the omission. Perhaps they can be added to a fourth edition.</p><p>
Ken adds—also writing much of the rest of this post: I now like the sequence of skipping grammars and PDA’s and going straight from regular languages and FSA to Turing computability and complexity. After this ‘kernel’ material the instructor has an option of covering grammars, and then the polynomial-overhead concepts are in place. Or the instructor can do more with complexity or logic or some other core topic.</p><p><p><H2> Counting </H2></p><p><p>
Let’s get back to FSA and counting.</p><blockquote><p><b>Theorem 2</b><em> Let <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> be a deterministic FSA with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BS%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> states and input alphabet <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;Sigma}' title='{&#92;Sigma}' class='latex' />. Then we can determine the cardinality <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BC_m%28n%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{C_m(n)}' title='{C_m(n)}' class='latex' /> of the set <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BL%28M%29%5Ccap+%5CSigma%5E%7Bn%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{L(M)&#92;cap &#92;Sigma^{n}}' title='{L(M)&#92;cap &#92;Sigma^{n}}' class='latex' /> in time polynomial in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BS%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />. </em></p></blockquote><p><p>
Put another way, we can count in polynomial time the number of strings of length <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> that a FSA accepts. If the FSA is fixed, then the time is polynomial only in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />. Actually, in this case the time is essentially bi-linear in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />—it depends on the exact computational model. </p><p>
The algorithm to prove this is often described as “dynamic programming,” but often that just means maintaining a well-chosen data structure. Here we allocate a slot for each state <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> of the FSA, and maintain for each <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk+%5Cleq+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k &#92;leq n}' title='{k &#92;leq n}' class='latex' /> the number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_%7Bk%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{k,q}}' title='{N_{k,q}}' class='latex' /> of strings of length exactly <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k}' title='{k}' class='latex' /> that reach <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> from the start state <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s}' title='{s}' class='latex' />. Initially <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k = 0}' title='{k = 0}' class='latex' />, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_%7B0%2Cs%7D+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{0,s} = 1}' title='{N_{0,s} = 1}' class='latex' /> for the empty string, and all other <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_%7B0%2Cq%7D+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{0,q} = 0}' title='{N_{0,q} = 0}' class='latex' />. Now to update it to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_%7Bk%2B1%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{k+1,q}}' title='{N_{k+1,q}}' class='latex' />, find all states <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and characters <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{c}' title='{c}' class='latex' /> such that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cdelta%28p%2Cc%29+%3D+q%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;delta(p,c) = q}' title='{&#92;delta(p,c) = q}' class='latex' />, where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;delta}' title='{&#92;delta}' class='latex' /> is the transition function of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' />, and sum up <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_%7Bk%2Cp%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{k,p}}' title='{N_{k,p}}' class='latex' />. That is, </p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++N_%7Bk%2B1%2Cq%7D+%3D+%5Csum_%7Bp%2Cc%3A+%5Cdelta%28p%2Cc%29+%3D+q%7D+N_%7Bk%2Cp%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  N_{k+1,q} = &#92;sum_{p,c: &#92;delta(p,c) = q} N_{k,p}. ' title='&#92;displaystyle  N_{k+1,q} = &#92;sum_{p,c: &#92;delta(p,c) = q} N_{k,p}. ' class='latex' /></p><p>
Finally <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BC_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n)}' title='{C_M(n)}' class='latex' /> equals the sum of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_%7Bn%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{n,q}}' title='{N_{n,q}}' class='latex' /> over all accepting states <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' />. Assuming random access to the data slots, and unit time for arithmetic on small numbers, this runs in time <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28Sn%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(Sn)}' title='{O(Sn)}' class='latex' />.</p><p>
Sounds simple, but as often happens in complexity, delicacy and difficulty lurk not too far away.</p><p><p><H2> The NFA Case and an Application </H2></p><p><p>
First, does the algorithm work when <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> is nondeterministic? It certainly runs, and counts <em>something</em>, but not the number of accepted strings. So can we modify it to do so? </p><p>
The answer is no—or maybe better to say “ostensibly not”: Given a Boolean formula that is a conjunction of clauses <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BC_1%2C%5Cdots%2CC_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_1,&#92;dots,C_m}' title='{C_1,&#92;dots,C_m}' class='latex' />, design an NFA <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> that begins with a nondeterministic choice of one of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> states <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' />. From every <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' />, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> starts reading its input <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx+%5Cin+%5C%7B0%2C1%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x &#92;in &#92;{0,1&#92;}^n}' title='{x &#92;in &#92;{0,1&#92;}^n}' class='latex' /> deterministically. The part of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' />‘s code from <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' /> is written so that if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> is an assignment that makes every literal in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BC_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_j}' title='{C_j}' class='latex' /> false—note that the literals can be presented in index order—then <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> accepts <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. Thus the formula is <em>un</em>satisfiable if and only if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BC_M%28n%29+%3D+2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n) = 2^n}' title='{C_M(n) = 2^n}' class='latex' />. So if we had a <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28Sn%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(Sn)}' title='{&#92;mathsf{poly}(Sn)}' class='latex' /> algorithm to compute <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BC_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n)}' title='{C_M(n)}' class='latex' />, we’d have <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP+%3D+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP = P}}' title='{&#92;mathsf{NP = P}}' class='latex' />.</p><p>
Moreover, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%5En+-+C_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^n - C_M(n)}' title='{2^n - C_M(n)}' class='latex' /> counts the satisfying assignments. Hence relaxing <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> from DFA to NFA makes our little problem <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#P}}' title='{&#92;mathsf{&#92;#P}}' class='latex' />-complete. Now it’s important that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> is part of the input. If <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> is fixed and we only want to compute <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BC_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n)}' title='{C_M(n)}' class='latex' /> given <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />, then of course we can convert <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> to an equivalent DFA which is likewise fixed, and run our algorithm. Hence one must be delicate with what constitutes the input. </p><p>
For an example, call a string <b>special</b> if it contains <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> copies of the pattern <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bu+%3D+010111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{u = 010111}' title='{u = 010111}' class='latex' /> for some <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> that is a prime number. We can count the number of special strings of length <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> in time polynomial in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />. To do so, we take <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm+%3D+%5Clfloor+n%2F6+%5Crfloor%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m = &#92;lfloor n/6 &#92;rfloor}' title='{m = &#92;lfloor n/6 &#92;rfloor}' class='latex' /> and program a choice over all <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bj+%5Cleq+m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j &#92;leq m}' title='{j &#92;leq m}' class='latex' /> as before, this time keeping only the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' /> for which <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> is prime. From each <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' /> we program a DFA <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M_j}' title='{M_j}' class='latex' /> that accepts a string <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> if and only if it contains exactly <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> copies of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{u}' title='{u}' class='latex' />. This resembles the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> case, but is different because there is no overlap in the strings accepted by the respective <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M_j}' title='{M_j}' class='latex' />. So we just count the numbers of length-<img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> strings accepted by each and add them up. </p><p>
This is not a hugely important application. We selected it to show that there are counting problems that might be tricky to solve without the FSA method. This and other examples may be useful.</p><p><p><H2> What Else Can Be Counted? </H2></p><p><p>
Note that even though the decision problem <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B2SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{2SAT}}' title='{&#92;mathsf{2SAT}}' class='latex' /> is in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />, the counting problem <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B%5C%232SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#2SAT}}' title='{&#92;mathsf{&#92;#2SAT}}' class='latex' /> is still <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#P}}' title='{&#92;mathsf{&#92;#P}}' class='latex' />-complete. For an aside, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B2SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{2SAT}}' title='{&#92;mathsf{2SAT}}' class='latex' /> is a major example in Mike’s quantum paper, but here we raise the question, what else can be counted? </p><p>
For instance, counting the number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_m%28f%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f)}' title='{N_m(f)}' class='latex' /> of solutions to an <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-variable polynomial <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{f}' title='{f}' class='latex' /> over <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathbb%7BZ%7D_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathbb{Z}_m}' title='{&#92;mathbb{Z}_m}' class='latex' /> is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#P}}' title='{&#92;mathsf{&#92;#P}}' class='latex' />-complete. It becomes <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%5E%7BO%281%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{O(1)}}' title='{n^{O(1)}}' class='latex' />-time, however, when <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{f}' title='{f}' class='latex' /> has degree at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. This is when <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> is fixed. What if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> is variable? We can also ask about computing <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_m%28f+-+j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f - j)}' title='{N_m(f - j)}' class='latex' /> for all <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bj+%5Cin+%5Cmathbb%7BZ%7D_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j &#92;in &#92;mathbb{Z}_m}' title='{j &#92;in &#92;mathbb{Z}_m}' class='latex' />, for the particular purpose of computing the <em>exponential sum</em></p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++Z_f+%3D+%5Csum_%7Bj%3D0%7D%5E%7Bm-1%7D+N_m%28f+-+j%29+%5Comega%5Ej+%3D+%5Csum_%7Bx+%5Cin+%5Cmathbb%7BZ%7D_m%5En%7D+%5Comega%5E%7Bf%28x%29%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  Z_f = &#92;sum_{j=0}^{m-1} N_m(f - j) &#92;omega^j = &#92;sum_{x &#92;in &#92;mathbb{Z}_m^n} &#92;omega^{f(x)}, ' title='&#92;displaystyle  Z_f = &#92;sum_{j=0}^{m-1} N_m(f - j) &#92;omega^j = &#92;sum_{x &#92;in &#92;mathbb{Z}_m^n} &#92;omega^{f(x)}, ' class='latex' /></p><p>
where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Comega+%3D+%5Cexp%28%5Cfrac%7B2%5Cpi+i%7D%7Bm%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;omega = &#92;exp(&#92;frac{2&#92;pi i}{m})}' title='{&#92;omega = &#92;exp(&#92;frac{2&#92;pi i}{m})}' class='latex' />.</p><p>
Dick co-authored a <a href=\"http://arxiv.org/abs/1005.2632\">paper</a> recently with Jin-Yi Cai, Xi Chen, and Pinyan Lu, showing that when <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{f}' title='{f}' class='latex' /> has degree at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BZ_f%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Z_f}' title='{Z_f}' class='latex' /> is computable in time polynomial in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Clog+m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;log m}' title='{&#92;log m}' class='latex' />. In particular this means that for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm+%3D+2%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m = 2^r}' title='{m = 2^r}' class='latex' />, when we can represent the members of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathbb%7BZ%7D_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathbb{Z}_m}' title='{&#92;mathbb{Z}_m}' class='latex' /> by strings in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5C%7B0%2C1%5C%7D%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{0,1&#92;}^r}' title='{&#92;{0,1&#92;}^r}' class='latex' />, the time to compute <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BZ_f%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Z_f}' title='{Z_f}' class='latex' /> is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nr)}' title='{&#92;mathsf{poly}(nr)}' class='latex' />. </p><p>
A little thought shows that this suffices to compute any individual number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_m%28f+-+j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f - j)}' title='{N_m(f - j)}' class='latex' /> in time <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nm%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nm)}' title='{&#92;mathsf{poly}(nm)}' class='latex' />, indeed by computing all of them. But if we just want one, and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm+%3D+2%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m = 2^r}' title='{m = 2^r}' class='latex' />, can we do it in time <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nr)}' title='{&#92;mathsf{poly}(nr)}' class='latex' />? This is not obvious to me (Ken), and at least for now leaves the funny situation where we can compute in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nr)}' title='{&#92;mathsf{poly}(nr)}' class='latex' /> time the historically important <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BZ_f%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Z_f}' title='{Z_f}' class='latex' /> function which involves all the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_m%28f+-+j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f - j)}' title='{N_m(f - j)}' class='latex' /> values, but don’t see a way to compute any one of them in the same time.</p><p><p><H2> Open Problems </H2></p><p><p>
Whose originally proved efficient counting for deterministic FSA? We seem to not be able to track that down. Are there some cool applications? </p><p>
What is the answer to the last problem? Should <em>counting</em> receive more emphasis in texts at the level of Mike’s?</p><p>
I (Ken) add a story: I first met Mike when we shared a compartment of the train between Hamburg, Germany and Aarhus, Denmark, on the way to ICALP 1982.  I had just moved from algebraic combinatorics into complexity during my first year at Oxford, and naturally asked him what were the propsects for proving <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.  He replied “It will be proved … yes we will prove it,” and backed up his confidence by naming <a href=\"http://link.springer.com/article/10.1007%2FBF01744431\">some</a><a href=\"http://dl.acm.org/citation.cfm?id=808733\">results</a> and giving some ideas along lines that would later be called the “Sipser programme” of approach via circuit lower bounds.  (Did we mention that he also wrote with Ravi Boppana a bellwether <a href=\"https://www.cs.umd.edu/~gasarch/BLOGPAPERS/boppana_sipser.ps\">survey</a> on circuit complexity?)  I guess there wasn’t a time limit on his assertion…</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11490/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11490/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11490&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "https://rjlipton.wordpress.com/2014/04/05/counting-is-sometimes-easy/" (21311 37187) obsolete 2 nil nil ((title nil "Counting Is Sometimes Easy") (link nil "https://rjlipton.wordpress.com/2014/04/05/counting-is-sometimes-easy/") (comments nil "https://rjlipton.wordpress.com/2014/04/05/counting-is-sometimes-easy/#comments") (pubDate nil "Sat, 05 Apr 2014 05:14:43 +0000") (dc:creator nil "Pip") (category nil "History") (category nil "Ideas") (category nil "Oldies") (category nil "P=NP") (category nil "People") (category nil "complexity") (category nil "counting") (category nil "finite automata") (category nil "Sipser") (category nil "textbooks") (guid ((isPermaLink . "false")) "https://rjlipton.wordpress.com/?p=11490") (description nil "Cases where we can count objects in polynomial time New Interim Dean source&#8212;our congrats Mike Sipser is one of the top theorists, especially in complexity theory, and has been Head of the Mathematics Department at MIT since 2004. He is long known for some very clever proofs and his famous survey paper on the status [&#8230;]<img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11490&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Cases where we can count objects in polynomial time </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"https://rjlipton.files.wordpress.com/2014/04/sipserdean.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/04/sipserdean.png?w=180&#038;h=216\" alt=\"SipserDean\" width=\"180\" height=\"216\" class=\"alignright wp-image-11495\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">New Interim Dean <a href=\"http://newsoffice.mit.edu/2013/michael-sipser-named-interim-dean-of-the-school-of-science-1206\">source</a>&#8212;our congrats<br /></FONT></td></table><p>
Mike Sipser is one of the top theorists, especially in complexity theory, and has been Head of the Mathematics Department at MIT since 2004. He is long known for some very clever proofs and his famous <a href=\"http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.44.9296\">survey paper</a> on the status of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' />. He is recently known for co-authoring the <a href=\"http://arxiv.org/pdf/quant-ph/0001106v1.pdf\">paper</a> that introduced <a href=\"http://en.wikipedia.org/wiki/Adiabatic_quantum_computation\">adiabatic quantum computing</a>, which is the kind being given physical realization <a href=\"http://bits.blogs.nytimes.com/2014/03/24/quantum-computing-research-may-back-controversial-company/\">by</a> the company D-Wave Systems. But he is perhaps best known nowadays for his <a href=\"http://www.amazon.com/Introduction-Theory-Computation-Michael-Sipser/dp/113318779X\">textbook</a><i>Introduction to the Theory of Computation</i>. I have used the earlier version many times for teaching our undergraduate class; I have not used the third edition, mainly because I teach other things these days.</p><p>
Today Ken and I wish to talk about a topic that is covered in his book, finite state automata, in relation to counting.<br /><span id=\"more-11490\"></span></p><p>
Yes, lowly finite state automata (FSA). In my opinion FSA are one of the great inventions of theory. They led Michael Rabin and Dana Scott to discover nondeterminism, yielding a Turing Award along the way. They led algorithm designers like Don Knuth to discover, with Jim Morris and Vaughan Pratt, the first linear-time pattern matching algorithm. And much more.</p><p>
Mike&#8217;s book was discussed before <a href=\"https://rjlipton.wordpress.com/2009/03/07/finite-state-automata-binary-decision-diagrams-and-presburger-arithmetic/\">here</a>, where I talked about his use of FSA to prove that the first order theory of addition is decidable. This is one of my favorite applications of FSA, which I learned from Ann Yasuhara directly&#8212;it is also included in her early <a href=\"http://www.amazon.com/Recursive-Function-Computer-Science-Mathematics/dp/0127689508\">book</a>, <i>Recursive Function Theory and Logic</i>.</p><p><p><H2> A Look at the Book </H2></p><p><p>
Mike&#8217;s book proves some interesting theorems that are ancient&#8212;okay, many decades old. This yields what in retrospect look like omissions, which are bound up with the history of the theorems. For example, consider the following classic one: </p><blockquote><p><b>Theorem 1</b><em> A language is context-free if and only if some nondeterministic pushdown automaton (PDA) accepts it. </em></p></blockquote><p>
This is proved in detail in his book&#8212;see page 117 in the new edition, Theorem 2.20. But the proof establishes more, much more, that is not stated. I have used both of these consequences in my own work over the years:</p><ul><li>
Given a context-free grammar we can construct the PDA in polynomial time, and conversely given the PDA we can construct the grammar. </p><li>
The sizes of the grammar and the description of the PDA are related by a polynomial bound.
</ul><p>
Note that the best construction, I believe, goes from a PDA with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> states to a grammar with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28S%5E%7B3%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(S^{3})}' title='{O(S^{3})}' class='latex' /> rules. If there is a better one it would have some interesting consequences. </p><p>
Let me say that this omission is not isolated to Mike&#8217;s book, but others most always leave out these interesting refinements. I believe that the reason is simple: the above theorem was proved before polynomial time was defined, and the textbook is sequenced that way. Hence the omission. Perhaps they can be added to a fourth edition.</p><p>
Ken adds&#8212;also writing much of the rest of this post: I now like the sequence of skipping grammars and PDA&#8217;s and going straight from regular languages and FSA to Turing computability and complexity. After this &#8216;kernel&#8217; material the instructor has an option of covering grammars, and then the polynomial-overhead concepts are in place. Or the instructor can do more with complexity or logic or some other core topic.</p><p><p><H2> Counting </H2></p><p><p>
Let&#8217;s get back to FSA and counting.</p><blockquote><p><b>Theorem 2</b><em> Let <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> be a deterministic FSA with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BS%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> states and input alphabet <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;Sigma}' title='{&#92;Sigma}' class='latex' />. Then we can determine the cardinality <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BC_m%28n%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{C_m(n)}' title='{C_m(n)}' class='latex' /> of the set <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BL%28M%29%5Ccap+%5CSigma%5E%7Bn%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{L(M)&#92;cap &#92;Sigma^{n}}' title='{L(M)&#92;cap &#92;Sigma^{n}}' class='latex' /> in time polynomial in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BS%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />. </em></p></blockquote><p><p>
Put another way, we can count in polynomial time the number of strings of length <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> that a FSA accepts. If the FSA is fixed, then the time is polynomial only in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />. Actually, in this case the time is essentially bi-linear in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />&#8212;it depends on the exact computational model. </p><p>
The algorithm to prove this is often described as &#8220;dynamic programming,&#8221; but often that just means maintaining a well-chosen data structure. Here we allocate a slot for each state <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> of the FSA, and maintain for each <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk+%5Cleq+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k &#92;leq n}' title='{k &#92;leq n}' class='latex' /> the number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_%7Bk%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{k,q}}' title='{N_{k,q}}' class='latex' /> of strings of length exactly <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k}' title='{k}' class='latex' /> that reach <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> from the start state <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s}' title='{s}' class='latex' />. Initially <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k = 0}' title='{k = 0}' class='latex' />, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_%7B0%2Cs%7D+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{0,s} = 1}' title='{N_{0,s} = 1}' class='latex' /> for the empty string, and all other <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_%7B0%2Cq%7D+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{0,q} = 0}' title='{N_{0,q} = 0}' class='latex' />. Now to update it to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_%7Bk%2B1%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{k+1,q}}' title='{N_{k+1,q}}' class='latex' />, find all states <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and characters <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{c}' title='{c}' class='latex' /> such that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cdelta%28p%2Cc%29+%3D+q%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;delta(p,c) = q}' title='{&#92;delta(p,c) = q}' class='latex' />, where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;delta}' title='{&#92;delta}' class='latex' /> is the transition function of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' />, and sum up <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_%7Bk%2Cp%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{k,p}}' title='{N_{k,p}}' class='latex' />. That is, </p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++N_%7Bk%2B1%2Cq%7D+%3D+%5Csum_%7Bp%2Cc%3A+%5Cdelta%28p%2Cc%29+%3D+q%7D+N_%7Bk%2Cp%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  N_{k+1,q} = &#92;sum_{p,c: &#92;delta(p,c) = q} N_{k,p}. ' title='&#92;displaystyle  N_{k+1,q} = &#92;sum_{p,c: &#92;delta(p,c) = q} N_{k,p}. ' class='latex' /></p><p>
Finally <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BC_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n)}' title='{C_M(n)}' class='latex' /> equals the sum of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_%7Bn%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{n,q}}' title='{N_{n,q}}' class='latex' /> over all accepting states <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' />. Assuming random access to the data slots, and unit time for arithmetic on small numbers, this runs in time <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28Sn%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(Sn)}' title='{O(Sn)}' class='latex' />.</p><p>
Sounds simple, but as often happens in complexity, delicacy and difficulty lurk not too far away.</p><p><p><H2> The NFA Case and an Application </H2></p><p><p>
First, does the algorithm work when <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> is nondeterministic? It certainly runs, and counts <em>something</em>, but not the number of accepted strings. So can we modify it to do so? </p><p>
The answer is no&#8212;or maybe better to say &#8220;ostensibly not&#8221;: Given a Boolean formula that is a conjunction of clauses <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BC_1%2C%5Cdots%2CC_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_1,&#92;dots,C_m}' title='{C_1,&#92;dots,C_m}' class='latex' />, design an NFA <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> that begins with a nondeterministic choice of one of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> states <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' />. From every <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' />, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> starts reading its input <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx+%5Cin+%5C%7B0%2C1%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x &#92;in &#92;{0,1&#92;}^n}' title='{x &#92;in &#92;{0,1&#92;}^n}' class='latex' /> deterministically. The part of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' />&#8216;s code from <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' /> is written so that if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> is an assignment that makes every literal in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BC_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_j}' title='{C_j}' class='latex' /> false&#8212;note that the literals can be presented in index order&#8212;then <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> accepts <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. Thus the formula is <em>un</em>satisfiable if and only if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BC_M%28n%29+%3D+2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n) = 2^n}' title='{C_M(n) = 2^n}' class='latex' />. So if we had a <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28Sn%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(Sn)}' title='{&#92;mathsf{poly}(Sn)}' class='latex' /> algorithm to compute <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BC_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n)}' title='{C_M(n)}' class='latex' />, we&#8217;d have <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP+%3D+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP = P}}' title='{&#92;mathsf{NP = P}}' class='latex' />.</p><p>
Moreover, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%5En+-+C_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^n - C_M(n)}' title='{2^n - C_M(n)}' class='latex' /> counts the satisfying assignments. Hence relaxing <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> from DFA to NFA makes our little problem <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#P}}' title='{&#92;mathsf{&#92;#P}}' class='latex' />-complete. Now it&#8217;s important that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> is part of the input. If <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> is fixed and we only want to compute <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BC_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n)}' title='{C_M(n)}' class='latex' /> given <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />, then of course we can convert <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> to an equivalent DFA which is likewise fixed, and run our algorithm. Hence one must be delicate with what constitutes the input. </p><p>
For an example, call a string <b>special</b> if it contains <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> copies of the pattern <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bu+%3D+010111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{u = 010111}' title='{u = 010111}' class='latex' /> for some <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> that is a prime number. We can count the number of special strings of length <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> in time polynomial in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />. To do so, we take <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm+%3D+%5Clfloor+n%2F6+%5Crfloor%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m = &#92;lfloor n/6 &#92;rfloor}' title='{m = &#92;lfloor n/6 &#92;rfloor}' class='latex' /> and program a choice over all <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bj+%5Cleq+m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j &#92;leq m}' title='{j &#92;leq m}' class='latex' /> as before, this time keeping only the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' /> for which <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> is prime. From each <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' /> we program a DFA <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M_j}' title='{M_j}' class='latex' /> that accepts a string <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> if and only if it contains exactly <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> copies of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{u}' title='{u}' class='latex' />. This resembles the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> case, but is different because there is no overlap in the strings accepted by the respective <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M_j}' title='{M_j}' class='latex' />. So we just count the numbers of length-<img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> strings accepted by each and add them up. </p><p>
This is not a hugely important application. We selected it to show that there are counting problems that might be tricky to solve without the FSA method. This and other examples may be useful.</p><p><p><H2> What Else Can Be Counted? </H2></p><p><p>
Note that even though the decision problem <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B2SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{2SAT}}' title='{&#92;mathsf{2SAT}}' class='latex' /> is in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />, the counting problem <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B%5C%232SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#2SAT}}' title='{&#92;mathsf{&#92;#2SAT}}' class='latex' /> is still <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#P}}' title='{&#92;mathsf{&#92;#P}}' class='latex' />-complete. For an aside, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B2SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{2SAT}}' title='{&#92;mathsf{2SAT}}' class='latex' /> is a major example in Mike&#8217;s quantum paper, but here we raise the question, what else can be counted? </p><p>
For instance, counting the number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_m%28f%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f)}' title='{N_m(f)}' class='latex' /> of solutions to an <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-variable polynomial <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{f}' title='{f}' class='latex' /> over <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathbb%7BZ%7D_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathbb{Z}_m}' title='{&#92;mathbb{Z}_m}' class='latex' /> is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#P}}' title='{&#92;mathsf{&#92;#P}}' class='latex' />-complete. It becomes <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%5E%7BO%281%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{O(1)}}' title='{n^{O(1)}}' class='latex' />-time, however, when <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{f}' title='{f}' class='latex' /> has degree at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. This is when <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> is fixed. What if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> is variable? We can also ask about computing <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_m%28f+-+j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f - j)}' title='{N_m(f - j)}' class='latex' /> for all <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bj+%5Cin+%5Cmathbb%7BZ%7D_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j &#92;in &#92;mathbb{Z}_m}' title='{j &#92;in &#92;mathbb{Z}_m}' class='latex' />, for the particular purpose of computing the <em>exponential sum</em></p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++Z_f+%3D+%5Csum_%7Bj%3D0%7D%5E%7Bm-1%7D+N_m%28f+-+j%29+%5Comega%5Ej+%3D+%5Csum_%7Bx+%5Cin+%5Cmathbb%7BZ%7D_m%5En%7D+%5Comega%5E%7Bf%28x%29%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  Z_f = &#92;sum_{j=0}^{m-1} N_m(f - j) &#92;omega^j = &#92;sum_{x &#92;in &#92;mathbb{Z}_m^n} &#92;omega^{f(x)}, ' title='&#92;displaystyle  Z_f = &#92;sum_{j=0}^{m-1} N_m(f - j) &#92;omega^j = &#92;sum_{x &#92;in &#92;mathbb{Z}_m^n} &#92;omega^{f(x)}, ' class='latex' /></p><p>
where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Comega+%3D+%5Cexp%28%5Cfrac%7B2%5Cpi+i%7D%7Bm%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;omega = &#92;exp(&#92;frac{2&#92;pi i}{m})}' title='{&#92;omega = &#92;exp(&#92;frac{2&#92;pi i}{m})}' class='latex' />.</p><p>
Dick co-authored a <a href=\"http://arxiv.org/abs/1005.2632\">paper</a> recently with Jin-Yi Cai, Xi Chen, and Pinyan Lu, showing that when <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{f}' title='{f}' class='latex' /> has degree at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BZ_f%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Z_f}' title='{Z_f}' class='latex' /> is computable in time polynomial in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Clog+m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;log m}' title='{&#92;log m}' class='latex' />. In particular this means that for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm+%3D+2%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m = 2^r}' title='{m = 2^r}' class='latex' />, when we can represent the members of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathbb%7BZ%7D_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathbb{Z}_m}' title='{&#92;mathbb{Z}_m}' class='latex' /> by strings in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5C%7B0%2C1%5C%7D%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{0,1&#92;}^r}' title='{&#92;{0,1&#92;}^r}' class='latex' />, the time to compute <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BZ_f%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Z_f}' title='{Z_f}' class='latex' /> is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nr)}' title='{&#92;mathsf{poly}(nr)}' class='latex' />. </p><p>
A little thought shows that this suffices to compute any individual number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_m%28f+-+j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f - j)}' title='{N_m(f - j)}' class='latex' /> in time <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nm%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nm)}' title='{&#92;mathsf{poly}(nm)}' class='latex' />, indeed by computing all of them. But if we just want one, and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm+%3D+2%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m = 2^r}' title='{m = 2^r}' class='latex' />, can we do it in time <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nr)}' title='{&#92;mathsf{poly}(nr)}' class='latex' />? This is not obvious to me (Ken), and at least for now leaves the funny situation where we can compute in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nr)}' title='{&#92;mathsf{poly}(nr)}' class='latex' /> time the historically important <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BZ_f%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Z_f}' title='{Z_f}' class='latex' /> function which involves all the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN_m%28f+-+j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f - j)}' title='{N_m(f - j)}' class='latex' /> values, but don&#8217;t see a way to compute any one of them in the same time.</p><p><p><H2> Open Problems </H2></p><p><p>
Whose originally proved efficient counting for deterministic FSA? We seem to not be able to track that down. Are there some cool applications? </p><p>
What is the answer to the last problem? Should <em>counting</em> receive more emphasis in texts at the level of Mike&#8217;s?</p><p>
I (Ken) add a story: I first met Mike when we shared a compartment of the train between Hamburg, Germany and Aarhus, Denmark, on the way to ICALP 1982.  I had just moved from algebraic combinatorics into complexity during my first year at Oxford, and naturally asked him what were the propsects for proving <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.  He replied &#8220;It will be proved &#8230; yes we will prove it,&#8221; and backed up his confidence by naming <a href=\"http://link.springer.com/article/10.1007%2FBF01744431\">some</a><a href=\"http://dl.acm.org/citation.cfm?id=808733\">results</a> and giving some ideas along lines that would later be called the &#8220;Sipser programme&#8221; of approach via circuit lower bounds.  (Did we mention that he also wrote with Ravi Boppana a bellwether <a href=\"https://www.cs.umd.edu/~gasarch/BLOGPAPERS/boppana_sipser.ps\">survey</a> on circuit complexity?)  I guess there wasn&#8217;t a time limit on his assertion&#8230;</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11490/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11490/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11490&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "https://rjlipton.wordpress.com/2014/04/05/counting-is-sometimes-easy/feed/") (slash:comments nil "11") (media:content ((url . "https://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/04/sipserdean.png?w=250") (medium . "image")) (media:title ((type . "html")) "SipserDean")))) ("Wait Wait… Don’t Fool Me!" "<p><font color=\"”#0066cc?\"><br /><em> It’s that time of year again </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"https://rjlipton.files.wordpress.com/2014/04/peterandcarlfool.jpg\"><img src=\"https://rjlipton.files.wordpress.com/2014/04/peterandcarlfool.jpg?w=240&h=180\" alt=\"peterandcarlFool\" width=\"240\" height=\"180\" class=\"alignright  wp-image-11474\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Altered from NPR <a href=\"http://www.npr.org/programs/waitwait/about.html\">source</a>.<br /></FONT></td></table><p>
Faadosly Polir is back in contact with us. We have <a href=\"https://rjlipton.wordpress.com/2009/04/01/a-new-factoring-algorithm/\">encountered</a><a href=\"https://rjlipton.wordpress.com/2010/03/31/april-fool/\">him</a><a href=\"https://rjlipton.wordpress.com/2013/04/01/interstellar-quantum-computation/\">before</a>, but this time he has company. He has teamed up with two well-known radio personalities to launch a quiz show about mathematics.</p><p>
Today Ken and I wish to talk about material for the show that Faadosly has sent us.<br /><span id=\"more-11473\"></span></p><p>
The draft he sent has the subtitle, “Strange Facts About Mathematics.” The material is not only about strange facts, but is strange in itself. Many of the “facts” are false. Everyone’s name is replaced by an anagram. Decoding the name to a true person helps you, but the fact can still be false. His co-authors on the scripts are named <b>Pearl Gates</b> and <b>Slack Laser</b>. </p><p>
Apparently the <a href=\"http://en.wikipedia.org/wiki/Wait_Wait..._Don't_Tell_Me!#Bluff_the_Listener\">idea</a> is that the quiz contestant hears three “facts” and has to say which one is true. The problem is that their math items are not arranged that way, but rather jumbled all together. The proportion of true ones seems to be more like 1/2 than 1/3. Perhaps it is harder to generate true ones that seem false than false ones that are plausible, so they figure they can do more of the latter later? Anyway, they are allowing us to share some with you.</p><p><p><H2> Some Strange Facts? </H2></p><p><p>
Here is a sampler from their draft—a mix of true stories and “fools.” Count a “fool” if either the personal description or the mathematical “fact” is false, or both.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Hydra Dye Frog</b>, while well known for his brilliant mathematics in number theory and analysis, once wrote a seminal paper on genetics. The issue was whether a dominant character should show a tendency to spread over a whole population; or put another way would all recessive characters tend to die out. Assuming a reasonable random model of mating, he showed that dominant genes would not force out recessive ones. </p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Gail Kali</b> is a mathematician from Chennai, India. Like her countryman Srinivasa Ramanujan, she credits a Hindu goddess for her mathematical insights—of course in her case the goddess Kali. In a dream Kali told her that every generalized Platonic solid with central symmetry in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' />-dimensional space has at least <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B3%5EN+-+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3^N - 1}' title='{3^N - 1}' class='latex' /> lower-dimensional faces, including its vertices.  Unfortunately, Gail woke up before Kali got beyond the all-triangles cases in the proof. </p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Rich-Cal Fried Sugars</b> was another great mathematician known for many results in number theory. But in his lifetime he was famous for helping solve one of the great mysteries of his time. Astronomers were tracking the position of Ceres, a huge asteroid, and they lost it owing to the glare of the sun. He famously predicted the path of where it would be, and on New Year’s Eve astronomers found it. </p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet}' title='{&#92;bullet}' class='latex' /><b>One-Ale Hurdler</b> proved that there was no way to route one-way traffic touring his whole city without causing a snarl. Even before his rule that T-junctions were bad news, he discovered that the bridges made it impossible. This problem founded an entire big branch of mathematics.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet}' title='{&#92;bullet}' class='latex' /><b>One-Cat Tree</b> proved that a relativistic smoothing of the Navier-Stokes equations allows infinite concentration of energy in finite time, because of its ability to simulate universal computation. Running this in reverse, it follows from the quantum complementarity of energy and time that the Big Bang did a lot of computation in its brief timespan. The computational results can now be read off from the pattern of gravity waves in the cosmic microwave background. At over a trillion times the concentrated power of the Large Hadron Collider, the Big Bang Computer represents almost a billion times the processing capacity of Google, whose data-mining efforts to read off long numerical calculations from it are underway. Thus we have it: the digits of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi}' title='{&#92;pi}' class='latex' /> in the sky.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Wes Gromit</b> is not related to the famous British star of animated films, but his father has composed many movie scores. In disjoint work with One-Cat Tree and <b>Gene Bern</b>, he proved the existence of an infinite arithmetical progression with exactly two prime numbers in it. Although married with five children, he was declared a bachelor by Queen Elizabeth II in 2012.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Annual Trig</b> was a mathematician who along with a colleague introduced modulo wrap-around computation to cryptography. They actually used it modulo six, but the ability to wrap was essential to make their system work. They were working on an analog system to scramble telephone calls. In their system there were six bands that had to be moved around, and they found that by doing certain arithmetic operations modulo six they had more security.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Town Falconer</b> proved that there is a language in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> whose complement does not have an interactive protocol. This flies in the face of there being an oracle constructed by <b>Amish Raid</b> that gives every language in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' /> such a protocol, so that Falconer and <b>Semi Spiker</b> are credited with proving the only truly natural non-relativizing result in complexity.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Joint Who Tolled</b> was a mathematician famous for work in analysis and related areas. He was a doubter of the Riemann Hypothesis (RH) throughout his life. There are claims—but who can tell—that he might have changed his mind if he knew some of the modern computations that show RH holding for a huge number of zeroes. </p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Glacial Warmish</b> is a complexity theorist who is interested in Kolmogorov Complexity, among other things. One of his main results is a proof that this theory gives a natural construction of a set that is undecidable, but is weaker than the Halting problem. </p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Glib Tales</b> co-wrote a paper proving what until recently was the fastest known way to flip pancakes in a stack so that the larger ones end up below smaller ones. Instead of opening a pancake business he founded a company which became rich enough to sponsor him in a match against the world chess champion. However, he got checkmated in nine moves. The paper still earned him an Erdős Number of 4.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet}' title='{&#92;bullet}' class='latex' /><b>Sonata Consort</b> proved that quantum computers can solve <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete problems. Although his algorithm is “galactic” in worst case, his ideas inspired a Vancouver startup company to build a quantum computer that solves <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete problems in many cases, perhaps even without needing anything “quantum” at all. As this company’s most valuable consultant, he is paid in a quantum-money scheme of his own devising. </p><p><p><H2> Open Problems </H2></p><p><p>
Which ones are the “fools”? Try not to be fooled today. As a hint, the fools have something in common…</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11473/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11473/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11473&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "https://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/" (21307 809) obsolete 3 nil nil ((title nil "Wait Wait… Don’t Fool Me!") (link nil "https://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/") (comments nil "https://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/#comments") (pubDate nil "Tue, 01 Apr 2014 18:19:21 +0000") (dc:creator nil "Pip") (category nil "Ideas") (category nil "People") (category nil "April Fool") (category nil "Computation") (category nil "Faadosly Polir") (category nil "gravity waves") (guid ((isPermaLink . "false")) "https://rjlipton.wordpress.com/?p=11473") (description nil "It&#8217;s that time of year again Altered from NPR source. Faadosly Polir is back in contact with us. We have encountered him before, but this time he has company. He has teamed up with two well-known radio personalities to launch a quiz show about mathematics. Today Ken and I wish to talk about material for [&#8230;]<img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11473&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> It&#8217;s that time of year again </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"https://rjlipton.files.wordpress.com/2014/04/peterandcarlfool.jpg\"><img src=\"https://rjlipton.files.wordpress.com/2014/04/peterandcarlfool.jpg?w=240&#038;h=180\" alt=\"peterandcarlFool\" width=\"240\" height=\"180\" class=\"alignright  wp-image-11474\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Altered from NPR <a href=\"http://www.npr.org/programs/waitwait/about.html\">source</a>.<br /></FONT></td></table><p>
Faadosly Polir is back in contact with us. We have <a href=\"https://rjlipton.wordpress.com/2009/04/01/a-new-factoring-algorithm/\">encountered</a><a href=\"https://rjlipton.wordpress.com/2010/03/31/april-fool/\">him</a><a href=\"https://rjlipton.wordpress.com/2013/04/01/interstellar-quantum-computation/\">before</a>, but this time he has company. He has teamed up with two well-known radio personalities to launch a quiz show about mathematics.</p><p>
Today Ken and I wish to talk about material for the show that Faadosly has sent us.<br /><span id=\"more-11473\"></span></p><p>
The draft he sent has the subtitle, &#8220;Strange Facts About Mathematics.&#8221; The material is not only about strange facts, but is strange in itself. Many of the &#8220;facts&#8221; are false. Everyone&#8217;s name is replaced by an anagram. Decoding the name to a true person helps you, but the fact can still be false. His co-authors on the scripts are named <b>Pearl Gates</b> and <b>Slack Laser</b>. </p><p>
Apparently the <a href=\"http://en.wikipedia.org/wiki/Wait_Wait..._Don't_Tell_Me!#Bluff_the_Listener\">idea</a> is that the quiz contestant hears three &#8220;facts&#8221; and has to say which one is true. The problem is that their math items are not arranged that way, but rather jumbled all together. The proportion of true ones seems to be more like 1/2 than 1/3. Perhaps it is harder to generate true ones that seem false than false ones that are plausible, so they figure they can do more of the latter later? Anyway, they are allowing us to share some with you.</p><p><p><H2> Some Strange Facts? </H2></p><p><p>
Here is a sampler from their draft&#8212;a mix of true stories and &#8220;fools.&#8221; Count a &#8220;fool&#8221; if either the personal description or the mathematical &#8220;fact&#8221; is false, or both.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Hydra Dye Frog</b>, while well known for his brilliant mathematics in number theory and analysis, once wrote a seminal paper on genetics. The issue was whether a dominant character should show a tendency to spread over a whole population; or put another way would all recessive characters tend to die out. Assuming a reasonable random model of mating, he showed that dominant genes would not force out recessive ones. </p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Gail Kali</b> is a mathematician from Chennai, India. Like her countryman Srinivasa Ramanujan, she credits a Hindu goddess for her mathematical insights&#8212;of course in her case the goddess Kali. In a dream Kali told her that every generalized Platonic solid with central symmetry in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' />-dimensional space has at least <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B3%5EN+-+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3^N - 1}' title='{3^N - 1}' class='latex' /> lower-dimensional faces, including its vertices.  Unfortunately, Gail woke up before Kali got beyond the all-triangles cases in the proof. </p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Rich-Cal Fried Sugars</b> was another great mathematician known for many results in number theory. But in his lifetime he was famous for helping solve one of the great mysteries of his time. Astronomers were tracking the position of Ceres, a huge asteroid, and they lost it owing to the glare of the sun. He famously predicted the path of where it would be, and on New Year&#8217;s Eve astronomers found it. </p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet}' title='{&#92;bullet}' class='latex' /><b>One-Ale Hurdler</b> proved that there was no way to route one-way traffic touring his whole city without causing a snarl. Even before his rule that T-junctions were bad news, he discovered that the bridges made it impossible. This problem founded an entire big branch of mathematics.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet}' title='{&#92;bullet}' class='latex' /><b>One-Cat Tree</b> proved that a relativistic smoothing of the Navier-Stokes equations allows infinite concentration of energy in finite time, because of its ability to simulate universal computation. Running this in reverse, it follows from the quantum complementarity of energy and time that the Big Bang did a lot of computation in its brief timespan. The computational results can now be read off from the pattern of gravity waves in the cosmic microwave background. At over a trillion times the concentrated power of the Large Hadron Collider, the Big Bang Computer represents almost a billion times the processing capacity of Google, whose data-mining efforts to read off long numerical calculations from it are underway. Thus we have it: the digits of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi}' title='{&#92;pi}' class='latex' /> in the sky.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Wes Gromit</b> is not related to the famous British star of animated films, but his father has composed many movie scores. In disjoint work with One-Cat Tree and <b>Gene Bern</b>, he proved the existence of an infinite arithmetical progression with exactly two prime numbers in it. Although married with five children, he was declared a bachelor by Queen Elizabeth II in 2012.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Annual Trig</b> was a mathematician who along with a colleague introduced modulo wrap-around computation to cryptography. They actually used it modulo six, but the ability to wrap was essential to make their system work. They were working on an analog system to scramble telephone calls. In their system there were six bands that had to be moved around, and they found that by doing certain arithmetic operations modulo six they had more security.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Town Falconer</b> proved that there is a language in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> whose complement does not have an interactive protocol. This flies in the face of there being an oracle constructed by <b>Amish Raid</b> that gives every language in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' /> such a protocol, so that Falconer and <b>Semi Spiker</b> are credited with proving the only truly natural non-relativizing result in complexity.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Joint Who Tolled</b> was a mathematician famous for work in analysis and related areas. He was a doubter of the Riemann Hypothesis (RH) throughout his life. There are claims&#8212;but who can tell&#8212;that he might have changed his mind if he knew some of the modern computations that show RH holding for a huge number of zeroes. </p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Glacial Warmish</b> is a complexity theorist who is interested in Kolmogorov Complexity, among other things. One of his main results is a proof that this theory gives a natural construction of a set that is undecidable, but is weaker than the Halting problem. </p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Glib Tales</b> co-wrote a paper proving what until recently was the fastest known way to flip pancakes in a stack so that the larger ones end up below smaller ones. Instead of opening a pancake business he founded a company which became rich enough to sponsor him in a match against the world chess champion. However, he got checkmated in nine moves. The paper still earned him an Erd&#337;s Number of 4.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet}' title='{&#92;bullet}' class='latex' /><b>Sonata Consort</b> proved that quantum computers can solve <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete problems. Although his algorithm is &#8220;galactic&#8221; in worst case, his ideas inspired a Vancouver startup company to build a quantum computer that solves <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete problems in many cases, perhaps even without needing anything &#8220;quantum&#8221; at all. As this company&#8217;s most valuable consultant, he is paid in a quantum-money scheme of his own devising. </p><p><p><H2> Open Problems </H2></p><p><p>
Which ones are the &#8220;fools&#8221;? Try not to be fooled today. As a hint, the fools have something in common&#8230;</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11473/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11473/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11473&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "https://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/feed/") (slash:comments nil "3") (media:content ((url . "https://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/04/peterandcarlfool.jpg?w=240") (medium . "image")) (media:title ((type . "html")) "peterandcarlFool")))) ("A Matchless Result" "<p><font color=\"”#0066cc?\"><br /><em> A famous algorithm, a new paper, a full correctness proof </em><br /><font color=\"”#000000?\"></p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/vijaygatech.jpg\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/vijaygatech.jpg?w=208&h=300\" alt=\"VijayGatech\"   class=\"alignright size-medium wp-image-11450\" /></a></p><p>
Vijay Vazirani is one of the world experts on algorithmic theory, and is especially known for his masterful <a href=\"http://www.amazon.com/Approximation-Algorithms-Vijay-V-Vazirani/dp/3540653678\">book</a> on approximation algorithms. Among many results in computational complexity, two have been Wikified: his <a href=\"http://en.wikipedia.org/wiki/Valiant-Vazirani_theorem\">theorem</a> with Les Valiant on unique SAT, and the subsequent generalized <a href=\"http://en.wikipedia.org/wiki/Isolation_lemma\">Isolation Lemma</a> with Ketan Mulmuley and his brother Umesh Vazirani. Lately his focus has been more on computational aspects of auctions, economic systems, and game theory.</p><p>
Today Ken and I wish to discuss a recent paper by Vijay on matching.<br /><span id=\"more-11449\"></span></p><p>
His paper is quite unique—is “quite” redundant?—well it is an isolated case of a top researcher taking the time and energy to explain the correctness of one of his famous algorithms, originally in joint work with Silvio Micali. As our field matures we should see more of this.</p><p>
Given an undirected graph <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BG%3D%28V%2CE%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{G=(V,E)}' title='{G=(V,E)}' class='latex' /> a <a href=\"http://en.wikipedia.org/wiki/Matching_(graph_theory)\">matching</a>, of course, is a set of pairwise non-adjacent edges: no two edges share a common vertex. A maximum matching is a matching that contains the largest possible number of edges. If <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%7CV%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{|V|}' title='{|V|}' class='latex' /> is even then a matching with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%7CV%7C%2F2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{|V|/2}' title='{|V|/2}' class='latex' /> edges is <em>perfect</em>. The notorious Petersen graph</p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/match.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/match.png?w=600\" alt=\"match\"   class=\"aligncenter size-full wp-image-11451\" /></a></p><p>
has six different perfect matchings: the five “spokes” and others using just one spoke. Although matchings are often associated with bipartite graphs, it is important to note that the Petersen graph is not bipartite. This is important since the matching algorithm we will discuss works for general graphs, not just bipartite graphs. </p><p><H2> The Importance Of Matching </H2></p><p><p>
Finding a maximum matching is one of the foundational problems at the intersection of graph theory and algorithmic theory. The reason for this is: </p><ul><li><i>The problem is useful in practice</i>. Unlike many problems that are sometimes studied in theory, people really would like to be able to find matchings of general graphs. See <a href=\"http://www.cs.odu.edu/~mhalappa/matching/applications.html\">this</a> for a detailed list.</p><li><i>The problem is basic to the theory of graphs</i>. L&aacute;szl&oacute; Lov&aacute;sz and Michael Plummer wrote an entire book called <a href=\"http://www.amazon.com/Matching-Theory-AMS-Chelsea-Publishing/dp/0821847597\">Matching Theory</a> on—you guessed right—matchings. They shared the Niveau Prize of the Hungarian Academy of Sciences for this book in 1991. We especially like the Amazon review of the book:</p><blockquote><p>
The subject has obviously advanced a lot since the book was published, but the overview provided is still unmatched.
</p></blockquote><p>
Cool pun.</p><p><li><i>The problem is basic to the theory of algorithms</i>. Euclid may have the first non-trivial algorithm, his algorithm for finding the gcd of two numbers, but algorithms for matching started over fifty years ago. This is not the place to trace out the long and complex history of who did what algorithm for finding matchings. Suffice it to say that much of the theory of algorithms can be traced to the history of matching algorithms: various tricks and methods that are used through computing often first appeared in matching algorithms. Andras Frank has written a wonderful <a href=\"http://www.cs.elte.hu/egres/tr/egres-04-14.pdf\">piece</a> called <i>On Kuhn’s Hungarian Method—A tribute from Hungary</i> about the bipartite case—see it for some interesting history.
</ul><p>
Here is a picture of some of the applications of matching algorithms.</p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/apps.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/apps.png?w=550&h=377\" alt=\"apps\" width=\"550\" height=\"377\" class=\"aligncenter wp-image-11452\" /></a></p><p>
Let’s turn to look at Vijay’s new paper.</p><p><p><H2> The Paper’s Tracks </H2></p><p><p>
Actually we need to first look at the original paper called <i>An <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28%5Csqrt%7B%7CV%7C%7D%7CE%7C%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(&#92;sqrt{|V|}|E|)}' title='{O(&#92;sqrt{|V|}|E|)}' class='latex' /> algoithm for finding maximum matching in general graphs</i> by Silvio Micali and Vijay Vazirani. It was <a href=\"http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=4567800\">published</a> in the 21st Annual Symposium on Foundations of Computer Science in 1980. </p><p>
We will call this paper the MV paper, and its algorithm the MV algorithm. Note the running time is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28m%5Csqrt%7Bn%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(m&#92;sqrt{n})}' title='{O(m&#92;sqrt{n})}' class='latex' /> using “modern” internationally agreed-upon notation: we use <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> always to denote the number of vertices and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> the number of edges. Paul Halmos was always careful about <a href=\"https://rjlipton.wordpress.com/2009/03/30/halmos-non-standard-analysis-and-names/\">notation</a>, and once said that his worst nightmare was that someone would type 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Clim_%7B%5Cepsilon+%5Crightarrow+%5Cinfty%7D+n_%7B%5Cepsilon%7D+%3D+0.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;lim_{&#92;epsilon &#92;rightarrow &#92;infty} n_{&#92;epsilon} = 0. ' title='&#92;displaystyle  &#92;lim_{&#92;epsilon &#92;rightarrow &#92;infty} n_{&#92;epsilon} = 0. ' class='latex' /></p><p>
The title of Vijay’s original paper was created before these agreements, so it is understandable that they used the “old” style notation in the title.  It is also less prone to the problem that if you write <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28%5Csqrt%7Bn%7Dm%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(&#92;sqrt{n}m)}' title='{O(&#92;sqrt{n}m)}' class='latex' /> it may be hard to see that the square-root sign does not also cover the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' />.</p><p><p>
This paper presented the MV algorithm with the given running time. The major advance was that it efficiently found a maximum matching in general graphs. There is an interesting cliff that happens in the theory of algorithms for finding maximum matchings. Bipartite graphs are just much easier for matching algorithms. Of course they are easier for many other algorithms: it is trivial to find a 2-coloring of a bipartite graph, but NP-hard to find a 3-colring in a general graph. One of the achievements of the MV paper is that everything works for general graphs. </p><p>
The new <a href=\"http://www.cc.gatech.edu/~vazirani/new-proof.pdf\">paper</a> is solely authored by Vijay. It has several goals, but the main one is to give a clear but full proof of the correctness of the MV algorithm. The algorithm remains the same, but the correctness proof is new. The previous proof had a flawed case analysis. The new proof avails itself of information that the previous proof bypassed, to make the analysis tighter and more manageable.</p><p>
We will not give the whole proof, but we will give an algorithmic idea highlighted also by Vijay, which has independent interest.</p><p><p><H2> Dueling Depth-First Searches </H2></p><p><p>
Let <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BG+%3D+%28V%2CE%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{G = (V,E)}' title='{G = (V,E)}' class='latex' /> be a directed acyclic graph whose vertices are in <em>layers</em> numbered <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' /> (for sinks) through <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cell%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;ell}' title='{&#92;ell}' class='latex' /> (sources). Edges from any non-sink node go to nodes in lower layers, not necessarily the next layer, and every node has a path to a sink in layer <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' />. Let <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> be any two non-sink nodes. By <a href=\"http://en.wikipedia.org/wiki/Menger's_theorem\">Menger’s Theorem</a>, either</p><ol><li>
there are vertex-disjoint paths from <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> to sinks <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' />, or </p><li>
the set <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BB_%7Bg%2Cr%7D+%3D+%5C%7Bv%3A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{B_{g,r} = &#92;{v:}' title='{B_{g,r} = &#92;{v:}' class='latex' /> every path from <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> to a sink goes through <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v&#92;}}' title='{v&#92;}}' class='latex' /> is nonempty.
</ol><p>
In the latter case, let <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> be the element of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BB_%7Bg%2Cr%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{B_{g,r}}' title='{B_{g,r}}' class='latex' /> in the highest layer. The algorithm must find this <em>highest bottleneck</em> node <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> within time proportional to the total number of edges in paths from <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' />. In the former case the algorithm must output paths to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' /> within time proportional to the total number of edges on all paths from <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> to either of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' />.</p><p>
The main puzzle is, how can we avoid searching past <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> and taking more than the time allowed to the latter case, if we don’t even know that it holds? For a single local search, this does indeed seem to be impossible. However, what Vijay called “Double Depth-First Search” (DDFS) solves it. Two search posses led by rangers Green and Red start respectively at <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> and mark out “green” and “red” nodes and edges both. Neither may tread on the other’s ground. The rules are:</p><ul><li>
Whichever posse is on a higher-level node gets to move; if they are on the same level, Red moves. </p><li>
If one posse’s depth-first search comes to an already-marked empty node <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />—it could have been marked by either posse on an earlier visit—it goes back and tries another down-edge from its previous node. If there are no more down-edges, it backtracks up from its previous node as in normal depth-first search. </p><li> If the other posse is <i>on</i> node <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />, however, Red and Green fight a duel at 20 paces.
</ul><p><P></p><table style=\"margin:auto;\"><tr><td><a href=\"https://rjlipton.files.wordpress.com/2014/03/beattyghranger.jpg\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/beattyghranger.jpg?w=300&h=375\" alt=\"BeattyGHRanger\" width=\"300\" height=\"375\" class=\"aligncenter wp-image-11471\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">By permission of <a href=\"http://comicartfans.com/\">ComicArtFans</a> gallery owner Mark Geier: <a href=\"http://www.comicartfans.com/GalleryPiece.asp?Piece=1043183&amp;GSub=147878\">source</a> commissioned from artist <a href=\"http://www.terrybeatty.com/\">Terry Beatty</a><br /></FONT></td></tr></table><p>
The duel follows gentlemen’s rules. Red shoots in the air. Green takes the hint and backtracks looking for another node <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{w}' title='{w}' class='latex' /> at the same level as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> or lower. If Green succeeds, he sends a Western Union telegram to Red, who puts his marker on <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> and moves on. If Green gets stuck, then Red has to keep the same bargain. Red backtracks until he either finds another <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{w}' title='{w}' class='latex' /> at the same level as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> or lower, whereupon he telegrams Green to come back and claim <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> as his, or Red gets stuck too. If they are both stuck they both come back to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />. Each claims just the respective (necessarily different) (sets of) edges he followed into <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />, but they identify <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> itself as the highest bottleneck <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> and share a bottle of hooch to celebrate.</p><p>
They can celebrate because they have met the time guarantee: Neither searched below <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' />, and all the edges they traversed in their wanderings had to be on paths to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' />, since they did not find any open trails going elsewhere. And in the case where they reach separate destinations <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' />, any backtracking done by one posse because of hitting the other’s marked node is inductively on a path to the other’s goal, so at most the various routes between <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5C%7Bg%2Cr%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{g,r&#92;}}' title='{&#92;{g,r&#92;}}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5C%7Bs_g%2Cs_r%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{s_g,s_r&#92;}}' title='{&#92;{s_g,s_r&#92;}}' class='latex' /> get searched. </p><p>
Making a search posse on a lower level wait for the other ensures that nodes below a bottleneck don’t get searched.  Many other parts of the algorithm similarly rely on co-ordination with delicate timing considerations; this is just a taste of them.  The new paper also has many other figurative concepts, with illustrations.</p><p><H2> Open Problems </H2></p><p><p>
Do read Vijay’s paper. It is one of the clearest expositions of a graph algorithm—a model for others. Also the idea that Vijay went back to an ancient paper—over thirty years old—solely to write the definitive proof of its correctness is something we all should applaud.</p><p>
Of course the central problem in matching theory is still what is the best time for an algorithm that finds a maximum matching? Given the interest today in huge graphs that arise from social networks we will like a linear time algorithm. Is this possible? See <a href=\"http://www.or.uni-bonn.de/~hougardy/paper/23matching.pdf\">this</a> for some fast approximate algorithms.</p><p>
[added words \"on all paths\" to DDFS time requirement, name and word fixes and adds, permission for vintage Green Hornet/Lone Ranger artwork]</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11449/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11449/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11449&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "https://rjlipton.wordpress.com/2014/03/28/a-matchless-result/" (21301 39412) obsolete 4 nil nil ((title nil "A Matchless Result") (link nil "https://rjlipton.wordpress.com/2014/03/28/a-matchless-result/") (comments nil "https://rjlipton.wordpress.com/2014/03/28/a-matchless-result/#comments") (pubDate nil "Fri, 28 Mar 2014 15:49:08 +0000") (dc:creator nil "Pip") (category nil "Oldies") (category nil "Proofs") (category nil "Results") (category nil "Algorithms") (category nil "complexity") (category nil "depth-first search") (category nil "graphs") (category nil "matchings") (category nil "Silvio Micali") (category nil "Vijay Vazirani") (guid ((isPermaLink . "false")) "https://rjlipton.wordpress.com/?p=11449") (description nil "A famous algorithm, a new paper, a full correctness proof Vijay Vazirani is one of the world experts on algorithmic theory, and is especially known for his masterful book on approximation algorithms. Among many results in computational complexity, two have been Wikified: his theorem with Les Valiant on unique SAT, and the subsequent generalized Isolation [&#8230;]<img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11449&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> A famous algorithm, a new paper, a full correctness proof </em><br /><font color=\"”#000000?\"></p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/vijaygatech.jpg\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/vijaygatech.jpg?w=208&#038;h=300\" alt=\"VijayGatech\"   class=\"alignright size-medium wp-image-11450\" /></a></p><p>
Vijay Vazirani is one of the world experts on algorithmic theory, and is especially known for his masterful <a href=\"http://www.amazon.com/Approximation-Algorithms-Vijay-V-Vazirani/dp/3540653678\">book</a> on approximation algorithms. Among many results in computational complexity, two have been Wikified: his <a href=\"http://en.wikipedia.org/wiki/Valiant-Vazirani_theorem\">theorem</a> with Les Valiant on unique SAT, and the subsequent generalized <a href=\"http://en.wikipedia.org/wiki/Isolation_lemma\">Isolation Lemma</a> with Ketan Mulmuley and his brother Umesh Vazirani. Lately his focus has been more on computational aspects of auctions, economic systems, and game theory.</p><p>
Today Ken and I wish to discuss a recent paper by Vijay on matching.<br /><span id=\"more-11449\"></span></p><p>
His paper is quite unique&#8212;is &#8220;quite&#8221; redundant?&#8212;well it is an isolated case of a top researcher taking the time and energy to explain the correctness of one of his famous algorithms, originally in joint work with Silvio Micali. As our field matures we should see more of this.</p><p>
Given an undirected graph <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BG%3D%28V%2CE%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{G=(V,E)}' title='{G=(V,E)}' class='latex' /> a <a href=\"http://en.wikipedia.org/wiki/Matching_(graph_theory)\">matching</a>, of course, is a set of pairwise non-adjacent edges: no two edges share a common vertex. A maximum matching is a matching that contains the largest possible number of edges. If <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%7CV%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{|V|}' title='{|V|}' class='latex' /> is even then a matching with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%7CV%7C%2F2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{|V|/2}' title='{|V|/2}' class='latex' /> edges is <em>perfect</em>. The notorious Petersen graph</p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/match.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/match.png?w=600\" alt=\"match\"   class=\"aligncenter size-full wp-image-11451\" /></a></p><p>
has six different perfect matchings: the five &#8220;spokes&#8221; and others using just one spoke. Although matchings are often associated with bipartite graphs, it is important to note that the Petersen graph is not bipartite. This is important since the matching algorithm we will discuss works for general graphs, not just bipartite graphs. </p><p><H2> The Importance Of Matching </H2></p><p><p>
Finding a maximum matching is one of the foundational problems at the intersection of graph theory and algorithmic theory. The reason for this is: </p><ul><li><i>The problem is useful in practice</i>. Unlike many problems that are sometimes studied in theory, people really would like to be able to find matchings of general graphs. See <a href=\"http://www.cs.odu.edu/~mhalappa/matching/applications.html\">this</a> for a detailed list.</p><li><i>The problem is basic to the theory of graphs</i>. L&aacute;szl&oacute; Lov&aacute;sz and Michael Plummer wrote an entire book called <a href=\"http://www.amazon.com/Matching-Theory-AMS-Chelsea-Publishing/dp/0821847597\">Matching Theory</a> on&#8212;you guessed right&#8212;matchings. They shared the Niveau Prize of the Hungarian Academy of Sciences for this book in 1991. We especially like the Amazon review of the book:</p><blockquote><p>
The subject has obviously advanced a lot since the book was published, but the overview provided is still unmatched.
</p></blockquote><p>
Cool pun.</p><p><li><i>The problem is basic to the theory of algorithms</i>. Euclid may have the first non-trivial algorithm, his algorithm for finding the gcd of two numbers, but algorithms for matching started over fifty years ago. This is not the place to trace out the long and complex history of who did what algorithm for finding matchings. Suffice it to say that much of the theory of algorithms can be traced to the history of matching algorithms: various tricks and methods that are used through computing often first appeared in matching algorithms. Andras Frank has written a wonderful <a href=\"http://www.cs.elte.hu/egres/tr/egres-04-14.pdf\">piece</a> called <i>On Kuhn&#8217;s Hungarian Method&#8212;A tribute from Hungary</i> about the bipartite case&#8212;see it for some interesting history.
</ul><p>
Here is a picture of some of the applications of matching algorithms.</p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/apps.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/apps.png?w=550&#038;h=377\" alt=\"apps\" width=\"550\" height=\"377\" class=\"aligncenter wp-image-11452\" /></a></p><p>
Let&#8217;s turn to look at Vijay&#8217;s new paper.</p><p><p><H2> The Paper&#8217;s Tracks </H2></p><p><p>
Actually we need to first look at the original paper called <i>An <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28%5Csqrt%7B%7CV%7C%7D%7CE%7C%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(&#92;sqrt{|V|}|E|)}' title='{O(&#92;sqrt{|V|}|E|)}' class='latex' /> algoithm for finding maximum matching in general graphs</i> by Silvio Micali and Vijay Vazirani. It was <a href=\"http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=4567800\">published</a> in the 21st Annual Symposium on Foundations of Computer Science in 1980. </p><p>
We will call this paper the MV paper, and its algorithm the MV algorithm. Note the running time is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28m%5Csqrt%7Bn%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(m&#92;sqrt{n})}' title='{O(m&#92;sqrt{n})}' class='latex' /> using &#8220;modern&#8221; internationally agreed-upon notation: we use <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> always to denote the number of vertices and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> the number of edges. Paul Halmos was always careful about <a href=\"https://rjlipton.wordpress.com/2009/03/30/halmos-non-standard-analysis-and-names/\">notation</a>, and once said that his worst nightmare was that someone would type 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Clim_%7B%5Cepsilon+%5Crightarrow+%5Cinfty%7D+n_%7B%5Cepsilon%7D+%3D+0.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;lim_{&#92;epsilon &#92;rightarrow &#92;infty} n_{&#92;epsilon} = 0. ' title='&#92;displaystyle  &#92;lim_{&#92;epsilon &#92;rightarrow &#92;infty} n_{&#92;epsilon} = 0. ' class='latex' /></p><p>
The title of Vijay&#8217;s original paper was created before these agreements, so it is understandable that they used the &#8220;old&#8221; style notation in the title.  It is also less prone to the problem that if you write <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28%5Csqrt%7Bn%7Dm%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(&#92;sqrt{n}m)}' title='{O(&#92;sqrt{n}m)}' class='latex' /> it may be hard to see that the square-root sign does not also cover the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' />.</p><p><p>
This paper presented the MV algorithm with the given running time. The major advance was that it efficiently found a maximum matching in general graphs. There is an interesting cliff that happens in the theory of algorithms for finding maximum matchings. Bipartite graphs are just much easier for matching algorithms. Of course they are easier for many other algorithms: it is trivial to find a 2-coloring of a bipartite graph, but NP-hard to find a 3-colring in a general graph. One of the achievements of the MV paper is that everything works for general graphs. </p><p>
The new <a href=\"http://www.cc.gatech.edu/~vazirani/new-proof.pdf\">paper</a> is solely authored by Vijay. It has several goals, but the main one is to give a clear but full proof of the correctness of the MV algorithm. The algorithm remains the same, but the correctness proof is new. The previous proof had a flawed case analysis. The new proof avails itself of information that the previous proof bypassed, to make the analysis tighter and more manageable.</p><p>
We will not give the whole proof, but we will give an algorithmic idea highlighted also by Vijay, which has independent interest.</p><p><p><H2> Dueling Depth-First Searches </H2></p><p><p>
Let <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BG+%3D+%28V%2CE%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{G = (V,E)}' title='{G = (V,E)}' class='latex' /> be a directed acyclic graph whose vertices are in <em>layers</em> numbered <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' /> (for sinks) through <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cell%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;ell}' title='{&#92;ell}' class='latex' /> (sources). Edges from any non-sink node go to nodes in lower layers, not necessarily the next layer, and every node has a path to a sink in layer <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' />. Let <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> be any two non-sink nodes. By <a href=\"http://en.wikipedia.org/wiki/Menger's_theorem\">Menger&#8217;s Theorem</a>, either</p><ol><li>
there are vertex-disjoint paths from <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> to sinks <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' />, or </p><li>
the set <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BB_%7Bg%2Cr%7D+%3D+%5C%7Bv%3A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{B_{g,r} = &#92;{v:}' title='{B_{g,r} = &#92;{v:}' class='latex' /> every path from <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> to a sink goes through <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v&#92;}}' title='{v&#92;}}' class='latex' /> is nonempty.
</ol><p>
In the latter case, let <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> be the element of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BB_%7Bg%2Cr%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{B_{g,r}}' title='{B_{g,r}}' class='latex' /> in the highest layer. The algorithm must find this <em>highest bottleneck</em> node <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> within time proportional to the total number of edges in paths from <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' />. In the former case the algorithm must output paths to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' /> within time proportional to the total number of edges on all paths from <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> to either of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' />.</p><p>
The main puzzle is, how can we avoid searching past <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> and taking more than the time allowed to the latter case, if we don&#8217;t even know that it holds? For a single local search, this does indeed seem to be impossible. However, what Vijay called &#8220;Double Depth-First Search&#8221; (DDFS) solves it. Two search posses led by rangers Green and Red start respectively at <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> and mark out &#8220;green&#8221; and &#8220;red&#8221; nodes and edges both. Neither may tread on the other&#8217;s ground. The rules are:</p><ul><li>
Whichever posse is on a higher-level node gets to move; if they are on the same level, Red moves. </p><li>
If one posse&#8217;s depth-first search comes to an already-marked empty node <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />&#8212;it could have been marked by either posse on an earlier visit&#8212;it goes back and tries another down-edge from its previous node. If there are no more down-edges, it backtracks up from its previous node as in normal depth-first search. </p><li> If the other posse is <i>on</i> node <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />, however, Red and Green fight a duel at 20 paces.
</ul><p><P></p><table style=\"margin:auto;\"><tr><td><a href=\"https://rjlipton.files.wordpress.com/2014/03/beattyghranger.jpg\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/beattyghranger.jpg?w=300&#038;h=375\" alt=\"BeattyGHRanger\" width=\"300\" height=\"375\" class=\"aligncenter wp-image-11471\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">By permission of <a href=\"http://comicartfans.com/\">ComicArtFans</a> gallery owner Mark Geier: <a href=\"http://www.comicartfans.com/GalleryPiece.asp?Piece=1043183&amp;GSub=147878\">source</a> commissioned from artist <a href=\"http://www.terrybeatty.com/\">Terry Beatty</a><br /></FONT></td></tr></table><p>
The duel follows gentlemen&#8217;s rules. Red shoots in the air. Green takes the hint and backtracks looking for another node <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{w}' title='{w}' class='latex' /> at the same level as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> or lower. If Green succeeds, he sends a Western Union telegram to Red, who puts his marker on <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> and moves on. If Green gets stuck, then Red has to keep the same bargain. Red backtracks until he either finds another <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{w}' title='{w}' class='latex' /> at the same level as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> or lower, whereupon he telegrams Green to come back and claim <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> as his, or Red gets stuck too. If they are both stuck they both come back to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />. Each claims just the respective (necessarily different) (sets of) edges he followed into <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />, but they identify <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> itself as the highest bottleneck <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> and share a bottle of hooch to celebrate.</p><p>
They can celebrate because they have met the time guarantee: Neither searched below <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' />, and all the edges they traversed in their wanderings had to be on paths to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' />, since they did not find any open trails going elsewhere. And in the case where they reach separate destinations <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' />, any backtracking done by one posse because of hitting the other&#8217;s marked node is inductively on a path to the other&#8217;s goal, so at most the various routes between <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5C%7Bg%2Cr%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{g,r&#92;}}' title='{&#92;{g,r&#92;}}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5C%7Bs_g%2Cs_r%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{s_g,s_r&#92;}}' title='{&#92;{s_g,s_r&#92;}}' class='latex' /> get searched. </p><p>
Making a search posse on a lower level wait for the other ensures that nodes below a bottleneck don&#8217;t get searched.  Many other parts of the algorithm similarly rely on co-ordination with delicate timing considerations; this is just a taste of them.  The new paper also has many other figurative concepts, with illustrations.</p><p><H2> Open Problems </H2></p><p><p>
Do read Vijay&#8217;s paper. It is one of the clearest expositions of a graph algorithm&#8212;a model for others. Also the idea that Vijay went back to an ancient paper&#8212;over thirty years old&#8212;solely to write the definitive proof of its correctness is something we all should applaud.</p><p>
Of course the central problem in matching theory is still what is the best time for an algorithm that finds a maximum matching? Given the interest today in huge graphs that arise from social networks we will like a linear time algorithm. Is this possible? See <a href=\"http://www.or.uni-bonn.de/~hougardy/paper/23matching.pdf\">this</a> for some fast approximate algorithms.</p><p>
[added words \"on all paths\" to DDFS time requirement, name and word fixes and adds, permission for vintage Green Hornet/Lone Ranger artwork]</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11449/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11449/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11449&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "https://rjlipton.wordpress.com/2014/03/28/a-matchless-result/feed/") (slash:comments nil "8") (media:content ((url . "https://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/vijaygatech.jpg?w=209") (medium . "image")) (media:title ((type . "html")) "VijayGatech")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/match.png") (medium . "image")) (media:title ((type . "html")) "match")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/apps.png?w=334") (medium . "image")) (media:title ((type . "html")) "apps")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/beattyghranger.jpg?w=238") (medium . "image")) (media:title ((type . "html")) "BeattyGHRanger")))) ("Rabin Meets Lagrange" "<p><font color=\"”#0066cc?\"><br /><em> On Rabin’s recent talks at Tech </em><br /><font color=\"”#000000?\"></p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/unknown2.jpeg\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/unknown2.jpeg?w=600\" alt=\"Unknown\"   class=\"alignright size-full wp-image-11441\" /></a></p><p>
Jeffrey Shallit is a computational number theorist, with many wonderful results. He is also well known for his work as an advocate for civil liberties on the Internet, and also against <a href=\"http://en.wikipedia.org/wiki/Intelligent_design\">intelligent design</a> (ID). Indeed he was at one point slated to testify in the 2005 Dover <a href=\"http://en.wikipedia.org/wiki/Kitzmiller_v._Dover\">case</a> until a stand-down by the ID side accomplished his purpose. Ken once used his <a href=\"http://www.talkreason.org/articles/eandsdembski.pdf\">survey</a> with Wesley Elsberry in a graduate seminar on cellular automata and various forms of complexity, not to say anything about ID, but just as a source of well-written definitions and relevant examples.</p><p>
Today I would like to talk about on Michael Rabin’s talks at Tech this week and their connection to Jeff.<br /><span id=\"more-11439\"></span></p><p>
Both of Rabin’s talks were great, no surprise. They were based on his recent <a href=\"http://cacm.acm.org/magazines/2014/2/171688-cryptography-miracles-secure-auctions-matching-problem-verification/fulltext\">paper</a> with Silvio Micali in February’s issue of the CACM. Rather than talk about details I will focus on one aspect that used a “trick” that I particularly liked, and thought I would share it with you. The trick is related to an old paper with Jeff.</p><p>
The paper <a href=\"http://dl.acm.org/citation.cfm?id=896095\">appears</a> on the ACM website with the first author named “J.O. Rabin.” Those are Jeff’s initials, with the ‘O’ interestingly standing for “Outlaw.” Michael also has ‘O’ as his middle initial, so it was an easier mistake to make. O well.</p><p><h2> Secret Straight-line Computations </h2><p><p>
Rabin showed, roughly, how to perform straight-line computation in a manner that keeps the values hidden from others. His computations allowed addition, multiplication, and comparison. The last is what I found quite interesting, since hiding ring operations is not too difficult, but hiding a highly non-linear operation like comparison seems quite different. Even multiplication while non-linear is bi-linear, and has a lot of linear structure that can be exploited. </p><p>
The basic approach is to use the <i>split value</i> representation of a number. A large prime <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is fixed, and all values <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> are represented by some pair <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%28u%2Cv%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(u,v)}' title='{(u,v)}' class='latex' /> so that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bu+%2B+v+%3D+x+%5Cbmod+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{u + v = x &#92;bmod p}' title='{u + v = x &#92;bmod p}' class='latex' />. If the split is done randomly, then knowing one of the pair gives no information at all about the value of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. This idea has been used before, of course, in many crypto protocols, often in multi-party protocols. Rabin’s work uses this method to make auctions secret. and does the same for electronic elections. See their paper for the details of what type of security he and Micali are able to achieve. </p><p>
Let’s go back to the comparison operation. In order to perform it using split pairs, Rabin needs to use Lagrange’s Four Square Theorem, which I state in a moment. The reason is that he can reduce comparison to the checking that some <img src='https://s-ssl.wordpress.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> is in a certain range, but he needs that the value of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> not be too large. Lagrange’s theorem allows him to do that. </p><p><h2> Lagrange’s Theorem </h2><p><p>
Joseph Lagrange in 1770 proved the wonderful <a href=\"http://en.wikipedia.org/wiki/Lagrange's_four-square_theorem\">theorem</a>: </p><blockquote><p><b>Theorem: </b><em> Every natural number is the sum of four squares. </em></p></blockquote><p> Thus given <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx+%5Cge+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x &#92;ge 0}' title='{x &#92;ge 0}' class='latex' /> there are <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%2Cb%2Cc%2Cd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a,b,c,d}' title='{a,b,c,d}' class='latex' /> so that
<p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++x+%3D+a%5E%7B2%7D+%2B+b%5E%7B2%7D+%2B+c%5E%7B2%7D+%2B+d%5E%7B2%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  x = a^{2} + b^{2} + c^{2} + d^{2}. ' title='&#92;displaystyle  x = a^{2} + b^{2} + c^{2} + d^{2}. ' class='latex' /></p><p> Note, some or all of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%2Cb%2Cc%2Cd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a,b,c,d}' title='{a,b,c,d}' class='latex' /> can be zero.</p><p>
There are two key ideas in Lagrange’s proof of his theorem. The first is that if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> can both be written as a sum of four squares, then so can their product. </p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/euler.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/euler.png?w=300\" alt=\"euler\" width=\"300\" class=\"aligncenter  wp-image-11440\" /></a></p><p>
The second is that, therefore, one needs only to prove that every <b>prime number</b> can be written as a sum of four squares. But this can be done using properties of primes, and we are done.</p><p><h2> Effective Lagrange’s Theorem </h2><p><p>
Not quite. Over three hundred years later—1770 to 1985—the rules have changed. We now are interested not just in the existence of a representation of a number as the sum of four squares, but are interested in finding it efficiently. In this light Lagrange’s proof breaks down immediately, since he works on primes and therefore needs the factorization of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> in order to find its representation as four squares. This means that his proof cannot directly lead to an efficient algorithm—one must avoid factorization.</p><p>
Enter our ‘O’ duo. In their paper from 1985 they devised a randomized algorithm that runs in polynomial time and finds a four square representation of a number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. They actually given several proofs of this statement, including additional results about other representation theorems that they can make effective. Jeff himself <a href=\"http://mathoverflow.net/questions/110239/is-there-an-algorithm-for-writing-a-number-as-a-sum-of-three-squares/110278#110278\">commented</a> in a MathOverflow <a href=\"http://mathoverflow.net/questions/110239/is-there-an-algorithm-for-writing-a-number-as-a-sum-of-three-squares/\">item</a> on possible extensions, and their paper itself was <a href=\"http://math.stackexchange.com/questions/483101/rabin-and-shallit-algorithm\">outlined</a> on StackExchange last September.</p><p>
One method uses the following neat idea: Suppose that you want to represent <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> as the sum of four squares. Pick random squares <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r^{2}}' title='{r^{2}}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s^{2}}' title='{s^{2}}' class='latex' /> and assume that
<p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle+%09x+%3D+r%5E%7B2%7D+%2B+s%5E%7B2%7D+%2B+p+%5C+%5C+%28%2A%29%2C++&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle 	x = r^{2} + s^{2} + p &#92; &#92; (*),  ' title='&#92;displaystyle 	x = r^{2} + s^{2} + p &#92; &#92; (*),  ' class='latex' /></p><p> where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is a prime that is congruent to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' />. The key is that such primes are always the sum of two squares. So they build a subroutine that can solve this problem in randomized polynomial time: they have a polynomial time procedure to find such a representation of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> provided it is a prime. As usual the procedure could be lucky and still work if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is composite. But if the procedure fails they pick new <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s}' title='{s}' class='latex' /> and try again. A deep and amazing theorem of Yuri Linnik shows that every <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> has many representations of the form (*). This leads to the main result.</p><p><h2> A Weak Lagrange Theorem </h2><p><p>
Suppose that we want to write <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x&gt;0}' title='{x&gt;0}' class='latex' /> as the sum of a few squares, but perhaps more than four. The ‘few’ must be small because it affects the cost of other computations, and also we want finding the few to be efficient. We can use the Rabin-Shallit method which is more than fast enough. But there is a very simple direct method that I thought I would share.</p><p>
Let’s suppose that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x&gt;0}' title='{x&gt;0}' class='latex' /> and apply the “greedy” method—it is always a good idea to try the simplest ideas first.</p><p>
Set <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk%3D%5Clfloor+%5Csqrt%7Bx%7D+%5Crfloor%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k=&#92;lfloor &#92;sqrt{x} &#92;rfloor}' title='{k=&#92;lfloor &#92;sqrt{x} &#92;rfloor}' class='latex' />. Let <img src='https://s-ssl.wordpress.com/latex.php?latex=%7By+%3D+x-k%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y = x-k^{2}}' title='{y = x-k^{2}}' class='latex' />. Then
<p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++0+%5Cle+y+%5Cle+x-k%5E%7B2%7D+%5Cle+x+-+%28%5Csqrt%7Bx%7D-1%29%5E%7B2%7D+%3D+2%5Csqrt%7Bx%7D%2B1.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  0 &#92;le y &#92;le x-k^{2} &#92;le x - (&#92;sqrt{x}-1)^{2} = 2&#92;sqrt{x}+1. ' title='&#92;displaystyle  0 &#92;le y &#92;le x-k^{2} &#92;le x - (&#92;sqrt{x}-1)^{2} = 2&#92;sqrt{x}+1. ' class='latex' /></p><p> Then repeat this on <img src='https://s-ssl.wordpress.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> until it is small enough to do by table lookup. The number of iterations is bounded by a double logarithm in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. So this yields an expression for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> as a sum of at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Clog+%5Clog+x%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;log &#92;log x}' title='{&#92;log &#92;log x}' class='latex' /> squares. For the range used in Rabin’s applications this value is seven rather than four. </p><p><h2> Open Problems </h2><p><p>
I like the weak effective Lagrange Theorem. If anyone knows a reference for it I would like to know. Perhaps it can be used in some other algorithms because it is extremely fast. For an <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-bit number it finds the representation in time <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28M%28n%29%5Clog+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(M(n)&#92;log n)}' title='{O(M(n)&#92;log n)}' class='latex' /> where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M(n)}' title='{M(n)}' class='latex' /> is the time to perform multiplication, while Rabin-Shallit uses <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28M%28n%29%28%5Clog+n%29%5E%7B2%7D%5Clog%5Clog+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(M(n)(&#92;log n)^{2}&#92;log&#92;log n)}' title='{O(M(n)(&#92;log n)^{2}&#92;log&#92;log n)}' class='latex' />.</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11439/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11439/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11439&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "https://rjlipton.wordpress.com/2014/03/23/rabin-meets-lagrange/" (21295 33376) obsolete 5 nil nil ((title nil "Rabin Meets Lagrange") (link nil "https://rjlipton.wordpress.com/2014/03/23/rabin-meets-lagrange/") (comments nil "https://rjlipton.wordpress.com/2014/03/23/rabin-meets-lagrange/#comments") (pubDate nil "Mon, 24 Mar 2014 00:54:56 +0000") (dc:creator nil "rjlipton") (category nil "History") (category nil "People") (category nil "Proofs") (category nil "four squares") (category nil "Lagrange Theorem") (category nil "secret computation") (guid ((isPermaLink . "false")) "https://rjlipton.wordpress.com/?p=11439") (description nil "On Rabin&#8217;s recent talks at Tech Jeffrey Shallit is a computational number theorist, with many wonderful results. He is also well known for his work as an advocate for civil liberties on the Internet, and also against intelligent design (ID). Indeed he was at one point slated to testify in the 2005 Dover case until [&#8230;]<img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11439&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> On Rabin&#8217;s recent talks at Tech </em><br /><font color=\"”#000000?\"></p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/unknown2.jpeg\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/unknown2.jpeg?w=600\" alt=\"Unknown\"   class=\"alignright size-full wp-image-11441\" /></a></p><p>
Jeffrey Shallit is a computational number theorist, with many wonderful results. He is also well known for his work as an advocate for civil liberties on the Internet, and also against <a href=\"http://en.wikipedia.org/wiki/Intelligent_design\">intelligent design</a> (ID). Indeed he was at one point slated to testify in the 2005 Dover <a href=\"http://en.wikipedia.org/wiki/Kitzmiller_v._Dover\">case</a> until a stand-down by the ID side accomplished his purpose. Ken once used his <a href=\"http://www.talkreason.org/articles/eandsdembski.pdf\">survey</a> with Wesley Elsberry in a graduate seminar on cellular automata and various forms of complexity, not to say anything about ID, but just as a source of well-written definitions and relevant examples.</p><p>
Today I would like to talk about on Michael Rabin&#8217;s talks at Tech this week and their connection to Jeff.<br /><span id=\"more-11439\"></span></p><p>
Both of Rabin&#8217;s talks were great, no surprise. They were based on his recent <a href=\"http://cacm.acm.org/magazines/2014/2/171688-cryptography-miracles-secure-auctions-matching-problem-verification/fulltext\">paper</a> with Silvio Micali in February&#8217;s issue of the CACM. Rather than talk about details I will focus on one aspect that used a &#8220;trick&#8221; that I particularly liked, and thought I would share it with you. The trick is related to an old paper with Jeff.</p><p>
The paper <a href=\"http://dl.acm.org/citation.cfm?id=896095\">appears</a> on the ACM website with the first author named &#8220;J.O. Rabin.&#8221; Those are Jeff&#8217;s initials, with the &#8216;O&#8217; interestingly standing for &#8220;Outlaw.&#8221; Michael also has &#8216;O&#8217; as his middle initial, so it was an easier mistake to make. O well.</p><p><h2> Secret Straight-line Computations </h2><p><p>
Rabin showed, roughly, how to perform straight-line computation in a manner that keeps the values hidden from others. His computations allowed addition, multiplication, and comparison. The last is what I found quite interesting, since hiding ring operations is not too difficult, but hiding a highly non-linear operation like comparison seems quite different. Even multiplication while non-linear is bi-linear, and has a lot of linear structure that can be exploited. </p><p>
The basic approach is to use the <i>split value</i> representation of a number. A large prime <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is fixed, and all values <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> are represented by some pair <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%28u%2Cv%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(u,v)}' title='{(u,v)}' class='latex' /> so that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bu+%2B+v+%3D+x+%5Cbmod+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{u + v = x &#92;bmod p}' title='{u + v = x &#92;bmod p}' class='latex' />. If the split is done randomly, then knowing one of the pair gives no information at all about the value of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. This idea has been used before, of course, in many crypto protocols, often in multi-party protocols. Rabin&#8217;s work uses this method to make auctions secret. and does the same for electronic elections. See their paper for the details of what type of security he and Micali are able to achieve. </p><p>
Let&#8217;s go back to the comparison operation. In order to perform it using split pairs, Rabin needs to use Lagrange&#8217;s Four Square Theorem, which I state in a moment. The reason is that he can reduce comparison to the checking that some <img src='https://s-ssl.wordpress.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> is in a certain range, but he needs that the value of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> not be too large. Lagrange&#8217;s theorem allows him to do that. </p><p><h2> Lagrange&#8217;s Theorem </h2><p><p>
Joseph Lagrange in 1770 proved the wonderful <a href=\"http://en.wikipedia.org/wiki/Lagrange's_four-square_theorem\">theorem</a>: </p><blockquote><p><b>Theorem: </b><em> Every natural number is the sum of four squares. </em></p></blockquote><p> Thus given <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx+%5Cge+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x &#92;ge 0}' title='{x &#92;ge 0}' class='latex' /> there are <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%2Cb%2Cc%2Cd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a,b,c,d}' title='{a,b,c,d}' class='latex' /> so that
<p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++x+%3D+a%5E%7B2%7D+%2B+b%5E%7B2%7D+%2B+c%5E%7B2%7D+%2B+d%5E%7B2%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  x = a^{2} + b^{2} + c^{2} + d^{2}. ' title='&#92;displaystyle  x = a^{2} + b^{2} + c^{2} + d^{2}. ' class='latex' /></p><p> Note, some or all of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%2Cb%2Cc%2Cd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a,b,c,d}' title='{a,b,c,d}' class='latex' /> can be zero.</p><p>
There are two key ideas in Lagrange&#8217;s proof of his theorem. The first is that if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> can both be written as a sum of four squares, then so can their product. </p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/euler.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/euler.png?w=300\" alt=\"euler\" width=\"300\" class=\"aligncenter  wp-image-11440\" /></a></p><p>
The second is that, therefore, one needs only to prove that every <b>prime number</b> can be written as a sum of four squares. But this can be done using properties of primes, and we are done.</p><p><h2> Effective Lagrange&#8217;s Theorem </h2><p><p>
Not quite. Over three hundred years later&#8212;1770 to 1985&#8212;the rules have changed. We now are interested not just in the existence of a representation of a number as the sum of four squares, but are interested in finding it efficiently. In this light Lagrange&#8217;s proof breaks down immediately, since he works on primes and therefore needs the factorization of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> in order to find its representation as four squares. This means that his proof cannot directly lead to an efficient algorithm&#8212;one must avoid factorization.</p><p>
Enter our &#8216;O&#8217; duo. In their paper from 1985 they devised a randomized algorithm that runs in polynomial time and finds a four square representation of a number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. They actually given several proofs of this statement, including additional results about other representation theorems that they can make effective. Jeff himself <a href=\"http://mathoverflow.net/questions/110239/is-there-an-algorithm-for-writing-a-number-as-a-sum-of-three-squares/110278#110278\">commented</a> in a MathOverflow <a href=\"http://mathoverflow.net/questions/110239/is-there-an-algorithm-for-writing-a-number-as-a-sum-of-three-squares/\">item</a> on possible extensions, and their paper itself was <a href=\"http://math.stackexchange.com/questions/483101/rabin-and-shallit-algorithm\">outlined</a> on StackExchange last September.</p><p>
One method uses the following neat idea: Suppose that you want to represent <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> as the sum of four squares. Pick random squares <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r^{2}}' title='{r^{2}}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s^{2}}' title='{s^{2}}' class='latex' /> and assume that
<p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle+%09x+%3D+r%5E%7B2%7D+%2B+s%5E%7B2%7D+%2B+p+%5C+%5C+%28%2A%29%2C++&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle 	x = r^{2} + s^{2} + p &#92; &#92; (*),  ' title='&#92;displaystyle 	x = r^{2} + s^{2} + p &#92; &#92; (*),  ' class='latex' /></p><p> where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is a prime that is congruent to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' />. The key is that such primes are always the sum of two squares. So they build a subroutine that can solve this problem in randomized polynomial time: they have a polynomial time procedure to find such a representation of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> provided it is a prime. As usual the procedure could be lucky and still work if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is composite. But if the procedure fails they pick new <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bs%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s}' title='{s}' class='latex' /> and try again. A deep and amazing theorem of Yuri Linnik shows that every <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> has many representations of the form (*). This leads to the main result.</p><p><h2> A Weak Lagrange Theorem </h2><p><p>
Suppose that we want to write <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x&gt;0}' title='{x&gt;0}' class='latex' /> as the sum of a few squares, but perhaps more than four. The &#8216;few&#8217; must be small because it affects the cost of other computations, and also we want finding the few to be efficient. We can use the Rabin-Shallit method which is more than fast enough. But there is a very simple direct method that I thought I would share.</p><p>
Let&#8217;s suppose that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x&gt;0}' title='{x&gt;0}' class='latex' /> and apply the &#8220;greedy&#8221; method&#8212;it is always a good idea to try the simplest ideas first.</p><p>
Set <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk%3D%5Clfloor+%5Csqrt%7Bx%7D+%5Crfloor%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k=&#92;lfloor &#92;sqrt{x} &#92;rfloor}' title='{k=&#92;lfloor &#92;sqrt{x} &#92;rfloor}' class='latex' />. Let <img src='https://s-ssl.wordpress.com/latex.php?latex=%7By+%3D+x-k%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y = x-k^{2}}' title='{y = x-k^{2}}' class='latex' />. Then
<p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++0+%5Cle+y+%5Cle+x-k%5E%7B2%7D+%5Cle+x+-+%28%5Csqrt%7Bx%7D-1%29%5E%7B2%7D+%3D+2%5Csqrt%7Bx%7D%2B1.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  0 &#92;le y &#92;le x-k^{2} &#92;le x - (&#92;sqrt{x}-1)^{2} = 2&#92;sqrt{x}+1. ' title='&#92;displaystyle  0 &#92;le y &#92;le x-k^{2} &#92;le x - (&#92;sqrt{x}-1)^{2} = 2&#92;sqrt{x}+1. ' class='latex' /></p><p> Then repeat this on <img src='https://s-ssl.wordpress.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> until it is small enough to do by table lookup. The number of iterations is bounded by a double logarithm in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. So this yields an expression for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> as a sum of at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Clog+%5Clog+x%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;log &#92;log x}' title='{&#92;log &#92;log x}' class='latex' /> squares. For the range used in Rabin&#8217;s applications this value is seven rather than four. </p><p><h2> Open Problems </h2><p><p>
I like the weak effective Lagrange Theorem. If anyone knows a reference for it I would like to know. Perhaps it can be used in some other algorithms because it is extremely fast. For an <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-bit number it finds the representation in time <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28M%28n%29%5Clog+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(M(n)&#92;log n)}' title='{O(M(n)&#92;log n)}' class='latex' /> where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BM%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M(n)}' title='{M(n)}' class='latex' /> is the time to perform multiplication, while Rabin-Shallit uses <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28M%28n%29%28%5Clog+n%29%5E%7B2%7D%5Clog%5Clog+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(M(n)(&#92;log n)^{2}&#92;log&#92;log n)}' title='{O(M(n)(&#92;log n)^{2}&#92;log&#92;log n)}' class='latex' />.</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11439/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11439/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11439&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "https://rjlipton.wordpress.com/2014/03/23/rabin-meets-lagrange/feed/") (slash:comments nil "0") (media:content ((url . "https://1.gravatar.com/avatar/afaa664a052777146630095c596117b2?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "lipton")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/unknown2.jpeg") (medium . "image")) (media:title ((type . "html")) "Unknown")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/euler.png") (medium . "image")) (media:title ((type . "html")) "euler")))) ("The Power Of ACC" "<p><font color=\"”#0066cc?\"><br /><em> Euler’s back-door pass to Gauss sinks a bucket </em><br /><font color=\"”#000000?\"></p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/acc-basketball-hand-640_20111109111225_640_480.jpg\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/acc-basketball-hand-640_20111109111225_640_480.jpg?w=200&h=150\" alt=\"ACC-basketball-hand-640_20111109111225_640_480\" width=\"200\" height=\"150\" class=\"alignright wp-image-11432\" /></a></p><p>
ACC stands for the Atlantic Coast Conference, which is an athletic organization that contains Georgia Tech and fourteen other colleges. In basketball, the top several teams in the ACC qualified for the NCAA championship tournament, which started today. We call the NCAA tournament “March Madness” because the opening rounds have games being shown on national TV seemingly every hour of every day, and often some spectacular upsets happen. Indeed Harvard has just beaten a favored University of Cincinnati team. </p><p>
Today I want talk about another ACC: our own complexity class.<span id=\"more-11431\"></span></p><p>
Recall that <a href=\"http://en.wikipedia.org/wiki/ACC0\">ACC</a>, as a complexity class, is the class of Boolean functions computed by boolean circuits of constant depth and polynomial size, and the gates include <i>modular</i> gates that can count the number of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> inputs modulo a fixed constant. This class is quite mysterious. It could be very powerful, yet we do not even know if it contains the majority function.</p><p><p>
Alas the ACC qualifiers for the men’s tournament did not contain Georgia Tech, for our men’s team had a losing record this year.  Our women’s team, however, played well enough to receive an at-large entry into the NCAA Women’s championship, which is staggered two days after the men and so begins Saturday.  No Buffalo team made either.  The tournaments run through April 7 and 8.  Go Yellow Jackets.</p><p><H2> The Problem </H2></p><p><p>
Suppose you have a number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' />. Now I give you an <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-bit prime number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and ask that you check whether <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a quadratic residue modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />. Recall that means that there is a <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> such that 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++a+%5Cequiv+b%5E%7B2%7D+%5Cbmod+p.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  a &#92;equiv b^{2} &#92;bmod p. ' title='&#92;displaystyle  a &#92;equiv b^{2} &#92;bmod p. ' class='latex' /></p><p>
This is the problem we are interested in solving with an ACC circuit. Note that it is a <a href=\"http://en.wikipedia.org/wiki/Promise_problem\">promise problem</a>—we only ask that your computation works when the input number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is a prime.</p><p><p><H2> An Approach </H2></p><p>
An obvious idea is to use the famous <a href=\"http://en.wikipedia.org/wiki/Euler's_criterion\">Euler criterion</a>, which says that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a quadratic residue if and only if 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++a%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D+%5Cequiv+1+%5Cbmod+p.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  a^{&#92;frac{p-1}{2}} &#92;equiv 1 &#92;bmod p. ' title='&#92;displaystyle  a^{&#92;frac{p-1}{2}} &#92;equiv 1 &#92;bmod p. ' class='latex' /></p><p>
Thus we need only raise <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> to a power by repeated squaring and so on. The trouble, of course, is that we do not know whether ACC can do the required repeated multiplication. </p><p><p><H2> Another Approach </H2></p><p><p>
Now let’s expressly state that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is bounded in size by some constant. Still the Euler approach looks hopeless. But there is a deep theorem of number theory that comes to the rescue: <a href=\"http://en.wikipedia.org/wiki/Quadratic_reciprocity\">quadratic reciprocity</a>. Define the <a href=\"http://en.wikipedia.org/wiki/Legendre_symbol\">Legendre symbol</a></p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' title='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' class='latex' /></p><p>
as the value <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B+a%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D+%5Cbmod+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{ a^{&#92;frac{p-1}{2}} &#92;bmod p}' title='{ a^{&#92;frac{p-1}{2}} &#92;bmod p}' class='latex' /> where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is a prime. Note it is always <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B-1%2C0%2C%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{-1,0,+1}' title='{-1,0,+1}' class='latex' />: it is only <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' /> when <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> divides <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' />. Thus our problem is to compute 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' title='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' class='latex' /></p><p>
for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> an input and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> bounded in size. </p><p>
This is in ACC. The key is we can use the deep quadratic reciprocity <a href=\"http://en.wikipedia.org/wiki/Quadratic_reciprocity\">theorem</a> which says that 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Bp%7D%7Bq%7D+%5Cright%29+%5Cleft%28+%5Cfrac%7Bq%7D%7Bp%7D+%5Cright%29+%3D+%28-1%29%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D%28-1%29%5E%7B%5Cfrac%7Bq-1%7D%7B2%7D%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{p}{q} &#92;right) &#92;left( &#92;frac{q}{p} &#92;right) = (-1)^{&#92;frac{p-1}{2}}(-1)^{&#92;frac{q-1}{2}}, ' title='&#92;displaystyle  &#92;left( &#92;frac{p}{q} &#92;right) &#92;left( &#92;frac{q}{p} &#92;right) = (-1)^{&#92;frac{p-1}{2}}(-1)^{&#92;frac{q-1}{2}}, ' class='latex' /></p><p>
where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> are primes. The theorem was conjectured by Leonhard Euler and Adrien-Marie Legendre, but finally proved by Carl Gauss. He referred to it as “the fundamental theorem” and wrote:  </p><blockquote><p>
The fundamental theorem must certainly be regarded as one of the most elegant of its type.
</p></blockquote><p>
So how do we proceed? Suppose first that the constant <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a prime. Then we know by reciprocity that 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+%5Cleft%28+%5Cfrac%7Bp%7D%7Ba%7D+%5Cright%29+%3D+%28-1%29%5E%7B%5Cfrac%7Ba-1%7D%7B2%7D%7D%28-1%29%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{p}{a} &#92;right) = (-1)^{&#92;frac{a-1}{2}}(-1)^{&#92;frac{p-1}{2}}. ' title='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{p}{a} &#92;right) = (-1)^{&#92;frac{a-1}{2}}(-1)^{&#92;frac{p-1}{2}}. ' class='latex' /></p><p>
The right-hand side is easy to compute in ACC. To determine it we need only compute <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />‘s residue modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' />. Since <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is given in binary this is trivial. Thus, all reduces to the computation of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cleft%28+%5Cfrac%7Bp%7D%7Ba%7D+%5Cright%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;left( &#92;frac{p}{a} &#92;right)}' title='{&#92;left( &#92;frac{p}{a} &#92;right)}' class='latex' />. The key is that the Legendre symbol only depends on the value of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' />. Since we can do this in ACC we are done for the case when <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a prime.</p><p>
When <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is composite we use one simple fact about the Legendre symbol that follows directly from its definition. 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Bab%7D%7Bp%7D+%5Cright%29+%3D+%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+%5Cleft%28+%5Cfrac%7Bb%7D%7Bp%7D+%5Cright%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{ab}{p} &#92;right) = &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{b}{p} &#92;right). ' title='&#92;displaystyle  &#92;left( &#92;frac{ab}{p} &#92;right) = &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{b}{p} &#92;right). ' class='latex' /></p><p>
Thus we can use the case where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is prime multiple times. </p><p><p><H2> Open Problems </H2></p><p><p>
The Legendre symbol for bounded <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is thus in ACC—the complexity class, not the conference. The rationale for this discussion is two-fold. One it shows that obvious approaches to a problem may sometimes be avoided by deep mathematics. Is this possible to do the same for other problems that we care about? The permanent, for example? Another rationale is the perennially important open problem: what can ACC actually compute? It may be hard to resolve the majority function, but perhaps other functions can be shown to be in ACC. Good luck thinking about this.</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11431/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11431/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11431&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "https://rjlipton.wordpress.com/2014/03/20/the-power-of-acc/" (21291 24649) obsolete 6 nil nil ((title nil "The Power Of ACC") (link nil "https://rjlipton.wordpress.com/2014/03/20/the-power-of-acc/") (comments nil "https://rjlipton.wordpress.com/2014/03/20/the-power-of-acc/#comments") (pubDate nil "Thu, 20 Mar 2014 21:40:25 +0000") (dc:creator nil "Pip") (category nil "All Posts") (category nil "Ideas") (category nil "ACC") (category nil "boolean") (category nil "circuits") (category nil "complexity") (guid ((isPermaLink . "false")) "https://rjlipton.wordpress.com/?p=11431") (description nil "Euler&#8217;s back-door pass to Gauss sinks a bucket ACC stands for the Atlantic Coast Conference, which is an athletic organization that contains Georgia Tech and fourteen other colleges. In basketball, the top several teams in the ACC qualified for the NCAA championship tournament, which started today. We call the NCAA tournament &#8220;March Madness&#8221; because the [&#8230;]<img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11431&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Euler&#8217;s back-door pass to Gauss sinks a bucket </em><br /><font color=\"”#000000?\"></p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/acc-basketball-hand-640_20111109111225_640_480.jpg\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/acc-basketball-hand-640_20111109111225_640_480.jpg?w=200&#038;h=150\" alt=\"ACC-basketball-hand-640_20111109111225_640_480\" width=\"200\" height=\"150\" class=\"alignright wp-image-11432\" /></a></p><p>
ACC stands for the Atlantic Coast Conference, which is an athletic organization that contains Georgia Tech and fourteen other colleges. In basketball, the top several teams in the ACC qualified for the NCAA championship tournament, which started today. We call the NCAA tournament &#8220;March Madness&#8221; because the opening rounds have games being shown on national TV seemingly every hour of every day, and often some spectacular upsets happen. Indeed Harvard has just beaten a favored University of Cincinnati team. </p><p>
Today I want talk about another ACC: our own complexity class.<span id=\"more-11431\"></span></p><p>
Recall that <a href=\"http://en.wikipedia.org/wiki/ACC0\">ACC</a>, as a complexity class, is the class of Boolean functions computed by boolean circuits of constant depth and polynomial size, and the gates include <i>modular</i> gates that can count the number of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> inputs modulo a fixed constant. This class is quite mysterious. It could be very powerful, yet we do not even know if it contains the majority function.</p><p><p>
Alas the ACC qualifiers for the men&#8217;s tournament did not contain Georgia Tech, for our men&#8217;s team had a losing record this year.  Our women&#8217;s team, however, played well enough to receive an at-large entry into the NCAA Women&#8217;s championship, which is staggered two days after the men and so begins Saturday.  No Buffalo team made either.  The tournaments run through April 7 and 8.  Go Yellow Jackets.</p><p><H2> The Problem </H2></p><p><p>
Suppose you have a number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' />. Now I give you an <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-bit prime number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and ask that you check whether <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a quadratic residue modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />. Recall that means that there is a <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> such that 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++a+%5Cequiv+b%5E%7B2%7D+%5Cbmod+p.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  a &#92;equiv b^{2} &#92;bmod p. ' title='&#92;displaystyle  a &#92;equiv b^{2} &#92;bmod p. ' class='latex' /></p><p>
This is the problem we are interested in solving with an ACC circuit. Note that it is a <a href=\"http://en.wikipedia.org/wiki/Promise_problem\">promise problem</a>&#8212;we only ask that your computation works when the input number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is a prime.</p><p><p><H2> An Approach </H2></p><p>
An obvious idea is to use the famous <a href=\"http://en.wikipedia.org/wiki/Euler's_criterion\">Euler criterion</a>, which says that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a quadratic residue if and only if 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++a%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D+%5Cequiv+1+%5Cbmod+p.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  a^{&#92;frac{p-1}{2}} &#92;equiv 1 &#92;bmod p. ' title='&#92;displaystyle  a^{&#92;frac{p-1}{2}} &#92;equiv 1 &#92;bmod p. ' class='latex' /></p><p>
Thus we need only raise <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> to a power by repeated squaring and so on. The trouble, of course, is that we do not know whether ACC can do the required repeated multiplication. </p><p><p><H2> Another Approach </H2></p><p><p>
Now let&#8217;s expressly state that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is bounded in size by some constant. Still the Euler approach looks hopeless. But there is a deep theorem of number theory that comes to the rescue: <a href=\"http://en.wikipedia.org/wiki/Quadratic_reciprocity\">quadratic reciprocity</a>. Define the <a href=\"http://en.wikipedia.org/wiki/Legendre_symbol\">Legendre symbol</a></p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' title='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' class='latex' /></p><p>
as the value <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B+a%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D+%5Cbmod+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{ a^{&#92;frac{p-1}{2}} &#92;bmod p}' title='{ a^{&#92;frac{p-1}{2}} &#92;bmod p}' class='latex' /> where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is a prime. Note it is always <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B-1%2C0%2C%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{-1,0,+1}' title='{-1,0,+1}' class='latex' />: it is only <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' /> when <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> divides <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' />. Thus our problem is to compute 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' title='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' class='latex' /></p><p>
for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> an input and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> bounded in size. </p><p>
This is in ACC. The key is we can use the deep quadratic reciprocity <a href=\"http://en.wikipedia.org/wiki/Quadratic_reciprocity\">theorem</a> which says that 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Bp%7D%7Bq%7D+%5Cright%29+%5Cleft%28+%5Cfrac%7Bq%7D%7Bp%7D+%5Cright%29+%3D+%28-1%29%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D%28-1%29%5E%7B%5Cfrac%7Bq-1%7D%7B2%7D%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{p}{q} &#92;right) &#92;left( &#92;frac{q}{p} &#92;right) = (-1)^{&#92;frac{p-1}{2}}(-1)^{&#92;frac{q-1}{2}}, ' title='&#92;displaystyle  &#92;left( &#92;frac{p}{q} &#92;right) &#92;left( &#92;frac{q}{p} &#92;right) = (-1)^{&#92;frac{p-1}{2}}(-1)^{&#92;frac{q-1}{2}}, ' class='latex' /></p><p>
where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> are primes. The theorem was conjectured by Leonhard Euler and Adrien-Marie Legendre, but finally proved by Carl Gauss. He referred to it as &#8220;the fundamental theorem&#8221; and wrote:  </p><blockquote><p>
The fundamental theorem must certainly be regarded as one of the most elegant of its type.
</p></blockquote><p>
So how do we proceed? Suppose first that the constant <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a prime. Then we know by reciprocity that 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+%5Cleft%28+%5Cfrac%7Bp%7D%7Ba%7D+%5Cright%29+%3D+%28-1%29%5E%7B%5Cfrac%7Ba-1%7D%7B2%7D%7D%28-1%29%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{p}{a} &#92;right) = (-1)^{&#92;frac{a-1}{2}}(-1)^{&#92;frac{p-1}{2}}. ' title='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{p}{a} &#92;right) = (-1)^{&#92;frac{a-1}{2}}(-1)^{&#92;frac{p-1}{2}}. ' class='latex' /></p><p>
The right-hand side is easy to compute in ACC. To determine it we need only compute <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />&#8216;s residue modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' />. Since <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is given in binary this is trivial. Thus, all reduces to the computation of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cleft%28+%5Cfrac%7Bp%7D%7Ba%7D+%5Cright%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;left( &#92;frac{p}{a} &#92;right)}' title='{&#92;left( &#92;frac{p}{a} &#92;right)}' class='latex' />. The key is that the Legendre symbol only depends on the value of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' />. Since we can do this in ACC we are done for the case when <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a prime.</p><p>
When <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is composite we use one simple fact about the Legendre symbol that follows directly from its definition. 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Bab%7D%7Bp%7D+%5Cright%29+%3D+%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+%5Cleft%28+%5Cfrac%7Bb%7D%7Bp%7D+%5Cright%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{ab}{p} &#92;right) = &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{b}{p} &#92;right). ' title='&#92;displaystyle  &#92;left( &#92;frac{ab}{p} &#92;right) = &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{b}{p} &#92;right). ' class='latex' /></p><p>
Thus we can use the case where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is prime multiple times. </p><p><p><H2> Open Problems </H2></p><p><p>
The Legendre symbol for bounded <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is thus in ACC&#8212;the complexity class, not the conference. The rationale for this discussion is two-fold. One it shows that obvious approaches to a problem may sometimes be avoided by deep mathematics. Is this possible to do the same for other problems that we care about? The permanent, for example? Another rationale is the perennially important open problem: what can ACC actually compute? It may be hard to resolve the majority function, but perhaps other functions can be shown to be in ACC. Good luck thinking about this.</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11431/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11431/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11431&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "https://rjlipton.wordpress.com/2014/03/20/the-power-of-acc/feed/") (slash:comments nil "10") (media:content ((url . "https://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/acc-basketball-hand-640_20111109111225_640_480.jpg?w=300") (medium . "image")) (media:title ((type . "html")) "ACC-basketball-hand-640_20111109111225_640_480")))) ("Happy St. Patrick’s Day 2014" "<p><font color=\"”#0066cc?\"><br /><em> A shocking story from our friendly Leprechaun </em><br /><font color=\"”#000000?\"><br /><font color=\"”#00D700\"></p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/unknown1.jpeg\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/unknown1.jpeg?w=177&h=186\" alt=\"Unknown\" width=\"177\" height=\"186\" class=\"alignright  wp-image-11397\" /></a></p><p>
Neil L. is not a computer scientist—he is a Leprechaun. He has visited me every year since I started writing GLL, always visiting on St. Patrick’s day.</p><p>
Today I want to report on what happened this year.<br /><span id=\"more-11394\"></span></p><p>
Days ago I received a email from him—a first. It said:</p><blockquote><p><FONT FACE=\"veranda, arial\"><br />
If you agree to not catch me, I will be at your place at 12:01am Monday. Neil L.<br /></FONT></p></blockquote><p>
One <a href=\"https://rjlipton.wordpress.com/2011/03/17/happy-st-patricks-day-again-again/\">year</a> I did catch him, affording me three wishes. I thought I would get some of the secrets of the universe, but he outsmarted me. </p><p>
I replied back that yes I would stop trying to catch him. I got no reply. In any event I decided I would stay up late Sunday night and see if he would appear.</p><p>
Just after midnight I smelled a pungent odor, then saw a puff of green smoke, and there was Neil L. standing before me. His pipe in his mouth was putting out that green smoke, which has a strong but surprisingly pleasant smell. My dad was a pipe smoker when I was young, quitting later in life—of course his tobacco smoke was never green.</p><p>
Neil said, “Good day to you on this fine St. Patrick’s Day. I read your reply, quite clever.” I responded that I did not think I was being clever at all. Neil smiled, took another puff, and said “Come on—saying I will not <i>try</i> to catch you—come now.” He added that I must promise <i>not</i> to catch him. I nodded back yes, and he sat down on a chair across from where I was sitting. His short legs dangled off the floor.</p><p><h2> Neil’s Answer </h2><p><p>
We sat there for a moment in silence, then as I was about to speak, he interrupted and said, “I will answer ye any one question, no tricks, straight up.” I looked back surprised and figured that I had nothing to lose so I asked <em>the</em> question, </p><blockquote><p>
Is P=NP?
</p></blockquote><p>
Neil puffed away for quite a while and then said, “I appreciate your not trying to be tricky with your question. I could answer of course no, since the letters ‘P’ and ‘NP’ are different. But I will be straightforward with you. No teasing, no games today.” I was excited, perhaps I would finally know the answer. </p><p>
He added, “I could make you swear that you cannot repeat this to anyone, but I do not need to, for none will believe ye.” I said OK, so what is the answer? Neil smiled and said:</p><blockquote><p>
“We have not yet determined the answer. That’s the truth. No tricks. I swear as a Leprechaun, may you find all my gold coins if I lie.”
</p></blockquote><p>
I thought, what does that mean? <i>Not determined yet?</i> A mathematical statement is either true or it’s false. No tricks.</p><p><h2> Neil’s Explanation </h2><p><p>
I asked what did he mean by “not yet determined?” Either P=NP or P&ne;NP, I responded. Neil smiled and said that he would explain. He said:</p><blockquote><p>
“You live in a world that is really a simulation. We control it all.”
</p></blockquote><p>
I looked at him, thinking this was another trick. Neil registered my shock and added: “Yes it must be hard for you to believe, but it is true. How else can you explain a Leprechaun that appears and disappears.” With that he puffed some more on his pipe and laughed and added, “I told you no one will believe ye.”</p><p>
Okay I said, could he explain what he meant by “not yet determined”?  He nodded yes. “The simulation mostly runs itself quite well, but there are situations where it gets stuck and the committee of seven then step in and decide what it should do.”</p><p>
I asked what is the ‘committee of seven’? He answered, “It is a group of over fifty-seven wise ones who are tasked with maintaining the simulation and fixing any unexpected problems. We cannot be expected to have foreseen all possible situations, so they are the ones who decide things.” Another puff and more green smoke, and he continued, “Don’t even ask why it’s the committee of seven, it’s too long a story.”</p><p>
I finally laughed and said that this was his best visit ever—what a silly story. I told him that I did not believe a word of it. Neil looked at me and said he understood, yet he could give me some “proof.” I said that would be great.</p><p><h2> Neil’s Proof </h2><p><p>
Neil answered, “Look I know it is hard for ye to believe, but I will give ye examples of why it is true.” The first he gave is that in ancient times there were more miracles and strange occurrences, including demons and the like. Did I not agree? I said that that was the folklore but… He interrupted and said “Ay—that was when we first began to run the simulation; we were new at it and made mistakes. We are much better today. Much.”</p><p>
I started to say yes, nothing like that happens today, but Neil waved me off and said, “we don’t make errors but we still have fun—especially with your sports.” I gave him a cold stare, but he continued: “You are a fan of sailing, if I recall. What are the odds of coming back from 8–1 down in a best-of-9 series?” He was talking about the Oracle US team’s <a href=\"http://www.dailymail.co.uk/sport/othersports/article-2432966/Sir-Ben-Ainslies-Americas-Cup-win-greatest-sporting-comeback-time.html\">comeback</a> in last September’s America’s Cup final. I rounded the simple coin-flip answer: “About 250–1 against, more since they looked badly beaten.” Neil asked whether there had been anywhere near 250 final series since the America’s Cup began, and needed no answer from me as he puffed with a grin.</p><table style=\"margin:auto;\"><tr><td><a href=\"https://rjlipton.files.wordpress.com/2014/03/ainslietshirt.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/ainslietshirt.png?w=300\" alt=\"AinslieTshirt\" width=\"300\" class=\"aligncenter  wp-image-11403\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Commercial T-shirt <a href=\"http://stpatricksdaytee.com/view/1255850/ainslie-o-ainslie-irish-for-a-day-st-patrick-day-t-shirt\">source</a><br /></FONT></td></tr></table><p>“Do you mess with bookies?” I blurted out, then felt ashamed for incivility.  But Neil leaned forward with a hand gesture and hush for my attention: “The simulation gives us a budget of improbability, and by the Rule of Improbability we have only a tiny window to deviate. But we are free to choose which improbable events happen to maximize our fun, so long as we do not also violate the Rule of Indistinguishability.” Without even pausing for my query, he went on: “That Rule is the same one you use in defining <a href=\"http://en.wikipedia.org/wiki/Zero-knowledge_proof#Variants_of_zero-knowledge\">computational zero knowledge</a>—we can prove things to you, but it would take you too much effort to prove our tricks to a third party. To keep it, we put much effort into <em>not</em> messing with things. For instance our simulator had to work hard this weekend to calculate the true odds and allowances for Warren Buffett’s $1,000,000,000 <a href=\"http://www.nytimes.com/2014/03/16/sports/ncaabasketball/mathematicians-are-hoping-their-calculations-add-up-to-the-perfect-bracket.html?_r=0\">Bracket Challenge</a>, but we’re all set for “March Madness” now.”</p><p>
I asked if they could mess with physics, and he told me about a third rule: “The Rule of Consistency is that we may not overturn any past experimental results once their confidence has gone beyond <a href=\"http://news.discovery.com/space/big-bang-theorist-told-of-gravitational-wave-discovery-video-140317.htm\">5 sigma</a>.” Of course humanity has only had the 5-sigma rule for declaring things like the Higgs Boson or primordial gravity waves to exist for a short time, so I asked what about physics in the past. Neil continued, “I know nothing about this, but there was a problem with something called beta-decay.” I jumped in and said: yes there is a surprising effect—it is one of few physical <a href=\"http://en.wikipedia.org/wiki/Weak_interaction\">effects</a> ever discovered that tells left from right. Neil added, “Yes that is it. Some fool made a mistake and caused that to happen. Once it got into the world the committee thought it was fun to have it. A kind of insider joke. Of course it meant we had to re-program the physics part of the simulator to compute using Dirac notation, long before Dirac invented it.”</p><p><h2> The Meta Question </h2><p><p>
I was still numb from the story—it could not be true? Yet. What he just said about “programming” made me realize, surely the laws of computability and complexity must apply to them too. Now I knew I had him, so I asked:</p><blockquote><p>
Surely P=NP must have an answer in your world—which your committee is subject to. What is the answer there?
</p></blockquote><p>
Neil answered calmly, “As I said, it is not yet determined.”</p><p>
I expostulated, “Not yet determined for <em>us</em> you said. But surely it is determined for <em>them</em>.”</p><p>
A little patronizingly Neil replied, “Nay me lad. By me honor, when I said it is not yet determined I spoke true. I did say there are over fifty-seven on the committee of seven. We cannot violate consistency amongst ourselves for a mathematical proposition.”</p><p>
I remembered from writing our recent simulation <a href=\"https://rjlipton.wordpress.com/2014/02/22/the-evil-genius/\">post</a> that people who live in simulations would write their own simulations that other people could live in, <em>ad-infinitum</em> all the way down. For Neil to be right it could be infinities all the way up too. Then I realized, “Ah—I see why you said ‘over fifty-seven’ before: there’s you plus your committee of 7, then each of those is subject to a committee of 7, so <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1+%2B+7+%2B+7%5E2+%3D+57%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1 + 7 + 7^2 = 57}' title='{1 + 7 + 7^2 = 57}' class='latex' /> and it goes on from there. But how can there be infinitely many leprechauns?”</p><p>
To my surprise he gave a pained start: “Ay, ye have catched me in a secret, and ye did not try to—it was me saying too much. So I must now tell ye exactly how many leprechauns we are, and it will prove to ye what I said about your mathematics.” I stood as he stood up as if to leave, and I saw he was really a little guy, only <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%2F12%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1/12}' title='{1/12}' class='latex' /> my size. Neil spoke once more as his pipe puffed mightily.</p><blockquote><p>
“We have other committees and hierarchies with other numbers, so our total is the sum of all the natural numbers <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1+%2B+2+%2B+3+%2B+4+%2B+5+%2B+6+%2B+7+%2B+%5Ccdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{1 + 2 + 3 + 4 + 5 + 6 + 7 + &#92;cdots}' title='{1 + 2 + 3 + 4 + 5 + 6 + 7 + &#92;cdots}' class='latex' />—and the smoke will tell you what that is.”
</p></blockquote><p>
With a “pouf” he vanished, but once again his smoke stayed behind, and some of it knotted itself into what first looked like a snake until I recognized it was making the Greek letter zeta. Then I saw the <a href=\"http://www.nytimes.com/2014/02/04/science/in-the-end-it-all-adds-up-to.html\">value</a>, and I realized that choosing it must have caused endless committees endless mirth in their endless—but thereby finite—hierarchy:</p><p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle+%5Czeta%28-1%29+%3D+%5Cfrac%7B-1%7D%7B12%7D%5C%2C.&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle &#92;zeta(-1) = &#92;frac{-1}{12}&#92;,.' title='&#92;displaystyle &#92;zeta(-1) = &#92;frac{-1}{12}&#92;,.' class='latex' /></p><p>
I rushed to look this up in a book, the first to hand being a physics <a href=\"http://www.amazon.com/String-Cambridge-Monographs-Mathematical-Physics/dp/0521672279/ref=sr_1_1?ie=UTF8&amp;qid=1395007493&amp;sr=8-1&amp;keywords=polchinski#reader_0521672279\">book</a> on String Theory which I had just ordered from Amazon, and sure enough <a href=\"http://haacked.com/archive/2014/01/26/fun-with-infinite-sums/\">there it was</a>:</p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/polchinskiequation.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/polchinskiequation.png?w=600\" alt=\"PolchinskiEquation\"   class=\"aligncenter size-full wp-image-11395\" /></a></p><p><h2> Open Problems </h2><p><p>
Ken and I wish you a happy and safe St. Patrick’s Day. Do you believe a word of our Leprechaun, Neil? I do not. “Not determined yet”—that is ridiculous. It is silly, yet how can I distinguish <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;dots}' title='{&#92;dots}' class='latex' /></p><p><p></font><br /><b>Update 3/18:</b><br /><font color=\"”#00D700\"><br />
We wrote and posted this before knowing about yesterday’s announced <a href=\"http://www.nytimes.com/2014/03/18/science/space/detection-of-waves-in-space-buttresses-landmark-theory-of-big-bang.html?_r=0\">discovery</a> of solid evidence for gravity waves and cosmic inflation at the Big Bang.  Where Neil L. is talking about “5-sigma” above I’ve linked this heartwarming <a href=\"http://news.discovery.com/space/big-bang-theorist-told-of-gravitational-wave-discovery-video-140317.htm\">video</a> of Andrei Linde getting the news from a collaborator on the discovering project, whose first words were, “It’s 5-sigma.”  As this St. Patty’s “big bang” is verified, let’s hope the leprechauns keep their word…</p><p>
I obtained two surprising data points for 2012 and 2013 yesterday which strengthen my own evidence <a href=\"http://www.cse.buffalo.edu/~regan/chess/fidelity/data/IPR2600reg4yr.jpg\">against</a> a different kind of “inflation” that almost all strong chess players are said to believe in.</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11394/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11394/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11394&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "https://rjlipton.wordpress.com/2014/03/17/happy-st-patricks-day-2014/" (21286 58489) obsolete 7 nil nil ((title nil "Happy St. Patrick’s Day 2014") (link nil "https://rjlipton.wordpress.com/2014/03/17/happy-st-patricks-day-2014/") (comments nil "https://rjlipton.wordpress.com/2014/03/17/happy-st-patricks-day-2014/#comments") (pubDate nil "Mon, 17 Mar 2014 12:03:05 +0000") (dc:creator nil "rjlipton") (category nil "Ideas") (category nil "News") (category nil "People") (category nil "Proofs") (category nil "Leprechaun") (category nil "P=NP") (category nil "simulation hypothesis") (category nil "St. Patrick's Day") (guid ((isPermaLink . "false")) "https://rjlipton.wordpress.com/?p=11394") (description nil "A shocking story from our friendly Leprechaun Neil L. is not a computer scientist&#8212;he is a Leprechaun. He has visited me every year since I started writing GLL, always visiting on St. Patrick&#8217;s day. Today I want to report on what happened this year. Days ago I received a email from him&#8212;a first. It said: [&#8230;]<img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11394&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> A shocking story from our friendly Leprechaun </em><br /><font color=\"”#000000?\"><br /><font color=\"”#00D700\"></p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/unknown1.jpeg\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/unknown1.jpeg?w=177&#038;h=186\" alt=\"Unknown\" width=\"177\" height=\"186\" class=\"alignright  wp-image-11397\" /></a></p><p>
Neil L. is not a computer scientist&#8212;he is a Leprechaun. He has visited me every year since I started writing GLL, always visiting on St. Patrick&#8217;s day.</p><p>
Today I want to report on what happened this year.<br /><span id=\"more-11394\"></span></p><p>
Days ago I received a email from him&#8212;a first. It said:</p><blockquote><p><FONT FACE=\"veranda, arial\"><br />
 If you agree to not catch me, I will be at your place at 12:01am Monday. Neil L.<br /></FONT></p></blockquote><p>
One <a href=\"https://rjlipton.wordpress.com/2011/03/17/happy-st-patricks-day-again-again/\">year</a> I did catch him, affording me three wishes. I thought I would get some of the secrets of the universe, but he outsmarted me. </p><p>
I replied back that yes I would stop trying to catch him. I got no reply. In any event I decided I would stay up late Sunday night and see if he would appear.</p><p>
Just after midnight I smelled a pungent odor, then saw a puff of green smoke, and there was Neil L. standing before me. His pipe in his mouth was putting out that green smoke, which has a strong but surprisingly pleasant smell. My dad was a pipe smoker when I was young, quitting later in life&#8212;of course his tobacco smoke was never green.</p><p>
Neil said, &#8220;Good day to you on this fine St. Patrick&#8217;s Day. I read your reply, quite clever.&#8221; I responded that I did not think I was being clever at all. Neil smiled, took another puff, and said &#8220;Come on&#8212;saying I will not <i>try</i> to catch you&#8212;come now.&#8221; He added that I must promise <i>not</i> to catch him. I nodded back yes, and he sat down on a chair across from where I was sitting. His short legs dangled off the floor.</p><p><h2> Neil&#8217;s Answer </h2><p><p>
We sat there for a moment in silence, then as I was about to speak, he interrupted and said, &#8220;I will answer ye any one question, no tricks, straight up.&#8221; I looked back surprised and figured that I had nothing to lose so I asked <em>the</em> question, </p><blockquote><p>
Is P=NP?
</p></blockquote><p>
Neil puffed away for quite a while and then said, &#8220;I appreciate your not trying to be tricky with your question. I could answer of course no, since the letters &#8216;P&#8217; and &#8216;NP&#8217; are different. But I will be straightforward with you. No teasing, no games today.&#8221; I was excited, perhaps I would finally know the answer. </p><p>
He added, &#8220;I could make you swear that you cannot repeat this to anyone, but I do not need to, for none will believe ye.&#8221; I said OK, so what is the answer? Neil smiled and said:</p><blockquote><p>
&#8220;We have not yet determined the answer. That&#8217;s the truth. No tricks. I swear as a Leprechaun, may you find all my gold coins if I lie.&#8221;
</p></blockquote><p>
I thought, what does that mean? <i>Not determined yet?</i> A mathematical statement is either true or it&#8217;s false. No tricks.</p><p><h2> Neil&#8217;s Explanation </h2><p><p>
I asked what did he mean by &#8220;not yet determined?&#8221; Either P=NP or P&ne;NP, I responded. Neil smiled and said that he would explain. He said:</p><blockquote><p>
&#8220;You live in a world that is really a simulation. We control it all.&#8221;
</p></blockquote><p>
I looked at him, thinking this was another trick. Neil registered my shock and added: &#8220;Yes it must be hard for you to believe, but it is true. How else can you explain a Leprechaun that appears and disappears.&#8221; With that he puffed some more on his pipe and laughed and added, &#8220;I told you no one will believe ye.&#8221;</p><p>
Okay I said, could he explain what he meant by &#8220;not yet determined&#8221;?  He nodded yes. &#8220;The simulation mostly runs itself quite well, but there are situations where it gets stuck and the committee of seven then step in and decide what it should do.&#8221;</p><p>
I asked what is the &#8216;committee of seven&#8217;? He answered, &#8220;It is a group of over fifty-seven wise ones who are tasked with maintaining the simulation and fixing any unexpected problems. We cannot be expected to have foreseen all possible situations, so they are the ones who decide things.&#8221; Another puff and more green smoke, and he continued, &#8220;Don&#8217;t even ask why it&#8217;s the committee of seven, it&#8217;s too long a story.&#8221;</p><p>
I finally laughed and said that this was his best visit ever&#8212;what a silly story. I told him that I did not believe a word of it. Neil looked at me and said he understood, yet he could give me some &#8220;proof.&#8221; I said that would be great.</p><p><h2> Neil&#8217;s Proof </h2><p><p>
Neil answered, &#8220;Look I know it is hard for ye to believe, but I will give ye examples of why it is true.&#8221; The first he gave is that in ancient times there were more miracles and strange occurrences, including demons and the like. Did I not agree? I said that that was the folklore but&#8230; He interrupted and said &#8220;Ay&#8212;that was when we first began to run the simulation; we were new at it and made mistakes. We are much better today. Much.&#8221;</p><p>
I started to say yes, nothing like that happens today, but Neil waved me off and said, &#8220;we don&#8217;t make errors but we still have fun&#8212;especially with your sports.&#8221; I gave him a cold stare, but he continued: &#8220;You are a fan of sailing, if I recall. What are the odds of coming back from 8&#8211;1 down in a best-of-9 series?&#8221; He was talking about the Oracle US team&#8217;s <a href=\"http://www.dailymail.co.uk/sport/othersports/article-2432966/Sir-Ben-Ainslies-Americas-Cup-win-greatest-sporting-comeback-time.html\">comeback</a> in last September&#8217;s America&#8217;s Cup final. I rounded the simple coin-flip answer: &#8220;About 250&#8211;1 against, more since they looked badly beaten.&#8221; Neil asked whether there had been anywhere near 250 final series since the America&#8217;s Cup began, and needed no answer from me as he puffed with a grin.</p><table style=\"margin:auto;\"><tr><td><a href=\"https://rjlipton.files.wordpress.com/2014/03/ainslietshirt.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/ainslietshirt.png?w=300\" alt=\"AinslieTshirt\" width=\"300\" class=\"aligncenter  wp-image-11403\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Commercial T-shirt <a href=\"http://stpatricksdaytee.com/view/1255850/ainslie-o-ainslie-irish-for-a-day-st-patrick-day-t-shirt\">source</a><br /></FONT></td></tr></table><p>&#8220;Do you mess with bookies?&#8221; I blurted out, then felt ashamed for incivility.  But Neil leaned forward with a hand gesture and hush for my attention: &#8220;The simulation gives us a budget of improbability, and by the Rule of Improbability we have only a tiny window to deviate. But we are free to choose which improbable events happen to maximize our fun, so long as we do not also violate the Rule of Indistinguishability.&#8221; Without even pausing for my query, he went on: &#8220;That Rule is the same one you use in defining <a href=\"http://en.wikipedia.org/wiki/Zero-knowledge_proof#Variants_of_zero-knowledge\">computational zero knowledge</a>&#8212;we can prove things to you, but it would take you too much effort to prove our tricks to a third party. To keep it, we put much effort into <em>not</em> messing with things. For instance our simulator had to work hard this weekend to calculate the true odds and allowances for Warren Buffett&#8217;s &#036;1,000,000,000 <a href=\"http://www.nytimes.com/2014/03/16/sports/ncaabasketball/mathematicians-are-hoping-their-calculations-add-up-to-the-perfect-bracket.html?_r=0\">Bracket Challenge</a>, but we&#8217;re all set for &#8220;March Madness&#8221; now.&#8221;</p><p>
I asked if they could mess with physics, and he told me about a third rule: &#8220;The Rule of Consistency is that we may not overturn any past experimental results once their confidence has gone beyond <a href=\"http://news.discovery.com/space/big-bang-theorist-told-of-gravitational-wave-discovery-video-140317.htm\">5 sigma</a>.&#8221; Of course humanity has only had the 5-sigma rule for declaring things like the Higgs Boson or primordial gravity waves to exist for a short time, so I asked what about physics in the past. Neil continued, &#8220;I know nothing about this, but there was a problem with something called beta-decay.&#8221; I jumped in and said: yes there is a surprising effect&#8212;it is one of few physical <a href=\"http://en.wikipedia.org/wiki/Weak_interaction\">effects</a> ever discovered that tells left from right. Neil added, &#8220;Yes that is it. Some fool made a mistake and caused that to happen. Once it got into the world the committee thought it was fun to have it. A kind of insider joke. Of course it meant we had to re-program the physics part of the simulator to compute using Dirac notation, long before Dirac invented it.&#8221;</p><p><h2> The Meta Question </h2><p><p>
I was still numb from the story&#8212;it could not be true? Yet. What he just said about &#8220;programming&#8221; made me realize, surely the laws of computability and complexity must apply to them too. Now I knew I had him, so I asked:</p><blockquote><p>
Surely P=NP must have an answer in your world&#8212;which your committee is subject to. What is the answer there?
</p></blockquote><p>
Neil answered calmly, &#8220;As I said, it is not yet determined.&#8221;</p><p>
I expostulated, &#8220;Not yet determined for <em>us</em> you said. But surely it is determined for <em>them</em>.&#8221;</p><p>
A little patronizingly Neil replied, &#8220;Nay me lad. By me honor, when I said it is not yet determined I spoke true. I did say there are over fifty-seven on the committee of seven. We cannot violate consistency amongst ourselves for a mathematical proposition.&#8221;</p><p>
I remembered from writing our recent simulation <a href=\"https://rjlipton.wordpress.com/2014/02/22/the-evil-genius/\">post</a> that people who live in simulations would write their own simulations that other people could live in, <em>ad-infinitum</em> all the way down. For Neil to be right it could be infinities all the way up too. Then I realized, &#8220;Ah&#8212;I see why you said &#8216;over fifty-seven&#8217; before: there&#8217;s you plus your committee of 7, then each of those is subject to a committee of 7, so <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1+%2B+7+%2B+7%5E2+%3D+57%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1 + 7 + 7^2 = 57}' title='{1 + 7 + 7^2 = 57}' class='latex' /> and it goes on from there. But how can there be infinitely many leprechauns?&#8221;</p><p>
To my surprise he gave a pained start: &#8220;Ay, ye have catched me in a secret, and ye did not try to&#8212;it was me saying too much. So I must now tell ye exactly how many leprechauns we are, and it will prove to ye what I said about your mathematics.&#8221; I stood as he stood up as if to leave, and I saw he was really a little guy, only <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%2F12%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1/12}' title='{1/12}' class='latex' /> my size. Neil spoke once more as his pipe puffed mightily.</p><blockquote><p>
&#8220;We have other committees and hierarchies with other numbers, so our total is the sum of all the natural numbers <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1+%2B+2+%2B+3+%2B+4+%2B+5+%2B+6+%2B+7+%2B+%5Ccdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{1 + 2 + 3 + 4 + 5 + 6 + 7 + &#92;cdots}' title='{1 + 2 + 3 + 4 + 5 + 6 + 7 + &#92;cdots}' class='latex' />&#8212;and the smoke will tell you what that is.&#8221;
</p></blockquote><p>
With a &#8220;pouf&#8221; he vanished, but once again his smoke stayed behind, and some of it knotted itself into what first looked like a snake until I recognized it was making the Greek letter zeta. Then I saw the <a href=\"http://www.nytimes.com/2014/02/04/science/in-the-end-it-all-adds-up-to.html\">value</a>, and I realized that choosing it must have caused endless committees endless mirth in their endless&#8212;but thereby finite&#8212;hierarchy:</p><p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle+%5Czeta%28-1%29+%3D+%5Cfrac%7B-1%7D%7B12%7D%5C%2C.&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle &#92;zeta(-1) = &#92;frac{-1}{12}&#92;,.' title='&#92;displaystyle &#92;zeta(-1) = &#92;frac{-1}{12}&#92;,.' class='latex' /></p><p>
I rushed to look this up in a book, the first to hand being a physics <a href=\"http://www.amazon.com/String-Cambridge-Monographs-Mathematical-Physics/dp/0521672279/ref=sr_1_1?ie=UTF8&amp;qid=1395007493&amp;sr=8-1&amp;keywords=polchinski#reader_0521672279\">book</a> on String Theory which I had just ordered from Amazon, and sure enough <a href=\"http://haacked.com/archive/2014/01/26/fun-with-infinite-sums/\">there it was</a>:</p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/polchinskiequation.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/polchinskiequation.png?w=600\" alt=\"PolchinskiEquation\"   class=\"aligncenter size-full wp-image-11395\" /></a></p><p><h2> Open Problems </h2><p><p>
Ken and I wish you a happy and safe St. Patrick&#8217;s Day. Do you believe a word of our Leprechaun, Neil? I do not. &#8220;Not determined yet&#8221;&#8212;that is ridiculous. It is silly, yet how can I distinguish <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;dots}' title='{&#92;dots}' class='latex' /></p><p><p></font><br /><b>Update 3/18:</b><br /><font color=\"”#00D700\"><br />
We wrote and posted this before knowing about yesterday&#8217;s announced <a href=\"http://www.nytimes.com/2014/03/18/science/space/detection-of-waves-in-space-buttresses-landmark-theory-of-big-bang.html?_r=0\">discovery</a> of solid evidence for gravity waves and cosmic inflation at the Big Bang.  Where Neil L. is talking about &#8220;5-sigma&#8221; above I&#8217;ve linked this heartwarming <a href=\"http://news.discovery.com/space/big-bang-theorist-told-of-gravitational-wave-discovery-video-140317.htm\">video</a> of Andrei Linde getting the news from a collaborator on the discovering project, whose first words were, &#8220;It&#8217;s 5-sigma.&#8221;  As this St. Patty&#8217;s &#8220;big bang&#8221; is verified, let&#8217;s hope the leprechauns keep their word&#8230;</p><p>
I obtained two surprising data points for 2012 and 2013 yesterday which strengthen my own evidence <a href=\"http://www.cse.buffalo.edu/~regan/chess/fidelity/data/IPR2600reg4yr.jpg\">against</a> a different kind of &#8220;inflation&#8221; that almost all strong chess players are said to believe in.</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11394/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11394/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11394&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "https://rjlipton.wordpress.com/2014/03/17/happy-st-patricks-day-2014/feed/") (slash:comments nil "6") (media:content ((url . "https://1.gravatar.com/avatar/afaa664a052777146630095c596117b2?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "lipton")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/unknown1.jpeg") (medium . "image")) (media:title ((type . "html")) "Unknown")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/ainslietshirt.png") (medium . "image")) (media:title ((type . "html")) "AinslieTshirt")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/polchinskiequation.png") (medium . "image")) (media:title ((type . "html")) "PolchinskiEquation")))) ("Could We Have Felt Evidence For SDP ≠ P?" "<p><font color=\"”#0066cc?\"><br /><em> Evaluating mathematical beliefs </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"https://rjlipton.files.wordpress.com/2014/03/khachiyan.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/khachiyan.png?w=600\" alt=\"Khachiyan\"   class=\"aligncenter size-full wp-image-11379\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Rutgers in memoriam <a href=\"http://www.cs.rutgers.edu/Khachiyan/\">source</a>.<br /></FONT></td></table><p>
Leonid Khachiyan in 1979 caused arguably the most sudden surprise to the West’s popular scientific understanding since the successful launch of Sputnik in 1957. His <a href=\"http://en.wikipedia.org/wiki/Ellipsoid_method\">ellipsoid method</a> gave the first algorithm for linear programming whose polynomial running time was verified. Thanks largely to Narendra Karmarkar it has been superseded by faster <a href=\"http://en.wikipedia.org/wiki/Interior-point_method\">interior-point methods</a>, while older algorithms have since been noted to run in polynomial time, but the breakthrough and inspiration came from Khachiyan. Could something like it happen again? </p><p>
Today Ken and I want to ask whether recent argument over beliefs about <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' />? can be evaluated in light of this shock.<br /><span id=\"more-11375\"></span></p><p>
Khachiyan’s “rocket” had actually left the hangar ten months before, in a January 1979 <em>Doklady Akademii Nauk</em> paper whose title translates into English as, “A polynomial algorithm for linear programming.” As <a href=\"http://lpsdp.files.wordpress.com/2011/10/ellipsoid-stories.pdf\">recounted</a> by Berkeley’s Eugene Lawler, it was sighted at a May 1979 meeting Lawler attended in Oberwohlfach, and after Peter G&aacute;cs and L&aacute;szl&oacute; Lov&aacute;sz supplied proofs missing in the paper, it was pronounced correct at a conference in Montreal. The discovery was picked up in October by <em>Science News</em>, and then by the magazine <em>Science</em>. An allusion by the latter to the NP-complete Traveling Salesman problem was moved to the headline of a Nov. 4 story in England’s Guardian newspaper, and reflected three days later in the New York Times’s front-page screamer, “A Soviet Discovery Rocks World of Mathematics.” </p><p>
Our point is not to say that linear programming being in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> was a surprise. To those who knew the reality behind the headlines, it wasn’t. As Lawler relates, the great George Dantzig had tried to set Times reporter Malcolm Browne straight on this and points related to what LP’s can and (ostensibly) cannot solve. The simplex algorithm already solved the vast majority of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%5C%21%5Ctimes%5C%21n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n&#92;!&#92;times&#92;!n}' title='{n&#92;!&#92;times&#92;!n}' class='latex' /> LP cases in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28n%5E3%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(n^3)}' title='{O(n^3)}' class='latex' /> expected time, so there was no feeling of practical intractability. Rather our point draws on something perhaps less widely known and appreciated: that Khachiyan’s ideas extend to solve a much wider class than linear programs, including so-called <a href=\"http://en.wikipedia.org/wiki/Semidefinite_programming\">semi-definite programs</a> or SDP’s, exactly or with high approximation. Thus it can be said to show that a complexity class <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSDP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP}}' title='{&#92;mathsf{SDP}}' class='latex' /> defined by “approximation-robust” reductions to these programs equals <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />.</p><p>
We raise this with regard to the main technical argument in a recent <a href=\"http://www.scottaaronson.com/blog/?p=1720\">post</a> by Scott Aaronson titled “The Scientific Case for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' title='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' class='latex' />.” We wonder whether a similar argument might have seemed on the side of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%5Cneq+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP &#92;neq P}}' title='{&#92;mathsf{SDP &#92;neq P}}' class='latex' /> in the years before Khachiyan. Even more speculatively, we wonder whether a kind of “Reverse Oracle Result” can be formulated to make any of this more concrete. But first let’s review Scott’s comments in the wider context of belief about <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> vs. <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> and about open problems that were resolved in surprising ways.</p><p><p><H2> Scott’s Comments and Our Positions </H2></p><p><p>
Essentially Scott gave a quite reasonable argument for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />, in his usual elegant and convincing style. Bill Gasarch <a href=\"http://blog.computationalcomplexity.org/2014/03/why-do-we-think-p-ne-np-inspired-by.html\">expanded</a> it. But. But mathematics is not something we argue about like: who was the best hockey player of all time, or what is the right philosophy? The simple fact is that no one has proved that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.</p><p>
Our purpose with our recent <a href=\"https://rjlipton.wordpress.com/2014/02/28/practically-pnp/\">post</a> on a 13-GB certificate of unsatisfiability was not to start a discussion about <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />, but rather to witness that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hardness is not so great a practical obstacle as we may think. The Gr&ouml;bner basis algorithm is run all the time, despite the problem it solves being complete for exponential <em>space</em>. Notably it runs in singly-exponential time on a <a href=\"http://algo.inria.fr/seminars/summary/Bardet2002.pdf\">generic set</a> of cases. If we can shift down a level, this is like having “smoothed polynomial-time behavior” of an algorithm for a <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' />-complete problem. Solving nontrivial cases of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard problems <a href=\"http://numberwarrior.wordpress.com/2009/11/01/cheating-at-the-2009-sudoku-championship/\">is</a><a href=\"http://arxiv.org/pdf/1403.1911v1.pdf\">addictive</a>.</p><p>
Almost the entire business model of <a href=\"http://en.wikipedia.org/wiki/Quintiq\">this company</a> is to solve <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard optimization problems, using non-quantum computers. As is evident from examples on their <a href=\"http://www.quintiq.com/\">website</a>, they are not just gristing easy approximation for run-of-the-mill instances. To quote <a href=\"http://www.quintiq.com/blog/what-usain-bolt-can-teach-you-about-optimization/\">one</a> of their blog entries (their emphasis):  </p><blockquote><p>
According to academic research on NP-hard problems, it’s impossible to guarantee that optimal solutions to difficult problems will be found in a reasonable time frame. However, with almost all real-life planning puzzles, you <b>can</b> get <b>excellent</b> results very quickly.
</p></blockquote><p>
Hence our initial reaction was, who cares about discussions on <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> being true or not, aside from progress on this great question? A full solution would be wonderful, but just having small steps would be great, even a possible program for a solution would be welcome. So that was what we thought we should just say, nothing more, except noting our split <a href=\"https://rjlipton.wordpress.com/2011/06/24/polls-and-predictions-and-pnp/\">answers</a> to Bill G’s reprised <a href=\"http://blog.computationalcomplexity.org/2011/06/i-am-conducing-new-poll-on-p-vs-np.html\">poll</a> three years ago.</p><p>
But. But Dick couldn’t resist adding some more sections, while Ken made some effort to counter Scott’s facts, counterfactually.</p><p><p><H2> Dick Speaks </H2></p><p><p>
I feel compelled to explain why I am open-minded on this question perhaps more than anyone else. I have several reasons that I feel are important to remind all of us: </p><ol><li>
In mathematics people have guessed wrong before on famous open questions. </p><li>
The actual theorems about why <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> is weaker than <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> are extremely hard and very weak. </p><li>
If <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%3D+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} = &#92;mathsf{NP}}' title='{&#92;mathsf{P} = &#92;mathsf{NP}}' class='latex' /> it could still be that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> is computable in time <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B+n%5E%7B2%5E%7B1000%7D%7D.+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{ n^{2^{1000}}. }' title='{ n^{2^{1000}}. }' class='latex' /></p><li>
If <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> it could still be that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> is computable in time <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%5E%7B%5Clog+n%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{&#92;log n}}' title='{n^{&#92;log n}}' class='latex' />—while the evidence cited by Scott is properly for an exponential lower bound.
</ol><p>
We’ll address the full <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> versus <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> question, and not situations where say the algorithm generating <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> instances is restricted to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r(n)}' title='{r(n)}' class='latex' /> random bits—a case in which we’ve <a href=\"https://rjlipton.wordpress.com/2013/08/23/a-world-without-randomness/\">noted</a> that in the limit one can solve them all in something like time <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28n%292%5E%7Br%28n%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(n)2^{r(n)}}' title='{&#92;mathsf{poly}(n)2^{r(n)}}' class='latex' />. </p><p><p><H2> Bad Guesses </H2></p><p><p>
I have discussed guesses in mathematics <a href=\"https://rjlipton.wordpress.com/2009/02/19/we-all-guessed-wrong/\">many</a><a href=\"https://rjlipton.wordpress.com/2009/09/27/surprises-in-mathematics-and-theory\">times</a><a href=\"https://rjlipton.wordpress.com/2010/06/19/guessing-the-truth/\">before</a><a href=\"https://rjlipton.wordpress.com/2011/04/13/even-great-mathematicians-guess-wrong/\">on</a><a href=\"https://rjlipton.wordpress.com/2011/05/04/guessing/\">this</a><a href=\"https://rjlipton.wordpress.com/2011/08/01/guessing-again/\">blog</a>. One of the biggest issues in guessing wrong is that people do not take seriously the other possibility. Researchers tend not to work on showing <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%3D+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} = &#92;mathsf{NP}}' title='{&#92;mathsf{P} = &#92;mathsf{NP}}' class='latex' /> anymore. Research support does not go there, since we all “know” that it would be a waste of time, and there are other consequences to the field. </p><p>
Here are some famous guesses that were essentially off by exponentials. For each I will list the time gap between the initial problem being raised and being solved.</p><ul><li><b>The Borsuk Conjecture [60 years].</b>  It was claimed that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d+1}' title='{d+1}' class='latex' /> was the answer to this <a href=\"http://en.wikipedia.org/wiki/Borsuk's_conjecture\">geometric conjecture</a>. Many top people worked on it for years and partial results were proved, showing <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d+1}' title='{d+1}' class='latex' /> is correct in many important cases. Then Gil Kalai and Jeff Kahn proved that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d+1}' title='{d+1}' class='latex' /> was slightly off; the correct answer is exponential—at least <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bc%5E%7B%5Csqrt%7Bd%7D%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{c^{&#92;sqrt{d}}}' title='{c^{&#92;sqrt{d}}}' class='latex' /> for some <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bc%3E1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{c&gt;1}' title='{c&gt;1}' class='latex' />, and possibly with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> in the exponent. </p><li><b>Barrington’s Theorem [26 years].</b>  I worked on lower bounds to show that bounded width computation could not compute the majority function. This was joint work with Ashok Chandra and Merrick Furst, which introduced multi-party communication. Then David Barrington came along and proved that bounded width could do all of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNC%7D%5E%7B1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NC}^{1}}' title='{&#92;mathsf{NC}^{1}}' class='latex' />. Hmmmm.</p><li><b>Law of Small Numbers [118 years].</b><br />
It was noticed by Gauss that 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cpi%28x%29+%3C+li%28x%29%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;pi(x) &lt; li(x), ' title='&#92;displaystyle  &#92;pi(x) &lt; li(x), ' class='latex' /></p><p>
for all reasonable size <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. Here <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bli%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{li(x)}' title='{li(x)}' class='latex' /> is the logarithmic intergal 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cint_%7B0%7D%5E%7Bx%7D%5Cfrac%7Bdt%7D%7B%5Cln+t%2C%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;int_{0}^{x}&#92;frac{dt}{&#92;ln t,} ' title='&#92;displaystyle  &#92;int_{0}^{x}&#92;frac{dt}{&#92;ln t,} ' class='latex' /></p><p>
which is an asympotic approximation to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpi%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(x)}' title='{&#92;pi(x)}' class='latex' />, the number of primes less than <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. It was conjectured that this would always hold and was widely believed for over a century. Then John Littlewood proved that the lead changes between <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpi%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(x)}' title='{&#92;pi(x)}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bli%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{li(x)}' title='{li(x)}' class='latex' /> infinitely often, although the first switch is upper bounded by an immense number. Richard Guy wrote a wonderful <a href=\"http://www.math.sjsu.edu/~hsu/courses/126/Law-of-Small-Numbers.pdf\">article</a> on what he called the “The Strong Law of Small Numbers”: cases when evident phenomena held for small numbers but eventually would fail. Here is a <a href=\"http://googology.wikia.com/wiki/Strong_Law_of_Small_Numbers\">table</a> with other examples:
</ul><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/lawsmall.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/lawsmall.png?w=540&h=393\" alt=\"lawsmall\" width=\"540\" height=\"393\" class=\"aligncenter wp-image-11377\" /></a></p><p>
By the way the “common clock” on <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq {NP}}' title='{&#92;mathsf{P} &#92;neq {NP}}' class='latex' /> is 43 years.</p><p><p><H2> Weak Theorems and Galactic Algorithms </H2></p><p><p>
We do have the theorem that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BDTIME%7D%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{DTIME}(n)}' title='{&#92;mathsf{DTIME}(n)}' class='latex' /> is not equal to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNTIME%7D%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NTIME}(n)}' title='{&#92;mathsf{NTIME}(n)}' class='latex' />, which we have discussed <a href=\"https://rjlipton.wordpress.com/2011/01/19/we-believe-a-lot-but-can-prove-little/\">before</a> and which is particular to the multitape Turing machine model—make the tapes planes or trees and it goes away. We cannot even deduce from it that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BDTIME%7D%28n%5E%7B2%7D%29+%5Cneq+%5Cmathsf%7BNTIME%7D%28n%5E%7B2%7D%29.+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{DTIME}(n^{2}) &#92;neq &#92;mathsf{NTIME}(n^{2}). }' title='{&#92;mathsf{DTIME}(n^{2}) &#92;neq &#92;mathsf{NTIME}(n^{2}). }' class='latex' /> That’s pretty weak. Remember that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' title='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' class='latex' /> means that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BDTIME%7D%28n%5E%7B1000%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{DTIME}(n^{1000})}' title='{&#92;mathsf{DTIME}(n^{1000})}' class='latex' /> does not contain <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNTIME%7D%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NTIME}(n)}' title='{&#92;mathsf{NTIME}(n)}' class='latex' />. And more, of course. </p><p>
The <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> versus <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /><em>statement</em> still allows cross-cutting the generally-understood <em>significance</em>. That is:</p><ul><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' /> allows <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> to have no less than an <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%5E%7B1%2C000%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{1,000}}' title='{n^{1,000}}' class='latex' />-time algorithm. </p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> still allows <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> to have an <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%5E%7B%5Clog%5E%7B%2A%7D+n%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{&#92;log^{*} n}}' title='{n^{&#92;log^{*} n}}' class='latex' />-time algorithm.
</ul><p>
To be sure, some evidence cited by Scott is really for an exponential lower bound on <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' />; we have <a href=\"https://rjlipton.wordpress.com/2011/07/04/getting-on-base-with-pnp/\">discussed</a> this before too. But what we are saying still cuts against the usual argument that “many people have worked on looking for algorithms for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' />.” Yes many have looked for algorithms, but most were interested in “real” practical algorithms. For this kind of quest there is not much difference between <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%5E%7B20%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{20}}' title='{n^{20}}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%5E%7Bn%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^{n}}' title='{2^{n}}' class='latex' />. </p><p>
Aram Harrow communicates to us a more-concrete version of this point, which also serves as a bridge to Ken’s musings. 	</p><p><p><H2> Aram’s Bridging Thoughts </H2></p><p><p>
Quoting Aram, with light editing: “One of the stronger reasons for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> is the Bayesian one—it is easier to find algorithms than lower bounds, so our failure to find a subexponential-time algorithm for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' /> speaks louder than our failure to find a super-linear lower bound for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' />. A related way of expressing this is that before <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-completeness was understood, thousands of researchers in disparate fields were unwittingly all trying to put <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' /> into <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />.</p><p>
But a counter-argument is that all of those seemingly independent researchers would always come up with algorithms that relied on a few kinds of structure—a lot is covered by just two kinds: </p><ul><li>
Convexity/absence of local minima—cases where greedy algorithms work. </p><li>
Tree structure—cases where dynamic programming, divide-and-conquer, and related ideas work.
</ul><p>
This <em>paucity of algorithmic variety</em> can be viewed in (at least) two ways:</p><ol><li>
Algorithms, like oil deposits, are a finite resource. We’ve found all the important ones, and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' /> is always going to require exponential time. </p><li>
The paucity is a sociological phenomenon, due to the fact that all researchers have learned essentially similar math backgrounds.
</ol><p>
On the latter, Terry Tao’s recent <a href=\"http://terrytao.wordpress.com/2014/02/04/finite-time-blowup-for-an-averaged-three-dimensional-navier-stokes-equation/\">breakthrough</a> on the Navier-Stokes equations is an example of how much the same ideas keep recirculating, and how much more quickly progress can be made by cross-applying ideas rather than coming up with radically new ones. Going from Erwin Schr&ouml;dinger’s equation to Peter Shor’s quantum factoring algorithm is a 60-minute lecture, but it took over 60 years (and a change in perspective coming from the computer revolution) to discover. Our lack of algorithms reveals only our lack of creativity, and it is arrogant to posit fundamental limits to mathematics just because we can’t solve a problem. Either way, the central question isn’t so much about <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> but rather a “throwback” of a question now being asked about quantum computers:</p><blockquote><p>
Where does the power of deterministic algorithms come from?
</p></blockquote><p>
A related question is the power of the <a href=\"http://math.mit.edu/~rothvoss/lecturenotes/lasserresurvey.pdf\">Lasserre hierarchy</a>. It has been shown to be effective for a large number of problems, but with a surprisingly small number of truly different techniques. I would love to know whether further work will increase or decrease the number of ways in which we know how to use it; that is, either by discovering new methods or by unifying apparently different methods.”</p><p><p><H2> Ken’s Sixth World </H2></p><p><p>
The Lasserre hierarchy builds upon LP’s and SDP’s, and this brings us back to the intro. I (still Dick) remember many people in the 1970′s trying to prove that certain linear/convex programming problems were <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard, despite all our confidence in the simplex algorithm for daily use. This makes Ken wonder:</p><blockquote><p>
What if SDP’s really were hard?
</p></blockquote><p>
Russell Impagliazzo famously categorized <a href=\"http://intractability.princeton.edu/blog/2009/05/program-for-workshop-on-impagliazzos-worlds/\">five worlds</a> that are consistent with current knowledge of complexity. Is there room to analyze any more, ones that are inconsistent now, but might have been meaningfully consistent had our field taken a different path?</p><p>
All of Impagliazzo’s worlds—including ones with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> and with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' />—have been instantiated via oracle results. All oracle results involve pretending that some ostensibly hard problem is easy. For instance, the world with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' /> involves pretending <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' />-complete problems are easy, while known ones for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> involve granting free access to a set coded so that the free access itself activates a diagonalization. What I (Ken) wonder is whether there is a sensible formal way to do “Reverse Oracle Results,” which pretend that some easy problem <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> is hard.</p><p><p>
One known way to get this effect is to narrow the definition of “easy” so that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> still has easy reductions <b>to</b><img src='https://s-ssl.wordpress.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> from other problems <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BW%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{W}' title='{W}' class='latex' />. For example, linear programming problems are <a href=\"http://en.wikipedia.org/wiki/P-complete#P-complete_problems\">P-complete</a> under logspace (and even easier) reductions, as are problems of approximation by SDP’s. But here I mean something more structural—a sense in which <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> is the <em>only</em> route to solving a whole class of problems <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Y}' title='{Y}' class='latex' />. Then we can segregate this entire class and pretend it all is hard. It might suffice to give “easy” reductions <b>from</b><img src='https://s-ssl.wordpress.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> to all these <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Y}' title='{Y}' class='latex' />. In particular, a lot of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Y}' title='{Y}' class='latex' />‘s are solved via the interior-point paradigm for (LP’s and) SDP’s. It could also employ ideas in <a href=\"http://en.wikipedia.org/wiki/Reverse_mathematics\">reverse mathematics</a>.</p><p><H2> Countering Factuals with Counterfactuals </H2></p><p><p>
Scott replied to my <a href=\"http://www.scottaaronson.com/blog/?p=1720#comment-101896\">comment</a> about a possible <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%5E%7B20%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{20}}' title='{n^{20}}' class='latex' /> algorithm for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> in his post by referring to his earlier <a href=\"http://www.scottaaronson.com/blog/?p=1720#comment-101751\">comment</a> that:</p><blockquote><p>
Since it would be inelegant and unnatural for the class <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> to be “severed into two” in this way, I’d say the much likelier possibility is simply that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.
</p></blockquote><p>
Our point is, perhaps <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> remains already manifestly “severed into two” along Khachiyan’s and the interior-point fault-lines. In particular, we wonder how the following consequences would have looked as conditional results had they been proved in the late 1970′s:</p><p><blockquote><p><b>Theorem 1</b><em> If <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%3D+P%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP = P}}' title='{&#92;mathsf{SDP = P}}' class='latex' />, then it is possible to compute in polynomial time close approximations to a function <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cvartheta%28G%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;vartheta(G)}' title='{&#92;vartheta(G)}' class='latex' /> of undirected graphs <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{G}' title='{G}' class='latex' /> that is <a href=\"http://en.wikipedia.org/wiki/Lov%C3%A1sz_number#Lov.C3.A1sz_.22sandwich_theorem.22\">sandwiched</a> between the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete clique number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Comega%28G%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;omega(G)}' title='{&#92;omega(G)}' class='latex' /> and chromatic number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cchi%28G%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;chi(G)}' title='{&#92;chi(G)}' class='latex' />, which all coincide whenever neither <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{G}' title='{G}' class='latex' /> nor its complement has an odd induced cycle.<br /></em></p></blockquote><blockquote><p><b>Theorem 2</b><em> If <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%3D+P%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP = P}}' title='{&#92;mathsf{SDP = P}}' class='latex' />, then <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BMAX+CUT%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{MAX CUT}}' title='{&#92;mathsf{MAX CUT}}' class='latex' /> is polynomial-time approximable within <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0.87856%5Cdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{0.87856&#92;dots}' title='{0.87856&#92;dots}' class='latex' />, even though it is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard to approximate within <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0.941%5Cdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{0.941&#92;dots}' title='{0.941&#92;dots}' class='latex' />. </em></p></blockquote><p>In the first theorem we have also inverted time by embracing the <a href=\"http://en.wikipedia.org/wiki/Strong_perfect_graph_theorem\">Strong Perfect Graph Theorem</a> which was proved in 2002 (final in 2006), but this conjecture was strongly felt and makes it transparent that many important families of graphs are perfect.  Hence the sweeping tractability of major <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete problems on these cases could be a surprise.  On the second theorem, why should the difference between <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0.878%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0.878}' title='{0.878}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0.9412%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0.9412}' title='{0.9412}' class='latex' /> matter to such a simple problem as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BMAX+CUT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{MAX CUT}}' title='{&#92;mathsf{MAX CUT}}' class='latex' />? </p><p>
Of course in the light of knowledge we understand how these two <a href=\"http://en.wikipedia.org/wiki/Holographic_algorithm#History\">famous</a><a href=\"http://en.wikipedia.org/wiki/Semidefinite_programming#Example_3_.28Goemans-Williamson_MAX_CUT_approximation_algorithm.29\">theorems</a> work. On the latter the Unique Games Conjecture already helps explain how <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0.87856%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0.87856&#92;dots}' title='{0.87856&#92;dots}' class='latex' /> may be special. But the present exercise is about how we reason when we don’t (yet) have the light of knowledge.</p><p><p><H2> Open Problems </H2></p><p><p>
Can we make some formal sense of a world where Khachiyan’s breakthrough never happens?</p><p><P><br /><b>Update 3/18/14:</b> The comments section has some excellent replies, including ones on the argument of the last two sections <a href=\"https://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/#comment-44250\">by</a> Scott Aaronson and <a href=\"https://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/#comment-44206\">by</a> Timothy Gowers.</p><p><P><br /><b>Update 3/17/14:</b> The Lov&aacute;sz theta-function example replaced the post’s original quoting of Leslie Valiant’s first “<a>Accidental Algorithm</a>” under a mis-memory that LP’s were involved (and SDP’s in later developments).  Snipping the irrelevant qualifier, it reads:</p><blockquote><p><b>Theorem 3</b><em> Counting assignments to a certain class of planar formulas is deterministic polynomial-time computable modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B7%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' />, or modulo any Mersenne prime, even though it is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B3%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B5%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' />. </em></p></blockquote><p>Aside from the fact that this computation belongs to a class called <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BGapL%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{GapL}}' title='{&#92;mathsf{GapL}}' class='latex' /> which is commonly believed to be a proper subclass of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />, the intent was to argue: “What do Mersenne primes have to do with matchings and convex programming really? Surely counting must be equally hard modulo any odd prime—after all there’s no exception for Mersenne in modular circuit lower bounds—so <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%5Cneq+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP &#92;neq P}}' title='{&#92;mathsf{SDP &#92;neq P}}' class='latex' /> must be an ‘invisible fence’ around this kind of ridiculousness.”  The intro and Borsuk statements were also amended.</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11375/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11375/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11375&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "https://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/" (21284 30858) obsolete 8 nil nil ((title nil "Could We Have Felt Evidence For SDP ≠ P?") (link nil "https://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/") (comments nil "https://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/#comments") (pubDate nil "Sat, 15 Mar 2014 15:58:02 +0000") (dc:creator nil "Pip") (category nil "All Posts") (category nil "History") (category nil "Ideas") (category nil "Open Problems") (category nil "P=NP") (category nil "People") (category nil "approximation") (category nil "complexity") (category nil "conjecture") (category nil "deterministic") (category nil "Khachiyan") (category nil "linear programming") (category nil "lower bounds") (category nil "Nash") (category nil "polynomial") (category nil "Scott Aaronson") (category nil "SDP's") (guid ((isPermaLink . "false")) "https://rjlipton.wordpress.com/?p=11375") (description nil "Evaluating mathematical beliefs Rutgers in memoriam source. Leonid Khachiyan in 1979 caused arguably the most sudden surprise to the West&#8217;s popular scientific understanding since the successful launch of Sputnik in 1957. His ellipsoid method gave the first algorithm for linear programming whose polynomial running time was verified. Thanks largely to Narendra Karmarkar it has been [&#8230;]<img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11375&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Evaluating mathematical beliefs </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"https://rjlipton.files.wordpress.com/2014/03/khachiyan.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/khachiyan.png?w=600\" alt=\"Khachiyan\"   class=\"aligncenter size-full wp-image-11379\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Rutgers in memoriam <a href=\"http://www.cs.rutgers.edu/Khachiyan/\">source</a>.<br /></FONT></td></table><p>
Leonid Khachiyan in 1979 caused arguably the most sudden surprise to the West&#8217;s popular scientific understanding since the successful launch of Sputnik in 1957. His <a href=\"http://en.wikipedia.org/wiki/Ellipsoid_method\">ellipsoid method</a> gave the first algorithm for linear programming whose polynomial running time was verified. Thanks largely to Narendra Karmarkar it has been superseded by faster <a href=\"http://en.wikipedia.org/wiki/Interior-point_method\">interior-point methods</a>, while older algorithms have since been noted to run in polynomial time, but the breakthrough and inspiration came from Khachiyan. Could something like it happen again? </p><p>
Today Ken and I want to ask whether recent argument over beliefs about <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' />? can be evaluated in light of this shock.<br /><span id=\"more-11375\"></span></p><p>
Khachiyan&#8217;s &#8220;rocket&#8221; had actually left the hangar ten months before, in a January 1979 <em>Doklady Akademii Nauk</em> paper whose title translates into English as, &#8220;A polynomial algorithm for linear programming.&#8221; As <a href=\"http://lpsdp.files.wordpress.com/2011/10/ellipsoid-stories.pdf\">recounted</a> by Berkeley&#8217;s Eugene Lawler, it was sighted at a May 1979 meeting Lawler attended in Oberwohlfach, and after Peter G&aacute;cs and L&aacute;szl&oacute; Lov&aacute;sz supplied proofs missing in the paper, it was pronounced correct at a conference in Montreal. The discovery was picked up in October by <em>Science News</em>, and then by the magazine <em>Science</em>. An allusion by the latter to the NP-complete Traveling Salesman problem was moved to the headline of a Nov. 4 story in England&#8217;s Guardian newspaper, and reflected three days later in the New York Times&#8217;s front-page screamer, &#8220;A Soviet Discovery Rocks World of Mathematics.&#8221; </p><p>
Our point is not to say that linear programming being in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> was a surprise. To those who knew the reality behind the headlines, it wasn&#8217;t. As Lawler relates, the great George Dantzig had tried to set Times reporter Malcolm Browne straight on this and points related to what LP&#8217;s can and (ostensibly) cannot solve. The simplex algorithm already solved the vast majority of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%5C%21%5Ctimes%5C%21n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n&#92;!&#92;times&#92;!n}' title='{n&#92;!&#92;times&#92;!n}' class='latex' /> LP cases in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BO%28n%5E3%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(n^3)}' title='{O(n^3)}' class='latex' /> expected time, so there was no feeling of practical intractability. Rather our point draws on something perhaps less widely known and appreciated: that Khachiyan&#8217;s ideas extend to solve a much wider class than linear programs, including so-called <a href=\"http://en.wikipedia.org/wiki/Semidefinite_programming\">semi-definite programs</a> or SDP&#8217;s, exactly or with high approximation. Thus it can be said to show that a complexity class <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSDP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP}}' title='{&#92;mathsf{SDP}}' class='latex' /> defined by &#8220;approximation-robust&#8221; reductions to these programs equals <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />.</p><p>
We raise this with regard to the main technical argument in a recent <a href=\"http://www.scottaaronson.com/blog/?p=1720\">post</a> by Scott Aaronson titled &#8220;The Scientific Case for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' title='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' class='latex' />.&#8221; We wonder whether a similar argument might have seemed on the side of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%5Cneq+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP &#92;neq P}}' title='{&#92;mathsf{SDP &#92;neq P}}' class='latex' /> in the years before Khachiyan. Even more speculatively, we wonder whether a kind of &#8220;Reverse Oracle Result&#8221; can be formulated to make any of this more concrete. But first let&#8217;s review Scott&#8217;s comments in the wider context of belief about <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> vs. <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> and about open problems that were resolved in surprising ways.</p><p><p><H2> Scott&#8217;s Comments and Our Positions </H2></p><p><p>
Essentially Scott gave a quite reasonable argument for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />, in his usual elegant and convincing style. Bill Gasarch <a href=\"http://blog.computationalcomplexity.org/2014/03/why-do-we-think-p-ne-np-inspired-by.html\">expanded</a> it. But. But mathematics is not something we argue about like: who was the best hockey player of all time, or what is the right philosophy? The simple fact is that no one has proved that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.</p><p>
Our purpose with our recent <a href=\"https://rjlipton.wordpress.com/2014/02/28/practically-pnp/\">post</a> on a 13-GB certificate of unsatisfiability was not to start a discussion about <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />, but rather to witness that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hardness is not so great a practical obstacle as we may think. The Gr&ouml;bner basis algorithm is run all the time, despite the problem it solves being complete for exponential <em>space</em>. Notably it runs in singly-exponential time on a <a href=\"http://algo.inria.fr/seminars/summary/Bardet2002.pdf\">generic set</a> of cases. If we can shift down a level, this is like having &#8220;smoothed polynomial-time behavior&#8221; of an algorithm for a <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' />-complete problem. Solving nontrivial cases of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard problems <a href=\"http://numberwarrior.wordpress.com/2009/11/01/cheating-at-the-2009-sudoku-championship/\">is</a><a href=\"http://arxiv.org/pdf/1403.1911v1.pdf\">addictive</a>.</p><p>
Almost the entire business model of <a href=\"http://en.wikipedia.org/wiki/Quintiq\">this company</a> is to solve <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard optimization problems, using non-quantum computers. As is evident from examples on their <a href=\"http://www.quintiq.com/\">website</a>, they are not just gristing easy approximation for run-of-the-mill instances. To quote <a href=\"http://www.quintiq.com/blog/what-usain-bolt-can-teach-you-about-optimization/\">one</a> of their blog entries (their emphasis):  </p><blockquote><p>
According to academic research on NP-hard problems, it&#8217;s impossible to guarantee that optimal solutions to difficult problems will be found in a reasonable time frame. However, with almost all real-life planning puzzles, you <b>can</b> get <b>excellent</b> results very quickly.
</p></blockquote><p>
Hence our initial reaction was, who cares about discussions on <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> being true or not, aside from progress on this great question? A full solution would be wonderful, but just having small steps would be great, even a possible program for a solution would be welcome. So that was what we thought we should just say, nothing more, except noting our split <a href=\"https://rjlipton.wordpress.com/2011/06/24/polls-and-predictions-and-pnp/\">answers</a> to Bill G&#8217;s reprised <a href=\"http://blog.computationalcomplexity.org/2011/06/i-am-conducing-new-poll-on-p-vs-np.html\">poll</a> three years ago.</p><p>
But. But Dick couldn&#8217;t resist adding some more sections, while Ken made some effort to counter Scott&#8217;s facts, counterfactually.</p><p><p><H2> Dick Speaks </H2></p><p><p>
I feel compelled to explain why I am open-minded on this question perhaps more than anyone else. I have several reasons that I feel are important to remind all of us: </p><ol><li>
In mathematics people have guessed wrong before on famous open questions. </p><li>
The actual theorems about why <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> is weaker than <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> are extremely hard and very weak. </p><li>
If <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%3D+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} = &#92;mathsf{NP}}' title='{&#92;mathsf{P} = &#92;mathsf{NP}}' class='latex' /> it could still be that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> is computable in time <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B+n%5E%7B2%5E%7B1000%7D%7D.+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{ n^{2^{1000}}. }' title='{ n^{2^{1000}}. }' class='latex' /></p><li>
If <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> it could still be that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> is computable in time <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%5E%7B%5Clog+n%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{&#92;log n}}' title='{n^{&#92;log n}}' class='latex' />&#8212;while the evidence cited by Scott is properly for an exponential lower bound.
</ol><p>
We&#8217;ll address the full <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> versus <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> question, and not situations where say the algorithm generating <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> instances is restricted to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r(n)}' title='{r(n)}' class='latex' /> random bits&#8212;a case in which we&#8217;ve <a href=\"https://rjlipton.wordpress.com/2013/08/23/a-world-without-randomness/\">noted</a> that in the limit one can solve them all in something like time <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28n%292%5E%7Br%28n%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(n)2^{r(n)}}' title='{&#92;mathsf{poly}(n)2^{r(n)}}' class='latex' />. </p><p><p><H2> Bad Guesses </H2></p><p><p>
I have discussed guesses in mathematics <a href=\"https://rjlipton.wordpress.com/2009/02/19/we-all-guessed-wrong/\">many</a><a href=\"https://rjlipton.wordpress.com/2009/09/27/surprises-in-mathematics-and-theory\">times</a><a href=\"https://rjlipton.wordpress.com/2010/06/19/guessing-the-truth/\">before</a><a href=\"https://rjlipton.wordpress.com/2011/04/13/even-great-mathematicians-guess-wrong/\">on</a><a href=\"https://rjlipton.wordpress.com/2011/05/04/guessing/\">this</a><a href=\"https://rjlipton.wordpress.com/2011/08/01/guessing-again/\">blog</a>. One of the biggest issues in guessing wrong is that people do not take seriously the other possibility. Researchers tend not to work on showing <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%3D+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} = &#92;mathsf{NP}}' title='{&#92;mathsf{P} = &#92;mathsf{NP}}' class='latex' /> anymore. Research support does not go there, since we all &#8220;know&#8221; that it would be a waste of time, and there are other consequences to the field. </p><p>
Here are some famous guesses that were essentially off by exponentials. For each I will list the time gap between the initial problem being raised and being solved.</p><ul><li><b>The Borsuk Conjecture [60 years].</b>  It was claimed that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d+1}' title='{d+1}' class='latex' /> was the answer to this <a href=\"http://en.wikipedia.org/wiki/Borsuk's_conjecture\">geometric conjecture</a>. Many top people worked on it for years and partial results were proved, showing <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d+1}' title='{d+1}' class='latex' /> is correct in many important cases. Then Gil Kalai and Jeff Kahn proved that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d+1}' title='{d+1}' class='latex' /> was slightly off; the correct answer is exponential&#8212;at least <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bc%5E%7B%5Csqrt%7Bd%7D%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{c^{&#92;sqrt{d}}}' title='{c^{&#92;sqrt{d}}}' class='latex' /> for some <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bc%3E1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{c&gt;1}' title='{c&gt;1}' class='latex' />, and possibly with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> in the exponent. </p><li><b>Barrington&#8217;s Theorem [26 years].</b>  I worked on lower bounds to show that bounded width computation could not compute the majority function. This was joint work with Ashok Chandra and Merrick Furst, which introduced multi-party communication. Then David Barrington came along and proved that bounded width could do all of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNC%7D%5E%7B1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NC}^{1}}' title='{&#92;mathsf{NC}^{1}}' class='latex' />. Hmmmm.</p><li><b>Law of Small Numbers [118 years].</b><br />
It was noticed by Gauss that 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cpi%28x%29+%3C+li%28x%29%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;pi(x) &lt; li(x), ' title='&#92;displaystyle  &#92;pi(x) &lt; li(x), ' class='latex' /></p><p>
for all reasonable size <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. Here <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bli%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{li(x)}' title='{li(x)}' class='latex' /> is the logarithmic intergal 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cint_%7B0%7D%5E%7Bx%7D%5Cfrac%7Bdt%7D%7B%5Cln+t%2C%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;int_{0}^{x}&#92;frac{dt}{&#92;ln t,} ' title='&#92;displaystyle  &#92;int_{0}^{x}&#92;frac{dt}{&#92;ln t,} ' class='latex' /></p><p>
which is an asympotic approximation to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpi%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(x)}' title='{&#92;pi(x)}' class='latex' />, the number of primes less than <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. It was conjectured that this would always hold and was widely believed for over a century. Then John Littlewood proved that the lead changes between <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpi%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(x)}' title='{&#92;pi(x)}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bli%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{li(x)}' title='{li(x)}' class='latex' /> infinitely often, although the first switch is upper bounded by an immense number. Richard Guy wrote a wonderful <a href=\"http://www.math.sjsu.edu/~hsu/courses/126/Law-of-Small-Numbers.pdf\">article</a> on what he called the &#8220;The Strong Law of Small Numbers&#8221;: cases when evident phenomena held for small numbers but eventually would fail. Here is a <a href=\"http://googology.wikia.com/wiki/Strong_Law_of_Small_Numbers\">table</a> with other examples:
</ul><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/lawsmall.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/lawsmall.png?w=540&#038;h=393\" alt=\"lawsmall\" width=\"540\" height=\"393\" class=\"aligncenter wp-image-11377\" /></a></p><p>
By the way the &#8220;common clock&#8221; on <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq {NP}}' title='{&#92;mathsf{P} &#92;neq {NP}}' class='latex' /> is 43 years.</p><p><p><H2> Weak Theorems and Galactic Algorithms </H2></p><p><p>
We do have the theorem that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BDTIME%7D%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{DTIME}(n)}' title='{&#92;mathsf{DTIME}(n)}' class='latex' /> is not equal to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNTIME%7D%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NTIME}(n)}' title='{&#92;mathsf{NTIME}(n)}' class='latex' />, which we have discussed <a href=\"https://rjlipton.wordpress.com/2011/01/19/we-believe-a-lot-but-can-prove-little/\">before</a> and which is particular to the multitape Turing machine model&#8212;make the tapes planes or trees and it goes away. We cannot even deduce from it that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BDTIME%7D%28n%5E%7B2%7D%29+%5Cneq+%5Cmathsf%7BNTIME%7D%28n%5E%7B2%7D%29.+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{DTIME}(n^{2}) &#92;neq &#92;mathsf{NTIME}(n^{2}). }' title='{&#92;mathsf{DTIME}(n^{2}) &#92;neq &#92;mathsf{NTIME}(n^{2}). }' class='latex' /> That&#8217;s pretty weak. Remember that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' title='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' class='latex' /> means that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BDTIME%7D%28n%5E%7B1000%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{DTIME}(n^{1000})}' title='{&#92;mathsf{DTIME}(n^{1000})}' class='latex' /> does not contain <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNTIME%7D%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NTIME}(n)}' title='{&#92;mathsf{NTIME}(n)}' class='latex' />. And more, of course. </p><p>
The <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> versus <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /><em>statement</em> still allows cross-cutting the generally-understood <em>significance</em>. That is:</p><ul><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' /> allows <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> to have no less than an <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%5E%7B1%2C000%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{1,000}}' title='{n^{1,000}}' class='latex' />-time algorithm. </p><li><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> still allows <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> to have an <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%5E%7B%5Clog%5E%7B%2A%7D+n%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{&#92;log^{*} n}}' title='{n^{&#92;log^{*} n}}' class='latex' />-time algorithm.
</ul><p>
To be sure, some evidence cited by Scott is really for an exponential lower bound on <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' />; we have <a href=\"https://rjlipton.wordpress.com/2011/07/04/getting-on-base-with-pnp/\">discussed</a> this before too. But what we are saying still cuts against the usual argument that &#8220;many people have worked on looking for algorithms for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' />.&#8221; Yes many have looked for algorithms, but most were interested in &#8220;real&#8221; practical algorithms. For this kind of quest there is not much difference between <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%5E%7B20%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{20}}' title='{n^{20}}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%5E%7Bn%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^{n}}' title='{2^{n}}' class='latex' />. </p><p>
Aram Harrow communicates to us a more-concrete version of this point, which also serves as a bridge to Ken&#8217;s musings. 	</p><p><p><H2> Aram&#8217;s Bridging Thoughts </H2></p><p><p>
Quoting Aram, with light editing: &#8220;One of the stronger reasons for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> is the Bayesian one&#8212;it is easier to find algorithms than lower bounds, so our failure to find a subexponential-time algorithm for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' /> speaks louder than our failure to find a super-linear lower bound for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' />. A related way of expressing this is that before <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-completeness was understood, thousands of researchers in disparate fields were unwittingly all trying to put <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' /> into <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />.</p><p>
But a counter-argument is that all of those seemingly independent researchers would always come up with algorithms that relied on a few kinds of structure&#8212;a lot is covered by just two kinds: </p><ul><li>
Convexity/absence of local minima&#8212;cases where greedy algorithms work. </p><li>
Tree structure&#8212;cases where dynamic programming, divide-and-conquer, and related ideas work.
</ul><p>
This <em>paucity of algorithmic variety</em> can be viewed in (at least) two ways:</p><ol><li>
Algorithms, like oil deposits, are a finite resource. We&#8217;ve found all the important ones, and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' /> is always going to require exponential time. </p><li>
The paucity is a sociological phenomenon, due to the fact that all researchers have learned essentially similar math backgrounds.
</ol><p>
On the latter, Terry Tao&#8217;s recent <a href=\"http://terrytao.wordpress.com/2014/02/04/finite-time-blowup-for-an-averaged-three-dimensional-navier-stokes-equation/\">breakthrough</a> on the Navier-Stokes equations is an example of how much the same ideas keep recirculating, and how much more quickly progress can be made by cross-applying ideas rather than coming up with radically new ones. Going from Erwin Schr&ouml;dinger&#8217;s equation to Peter Shor&#8217;s quantum factoring algorithm is a 60-minute lecture, but it took over 60 years (and a change in perspective coming from the computer revolution) to discover. Our lack of algorithms reveals only our lack of creativity, and it is arrogant to posit fundamental limits to mathematics just because we can&#8217;t solve a problem. Either way, the central question isn&#8217;t so much about <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> but rather a &#8220;throwback&#8221; of a question now being asked about quantum computers:</p><blockquote><p>
Where does the power of deterministic algorithms come from?
</p></blockquote><p>
A related question is the power of the <a href=\"http://math.mit.edu/~rothvoss/lecturenotes/lasserresurvey.pdf\">Lasserre hierarchy</a>. It has been shown to be effective for a large number of problems, but with a surprisingly small number of truly different techniques. I would love to know whether further work will increase or decrease the number of ways in which we know how to use it; that is, either by discovering new methods or by unifying apparently different methods.&#8221;</p><p><p><H2> Ken&#8217;s Sixth World </H2></p><p><p>
The Lasserre hierarchy builds upon LP&#8217;s and SDP&#8217;s, and this brings us back to the intro. I (still Dick) remember many people in the 1970&#8242;s trying to prove that certain linear/convex programming problems were <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard, despite all our confidence in the simplex algorithm for daily use. This makes Ken wonder:</p><blockquote><p>
What if SDP&#8217;s really were hard?
</p></blockquote><p>
Russell Impagliazzo famously categorized <a href=\"http://intractability.princeton.edu/blog/2009/05/program-for-workshop-on-impagliazzos-worlds/\">five worlds</a> that are consistent with current knowledge of complexity. Is there room to analyze any more, ones that are inconsistent now, but might have been meaningfully consistent had our field taken a different path?</p><p>
All of Impagliazzo&#8217;s worlds&#8212;including ones with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> and with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' />&#8212;have been instantiated via oracle results. All oracle results involve pretending that some ostensibly hard problem is easy. For instance, the world with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' /> involves pretending <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' />-complete problems are easy, while known ones for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> involve granting free access to a set coded so that the free access itself activates a diagonalization. What I (Ken) wonder is whether there is a sensible formal way to do &#8220;Reverse Oracle Results,&#8221; which pretend that some easy problem <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> is hard.</p><p><p>
One known way to get this effect is to narrow the definition of &#8220;easy&#8221; so that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> still has easy reductions <b>to</b><img src='https://s-ssl.wordpress.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> from other problems <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BW%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{W}' title='{W}' class='latex' />. For example, linear programming problems are <a href=\"http://en.wikipedia.org/wiki/P-complete#P-complete_problems\">P-complete</a> under logspace (and even easier) reductions, as are problems of approximation by SDP&#8217;s. But here I mean something more structural&#8212;a sense in which <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> is the <em>only</em> route to solving a whole class of problems <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Y}' title='{Y}' class='latex' />. Then we can segregate this entire class and pretend it all is hard. It might suffice to give &#8220;easy&#8221; reductions <b>from</b><img src='https://s-ssl.wordpress.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> to all these <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Y}' title='{Y}' class='latex' />. In particular, a lot of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Y}' title='{Y}' class='latex' />&#8216;s are solved via the interior-point paradigm for (LP&#8217;s and) SDP&#8217;s. It could also employ ideas in <a href=\"http://en.wikipedia.org/wiki/Reverse_mathematics\">reverse mathematics</a>.</p><p><H2> Countering Factuals with Counterfactuals </H2></p><p><p>
Scott replied to my <a href=\"http://www.scottaaronson.com/blog/?p=1720#comment-101896\">comment</a> about a possible <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%5E%7B20%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{20}}' title='{n^{20}}' class='latex' /> algorithm for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> in his post by referring to his earlier <a href=\"http://www.scottaaronson.com/blog/?p=1720#comment-101751\">comment</a> that:</p><blockquote><p>
Since it would be inelegant and unnatural for the class <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> to be &#8220;severed into two&#8221; in this way, I&#8217;d say the much likelier possibility is simply that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.
</p></blockquote><p>
Our point is, perhaps <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> remains already manifestly &#8220;severed into two&#8221; along Khachiyan&#8217;s and the interior-point fault-lines. In particular, we wonder how the following consequences would have looked as conditional results had they been proved in the late 1970&#8242;s:</p><p><blockquote><p><b>Theorem 1</b><em> If <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%3D+P%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP = P}}' title='{&#92;mathsf{SDP = P}}' class='latex' />, then it is possible to compute in polynomial time close approximations to a function <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cvartheta%28G%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;vartheta(G)}' title='{&#92;vartheta(G)}' class='latex' /> of undirected graphs <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{G}' title='{G}' class='latex' /> that is <a href=\"http://en.wikipedia.org/wiki/Lov%C3%A1sz_number#Lov.C3.A1sz_.22sandwich_theorem.22\">sandwiched</a> between the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete clique number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Comega%28G%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;omega(G)}' title='{&#92;omega(G)}' class='latex' /> and chromatic number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cchi%28G%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;chi(G)}' title='{&#92;chi(G)}' class='latex' />, which all coincide whenever neither <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{G}' title='{G}' class='latex' /> nor its complement has an odd induced cycle.<br /></em></p></blockquote><blockquote><p><b>Theorem 2</b><em> If <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%3D+P%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP = P}}' title='{&#92;mathsf{SDP = P}}' class='latex' />, then <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BMAX+CUT%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{MAX CUT}}' title='{&#92;mathsf{MAX CUT}}' class='latex' /> is polynomial-time approximable within <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0.87856%5Cdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{0.87856&#92;dots}' title='{0.87856&#92;dots}' class='latex' />, even though it is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard to approximate within <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0.941%5Cdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{0.941&#92;dots}' title='{0.941&#92;dots}' class='latex' />. </em></p></blockquote><p>In the first theorem we have also inverted time by embracing the <a href=\"http://en.wikipedia.org/wiki/Strong_perfect_graph_theorem\">Strong Perfect Graph Theorem</a> which was proved in 2002 (final in 2006), but this conjecture was strongly felt and makes it transparent that many important families of graphs are perfect.  Hence the sweeping tractability of major <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete problems on these cases could be a surprise.  On the second theorem, why should the difference between <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0.878%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0.878}' title='{0.878}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0.9412%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0.9412}' title='{0.9412}' class='latex' /> matter to such a simple problem as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BMAX+CUT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{MAX CUT}}' title='{&#92;mathsf{MAX CUT}}' class='latex' />? </p><p>
Of course in the light of knowledge we understand how these two <a href=\"http://en.wikipedia.org/wiki/Holographic_algorithm#History\">famous</a><a href=\"http://en.wikipedia.org/wiki/Semidefinite_programming#Example_3_.28Goemans-Williamson_MAX_CUT_approximation_algorithm.29\">theorems</a> work. On the latter the Unique Games Conjecture already helps explain how <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0.87856%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0.87856&#92;dots}' title='{0.87856&#92;dots}' class='latex' /> may be special. But the present exercise is about how we reason when we don&#8217;t (yet) have the light of knowledge.</p><p><p><H2> Open Problems </H2></p><p><p>
Can we make some formal sense of a world where Khachiyan&#8217;s breakthrough never happens?</p><p><P><br /><b>Update 3/18/14:</b> The comments section has some excellent replies, including ones on the argument of the last two sections <a href=\"https://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/#comment-44250\">by</a> Scott Aaronson and <a href=\"https://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/#comment-44206\">by</a> Timothy Gowers.</p><p><P><br /><b>Update 3/17/14:</b> The Lov&aacute;sz theta-function example replaced the post&#8217;s original quoting of Leslie Valiant&#8217;s first &#8220;<a>Accidental Algorithm</a>&#8221; under a mis-memory that LP&#8217;s were involved (and SDP&#8217;s in later developments).  Snipping the irrelevant qualifier, it reads:</p><blockquote><p><b>Theorem 3</b><em> Counting assignments to a certain class of planar formulas is deterministic polynomial-time computable modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B7%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' />, or modulo any Mersenne prime, even though it is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B3%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B5%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' />. </em></p></blockquote><p>Aside from the fact that this computation belongs to a class called <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BGapL%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{GapL}}' title='{&#92;mathsf{GapL}}' class='latex' /> which is commonly believed to be a proper subclass of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />, the intent was to argue: &#8220;What do Mersenne primes have to do with matchings and convex programming really? Surely counting must be equally hard modulo any odd prime&#8212;after all there&#8217;s no exception for Mersenne in modular circuit lower bounds&#8212;so <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%5Cneq+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP &#92;neq P}}' title='{&#92;mathsf{SDP &#92;neq P}}' class='latex' /> must be an &#8216;invisible fence&#8217; around this kind of ridiculousness.&#8221;  The intro and Borsuk statements were also amended.</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11375/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11375/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11375&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "https://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/feed/") (slash:comments nil "60") (media:content ((url . "https://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/khachiyan.png") (medium . "image")) (media:title ((type . "html")) "Khachiyan")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/lawsmall.png?w=600") (medium . "image")) (media:title ((type . "html")) "lawsmall")))) ("How To Carry Fame" "<p><font color=\"”#0066cc?\"><br /><em> Long proofs are not always the most important results </em><br /><font color=\"”#000000?\"></p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/unknown.jpeg\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/unknown.jpeg?w=275\" alt=\"Unknown\" width=\"275\" class=\"alignright  wp-image-11367\" /></a></p><p>
Michael Rabin is visiting Georgia Tech today and tomorrow to give a pair of distinguished lectures. Both of these will be on applications of cryptography. One is to help auctions avoid cheaters, while the other is to help elections avoid cheaters. I see a pattern. Ken sees another pattern— he is helping chess tournaments avoid cheaters. </p><p>
Today I want to comment about Rabin’s fame and what makes a result important. </p><p><span id=\"more-11361\"></span></p><p>
I have known Michael since I was a graduate student at CMU—I have talked about this before <a href=\"https://rjlipton.wordpress.com/2009/03/01/rabin-flips-a-coin/\">here</a>. In the decades since then I have heard him given many talks, all of which have been brilliant. He is one of the best presenters of technical material I have every seen, perhaps the best in the world. My “proof” of this statement is:</p><blockquote><p>
that I can still recall—in detail—most of his talks, even ones from decades ago.
</p></blockquote><p>Can you recall that talk you heard last year, or even one you heard last month? I have trouble recalling my own talks. But Michael’s talks are special, memorable, informative, clear, and fun.</p><p><h2> Great Talks </h2><p><p>
I have selected a few talks of Michael that I recall in great detail—they span about forty years. There are many others that I could have added, but these should make my point.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on <i>Theoretical impediments to artificial intelligence</i>, was the first of his talks that I had ever heard. It was at the 1974 <a href=\"http://www.informatik.uni-trier.de/~ley/db/conf/ifip/ifip74.html\">IFIP Congress</a>, which occurred in Stockholm Sweden. There was a time when the IFIP Congress was a major conference that many of us went to. I met Dick Karp there for the first time.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on the introduction of <i>randomness</i> to algorithms, which was given at Yale when I was there as a junior faculty member. It was in 1977, I recall. This talk made the case for the power of randomness—Michael showed that randomness could help in a certain geometric search problem. I talked about this in detail in the same <a href=\"https://rjlipton.wordpress.com/2009/03/01/rabin-flips-a-coin/\">post</a> with the CMU story. </p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on the <i>Karp-Rabin pattern matching algorithm</i> was given in the 1980′s at Princeton University. We have also talked about this before <a href=\"https://rjlipton.wordpress.com/2009/04/16/the-word-problem-for-free-groups/\">here</a>.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on <i>hyper-encryption</i> was given at Georgia Tech about ten years ago. This was an cool idea—I believe—on using non-complexity assumptions to build encryption methods that were very powerful. The short insight was that memory is expensive, and one could defeat an adversary that had limited memory. This yielded a protocol that needed no assumptions about factoring or the existence of one-way functions.</p><p><h2> Great Results </h2><p><p>
Why indeed is Rabin famous? He received the Turing Award with Dana Scott for their work on finite state automata (FSA). I would argue that his most exciting results were curiously his least deep results. We all know about FSA; his introduction of randomness to all parts of computing; his primality test, independent but related to Gary Miller’s work; his pattern matching algorithm with Karp; and much more. Yet, I would argue that his deepest result is probably his least known. It was, is, his brilliant work on S2S.</p><p><h2> Second Order Monadic Theory </h2><p><p>
What is S2S? </p><p>
There are many logical theories that we study, such as Peano Arithmetic (PA). PA is a first-order theory. This means that quantifiers can only range over individual elements—in PA they range over integers. Thus, in PA we can say
<p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cforall+x+%5C+%5Cexists+r+%5C+%5Cexists+s+%5C+%5Cexists+t+%28t%5Cneq+0+%5Cwedge+tx+%3D+r%5E%7B3%7D+%2B+s%5E%7B3%7D%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;forall x &#92; &#92;exists r &#92; &#92;exists s &#92; &#92;exists t (t&#92;neq 0 &#92;wedge tx = r^{3} + s^{3}). ' title='&#92;displaystyle  &#92;forall x &#92; &#92;exists r &#92; &#92;exists s &#92; &#92;exists t (t&#92;neq 0 &#92;wedge tx = r^{3} + s^{3}). ' class='latex' /></p><p> This states that all numbers have a non-zero multiple that is a sum of two cubes. This is <a href=\"http://www.emis.de/journals/JIS/VOL6/Broughan/broughan25.pdf\">true</a>—but it is not trivial. </p><p>
The reason PA is so powerful is that it allows both addition and multiplication. Given a statement like the above about cubes it is impossible, in general, to decide whether the statement is true or not. </p><p>
We obviously like decidable theories since at least in principle they allow us to tell if a statement is true or false. Of course if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' title='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' class='latex' />, then even for a decidable theory it may be hard to tell whether something is true. But still decidable is a great property for a theory to have. </p><p>
A difficulty is the tension between being an expressive theory and being decidable. PA is very expressive, most everyday theorems of mathematics can be proved in it, at least in principle. It is so expressive that even weak subtheories are undecidable. </p><p>
Enter S2S. The theory S2S is a different kind of theory from PA. While PA is a first-order theory, S2S is a second-order theory. The “S” in “S2S” stands for <i>second order</i>. It allows quantifiers to range over individual elements and also over finite or infinite sets of elements. The basic objects in S2S are finite paths in the infinite binary tree. </p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/rabintree.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/rabintree.png?w=300\" alt=\"RabinTree\" width=\"300\" class=\"aligncenter  wp-image-11363\" /></a></p><p align=\"center\"><p>
In S2S we can talk about the left and right successor to any such element: if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> is an element, then <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x0}' title='{x0}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x1}' title='{x1}' class='latex' /> are the respective successors. Since it is a second order theory we are also allowed quantifiy over sets of such elements. </p><p><h2> Decidedly More Power </h2><p><p>
The ability to quantify over sets makes S2S very <a href=\"http://research.microsoft.com/en-us/um/people/gurevich/opera/64.pdf\">powerful</a> and expressive. For example, here are two notions expressed <a href=\"http://scandinavianlogic.org/material/norway3a.pdf\">formally</a>:</p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/lex.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/lex.png?w=300\" alt=\"lex\" width=\"300\" class=\"aligncenter  wp-image-11364\" /></a></p><p align=\"center\"><p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/finite.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/finite.png?w=300\" alt=\"finite\" width=\"300\" class=\"aligncenter  wp-image-11365\" /></a></p><p>
The magic of this is that while the theory is expressive, it is not <b>too</b> expressive. Indeed the Rabin proved in 1969: </p><blockquote><p><b>Theorem 1</b><em> The monadic second order theory of the infinite binary tree is decidable. </em></p></blockquote><p><p>
When I first looked at Rabin’s paper, as a graduate student at CMU, it was not the depth of his proof, which is wonderful, but rather the array of applications that followed that excited me. One measure of the depth of a theorem is the number of open problems it solves. Rabin’s theorem can be used to prove the following other theories are decidable: </p><ul><li> The first order theory of rationals with the order <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%3C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&lt;}' title='{&lt;}' class='latex' /> relation.
<li> The first order theory of boolean algebras with ideals.
<li> Certain modal logics, such as S4.
</ul><p> These results follow by encoding the decidability question into the powerful theory S2S and invoking Rabin’s Theorem. See this for a nice summary of S2S in slide <a href=\"http://shane.st/wp-content/uploads/2013/11/RabinsTheorem.pdf\">format</a> by Shane Steinert-Threlkeld. </p><p>
The proof of Rabin’s Theorem was a tour-de-force. It requires clever definitions and some quite detailed inductive arguments. Since his original proof people have found “easier” proofs, but the original was quite deep and intricate. </p><p>
I would argue that this theorem is one of the deepest results of Rabin’s many beautiful results over his long career. It is well known to those who work in logic and automata theory, but is perhaps less known to the whole theory community. If you already knew it fine, if not, then I hope you begin to appreciate the depth of his work.</p><p><h2> Open Problems </h2><p><p>
Perhaps a lesson here for all: fame comes from results that are game-changers, which does not always mean they are deep long complex arguments. Sometimes that is the case: clearly the solution to Fermat Last Theorem and the Poincar&eacute; Conjecture are famous and deep results. Yet many times I think Rabin’s situation is more often the case: a simple to state result that yields an “ah” moment, that opens doors for others, that changes the landscape of thinking about an area, is the most important type of result. Rabin has many many of these results. I would argue that without S2S he still would be one of the greatest theorists who has ever lived.</p><p>
What do you think?</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11361/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11361/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11361&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "https://rjlipton.wordpress.com/2014/03/10/how-to-carry-fame/" (21277 53158) obsolete 9 nil nil ((title nil "How To Carry Fame") (link nil "https://rjlipton.wordpress.com/2014/03/10/how-to-carry-fame/") (comments nil "https://rjlipton.wordpress.com/2014/03/10/how-to-carry-fame/#comments") (pubDate nil "Mon, 10 Mar 2014 14:43:50 +0000") (dc:creator nil "rjlipton") (category nil "History") (category nil "People") (category nil "Proofs") (category nil "decidable") (category nil "fame") (category nil "Logic") (category nil "Rabin") (category nil "S2S") (category nil "talks") (guid ((isPermaLink . "false")) "https://rjlipton.wordpress.com/?p=11361") (description nil "Long proofs are not always the most important results Michael Rabin is visiting Georgia Tech today and tomorrow to give a pair of distinguished lectures. Both of these will be on applications of cryptography. One is to help auctions avoid cheaters, while the other is to help elections avoid cheaters. I see a pattern. Ken [&#8230;]<img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11361&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Long proofs are not always the most important results </em><br /><font color=\"”#000000?\"></p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/unknown.jpeg\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/unknown.jpeg?w=275\" alt=\"Unknown\" width=\"275\" class=\"alignright  wp-image-11367\" /></a></p><p>
Michael Rabin is visiting Georgia Tech today and tomorrow to give a pair of distinguished lectures. Both of these will be on applications of cryptography. One is to help auctions avoid cheaters, while the other is to help elections avoid cheaters. I see a pattern. Ken sees another pattern&#8212; he is helping chess tournaments avoid cheaters. </p><p>
Today I want to comment about Rabin&#8217;s fame and what makes a result important. </p><p><span id=\"more-11361\"></span></p><p>
I have known Michael since I was a graduate student at CMU&#8212;I have talked about this before <a href=\"https://rjlipton.wordpress.com/2009/03/01/rabin-flips-a-coin/\">here</a>. In the decades since then I have heard him given many talks, all of which have been brilliant. He is one of the best presenters of technical material I have every seen, perhaps the best in the world. My &#8220;proof&#8221; of this statement is:</p><blockquote><p>
 that I can still recall&#8212;in detail&#8212;most of his talks, even ones from decades ago.
</p></blockquote><p>Can you recall that talk you heard last year, or even one you heard last month? I have trouble recalling my own talks. But Michael&#8217;s talks are special, memorable, informative, clear, and fun.</p><p><h2> Great Talks </h2><p><p>
I have selected a few talks of Michael that I recall in great detail&#8212;they span about forty years. There are many others that I could have added, but these should make my point.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on <i>Theoretical impediments to artificial intelligence</i>, was the first of his talks that I had ever heard. It was at the 1974 <a href=\"http://www.informatik.uni-trier.de/~ley/db/conf/ifip/ifip74.html\">IFIP Congress</a>, which occurred in Stockholm Sweden. There was a time when the IFIP Congress was a major conference that many of us went to. I met Dick Karp there for the first time.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on the introduction of <i>randomness</i> to algorithms, which was given at Yale when I was there as a junior faculty member. It was in 1977, I recall. This talk made the case for the power of randomness&#8212;Michael showed that randomness could help in a certain geometric search problem. I talked about this in detail in the same <a href=\"https://rjlipton.wordpress.com/2009/03/01/rabin-flips-a-coin/\">post</a> with the CMU story. </p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on the <i>Karp-Rabin pattern matching algorithm</i> was given in the 1980&#8242;s at Princeton University. We have also talked about this before <a href=\"https://rjlipton.wordpress.com/2009/04/16/the-word-problem-for-free-groups/\">here</a>.</p><p><img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on <i>hyper-encryption</i> was given at Georgia Tech about ten years ago. This was an cool idea&#8212;I believe&#8212;on using non-complexity assumptions to build encryption methods that were very powerful. The short insight was that memory is expensive, and one could defeat an adversary that had limited memory. This yielded a protocol that needed no assumptions about factoring or the existence of one-way functions.</p><p><h2> Great Results </h2><p><p>
Why indeed is Rabin famous? He received the Turing Award with Dana Scott for their work on finite state automata (FSA). I would argue that his most exciting results were curiously his least deep results. We all know about FSA; his introduction of randomness to all parts of computing; his primality test, independent but related to Gary Miller&#8217;s work; his pattern matching algorithm with Karp; and much more. Yet, I would argue that his deepest result is probably his least known. It was, is, his brilliant work on S2S.</p><p><h2> Second Order Monadic Theory </h2><p><p>
What is S2S? </p><p>
There are many logical theories that we study, such as Peano Arithmetic (PA). PA is a first-order theory. This means that quantifiers can only range over individual elements&#8212;in PA they range over integers. Thus, in PA we can say
<p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cforall+x+%5C+%5Cexists+r+%5C+%5Cexists+s+%5C+%5Cexists+t+%28t%5Cneq+0+%5Cwedge+tx+%3D+r%5E%7B3%7D+%2B+s%5E%7B3%7D%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;forall x &#92; &#92;exists r &#92; &#92;exists s &#92; &#92;exists t (t&#92;neq 0 &#92;wedge tx = r^{3} + s^{3}). ' title='&#92;displaystyle  &#92;forall x &#92; &#92;exists r &#92; &#92;exists s &#92; &#92;exists t (t&#92;neq 0 &#92;wedge tx = r^{3} + s^{3}). ' class='latex' /></p><p> This states that all numbers have a non-zero multiple that is a sum of two cubes. This is <a href=\"http://www.emis.de/journals/JIS/VOL6/Broughan/broughan25.pdf\">true</a>&#8212;but it is not trivial. </p><p>
The reason PA is so powerful is that it allows both addition and multiplication. Given a statement like the above about cubes it is impossible, in general, to decide whether the statement is true or not. </p><p>
We obviously like decidable theories since at least in principle they allow us to tell if a statement is true or false. Of course if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' title='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' class='latex' />, then even for a decidable theory it may be hard to tell whether something is true. But still decidable is a great property for a theory to have. </p><p>
A difficulty is the tension between being an expressive theory and being decidable. PA is very expressive, most everyday theorems of mathematics can be proved in it, at least in principle. It is so expressive that even weak subtheories are undecidable. </p><p>
Enter S2S. The theory S2S is a different kind of theory from PA. While PA is a first-order theory, S2S is a second-order theory. The &#8220;S&#8221; in &#8220;S2S&#8221; stands for <i>second order</i>. It allows quantifiers to range over individual elements and also over finite or infinite sets of elements. The basic objects in S2S are finite paths in the infinite binary tree. </p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/rabintree.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/rabintree.png?w=300\" alt=\"RabinTree\" width=\"300\" class=\"aligncenter  wp-image-11363\" /></a></p><p align=\"center\"><p>
In S2S we can talk about the left and right successor to any such element: if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> is an element, then <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x0}' title='{x0}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x1}' title='{x1}' class='latex' /> are the respective successors. Since it is a second order theory we are also allowed quantifiy over sets of such elements. </p><p><h2> Decidedly More Power </h2><p><p>
The ability to quantify over sets makes S2S very <a href=\"http://research.microsoft.com/en-us/um/people/gurevich/opera/64.pdf\">powerful</a> and expressive. For example, here are two notions expressed <a href=\"http://scandinavianlogic.org/material/norway3a.pdf\">formally</a>:</p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/lex.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/lex.png?w=300\" alt=\"lex\" width=\"300\" class=\"aligncenter  wp-image-11364\" /></a></p><p align=\"center\"><p><p><a href=\"https://rjlipton.files.wordpress.com/2014/03/finite.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/finite.png?w=300\" alt=\"finite\" width=\"300\" class=\"aligncenter  wp-image-11365\" /></a></p><p>
The magic of this is that while the theory is expressive, it is not <b>too</b> expressive. Indeed the Rabin proved in 1969: </p><blockquote><p><b>Theorem 1</b><em> The monadic second order theory of the infinite binary tree is decidable. </em></p></blockquote><p><p>
When I first looked at Rabin&#8217;s paper, as a graduate student at CMU, it was not the depth of his proof, which is wonderful, but rather the array of applications that followed that excited me. One measure of the depth of a theorem is the number of open problems it solves. Rabin&#8217;s theorem can be used to prove the following other theories are decidable: </p><ul><li> The first order theory of rationals with the order <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%3C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&lt;}' title='{&lt;}' class='latex' /> relation.
<li> The first order theory of boolean algebras with ideals.
<li> Certain modal logics, such as S4.
</ul><p> These results follow by encoding the decidability question into the powerful theory S2S and invoking Rabin&#8217;s Theorem. See this for a nice summary of S2S in slide <a href=\"http://shane.st/wp-content/uploads/2013/11/RabinsTheorem.pdf\">format</a> by Shane Steinert-Threlkeld. </p><p>
The proof of Rabin&#8217;s Theorem was a tour-de-force. It requires clever definitions and some quite detailed inductive arguments. Since his original proof people have found &#8220;easier&#8221; proofs, but the original was quite deep and intricate. </p><p>
I would argue that this theorem is one of the deepest results of Rabin&#8217;s many beautiful results over his long career. It is well known to those who work in logic and automata theory, but is perhaps less known to the whole theory community. If you already knew it fine, if not, then I hope you begin to appreciate the depth of his work.</p><p><h2> Open Problems </h2><p><p>
Perhaps a lesson here for all: fame comes from results that are game-changers, which does not always mean they are deep long complex arguments. Sometimes that is the case: clearly the solution to Fermat Last Theorem and the Poincar&eacute; Conjecture are famous and deep results. Yet many times I think Rabin&#8217;s situation is more often the case: a simple to state result that yields an &#8220;ah&#8221; moment, that opens doors for others, that changes the landscape of thinking about an area, is the most important type of result. Rabin has many many of these results. I would argue that without S2S he still would be one of the greatest theorists who has ever lived.</p><p>
What do you think?</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11361/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11361/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11361&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "https://rjlipton.wordpress.com/2014/03/10/how-to-carry-fame/feed/") (slash:comments nil "14") (media:content ((url . "https://1.gravatar.com/avatar/afaa664a052777146630095c596117b2?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "lipton")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/unknown.jpeg") (medium . "image")) (media:title ((type . "html")) "Unknown")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/rabintree.png") (medium . "image")) (media:title ((type . "html")) "RabinTree")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/lex.png") (medium . "image")) (media:title ((type . "html")) "lex")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/finite.png") (medium . "image")) (media:title ((type . "html")) "finite")))) ("Codes Meet Numbers" "<p><font color=\"”#0066cc?\"><br /><em> Results and problems about primes that make us think of coding theory </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"https://rjlipton.files.wordpress.com/2014/03/suninsun.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/suninsun.png?w=600\" alt=\"SunInSun\"   class=\"alignright size-full wp-image-11352\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Cropped from <a href=\"http://math.nju.edu.cn/~zwsun/with%20Prof.%20K.%20Rubin%20and%20D.%20Wan.jpg\">source</a>.<br /></FONT></td></table><p>
Zhi-Wei Sun is a professor in Mathematics at Nanjing University in China. He is the Editor in Chief of the recently-founded Journal of Combinatorics and Number Theory. His <a href=\"http://math.nju.edu.cn/~zwsun/\">homepage</a> is unique in prominently featuring a long list of </p><ul><li>
…not his awards, </p><li>
…not his papers, </p><li>
…not his theorems, </p><li>
…but rather his <em>conjectures</em>.
</ul><p>Indeed we count 432 total conjectures in his list, subtracting one that he seems last year to have proved. They do not seem to be easy conjectures—this <a href=\"https://listserv.nodak.edu/cgi-bin/wa.exe?A2=NMBRTHRY;3d24b586.1206\">one</a> implies the Riemann Hypothesis in a nontrivial way. Some of them involve powers of 2, which lend them a coding-theory flavor. </p><p>Today Ken and I wish to share ideas of using coding theory to prove number-theoretic results.<span id=\"more-11351\"></span></p><p>
Coding theory owes much to Richard Hamming, who defined <b>Hamming distance</b> between codewords and created the binary Hamming codes. The <b>Hamming sphere</b> of radius <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> centered on a word <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> is the set of all words <img src='https://s-ssl.wordpress.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> of the same length whose Hamming distance is at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' />, meaning <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> differ in at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> places. Our question is how the distributions of prime numbers and other sets relate to the Hamming spheres of their binary encodings. For example, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B5+%3D+101%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{5 = 101}' title='{5 = 101}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B7+%3D+111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7 = 111}' title='{7 = 111}' class='latex' /> are twin primes of Hamming distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />, while <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B11+%3D+1011%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{11 = 1011}' title='{11 = 1011}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B13+%3D+1101%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{13 = 1101}' title='{13 = 1101}' class='latex' /> have distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />.</p><p>
Sun has his own “Super Twin Prime Conjecture” listed first on his page. Call a pair <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%28k%2Cm%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(k,m)}' title='{(k,m)}' class='latex' /> of integers “super” if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpi%28k%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(k)}' title='{&#92;pi(k)}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpi%28%5Cpi%28m%29%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(&#92;pi(m))}' title='{&#92;pi(&#92;pi(m))}' class='latex' /> are both twin primes, indeed the lower member of a twin pair, where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpi%28k%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(k)}' title='{&#92;pi(k)}' class='latex' /> denotes the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk%5E%7Bth%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k^{th}}' title='{k^{th}}' class='latex' /> prime number. The conjecture—a hybrid of Twin and Goldbach—is:</p><blockquote><p>
Every integer <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn+%5Cgeq+3%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n &#92;geq 3}' title='{n &#92;geq 3}' class='latex' /> is the sum of a super pair.
</p></blockquote><p>
He has verified this for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> up to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B10%5E9%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{10^9}' title='{10^9}' class='latex' />. What can motivate such a conjecture? Certainly one motivation is expected density—not only “should” the twin primes be infinite, but they should be dense enough to fill this kind of requirement, much as the set of primes themselves is dense enough to make Goldbach’s conjecture—that every even number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn+%5Cgeq+4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n &#92;geq 4}' title='{n &#92;geq 4}' class='latex' /> is the sum of two primes—plausible. But what other structure can supply motivation? That is what we seek.</p><p><p><H2> Numbers and Codes </H2></p><p><p>
Coding theory is all about the properties of vectors over finite sets, often over the binary field <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5C%7B0%2C1%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{0,1&#92;}}' title='{&#92;{0,1&#92;}}' class='latex' />. Of course number theory is all about the additive and multiplicative properties of integers. These seem to be vastly different, yet they are related: every number can be represented by a binary vector. </p><p>
Coding theory gives a way to express relationships that might be cumbersome with arithmetical tools such as congruences. For example, say a number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> is “top modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%5Em%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^m}' title='{2^m}' class='latex' />” if its <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' />-bit encoding begins with a <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />. Of course we can specify this as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%5E%7Bm-1%7D+%5Cleq+r+%3C+2%5Em%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^{m-1} &#92;leq r &lt; 2^m}' title='{2^{m-1} &#92;leq r &lt; 2^m}' class='latex' />, but “less-than” is a dodgy concept when working modulo some number. When <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> is odd we might want to define instead that the <em>middle</em> bit of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> in binary is a <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />. Middle bits are sometimes important in crypto, but relations involving them are not always easy to define via congruences.</p><p>
Of course a number is odd iff its last bit in binary is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />, and is congruent to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> mod <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' /> iff its second-last bit is also <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />. The distinction between congruence to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> versus <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> mod <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' /> is generally important for odd primes. How about congruence to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B5%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B7%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' /> mod <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{8}' title='{8}' class='latex' />, versus <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' />, that is being top mod <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{8}' title='{8}' class='latex' />? Of course one important distinction is which congruences are quadratic residues, but with binary-code notions we can define others.</p><p>
The number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B71+%3D+1000111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{71 = 1000111}' title='{71 = 1000111}' class='latex' /> is congruent to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B7%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' /> mod <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{8}' title='{8}' class='latex' />, and is part of a twin pair of Hamming distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B73+%3D+1001001%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{73 = 1001001}' title='{73 = 1001001}' class='latex' />. The first twin pair with greater Hamming distance actually gives distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B6%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{6}' title='{6}' class='latex' />: <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B191+%3D+10111111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{191 = 10111111}' title='{191 = 10111111}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B193+%3D+11000001%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{193 = 11000001}' title='{193 = 11000001}' class='latex' />. Next comes <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2687+%3D+10101111111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2687 = 10101111111}' title='{2687 = 10101111111}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2689+%3D+10110000001%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2689 = 10110000001}' title='{2689 = 10110000001}' class='latex' /> for distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B7%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' />. Is the Hamming distance of twin primes unbounded? </p><p>
Of course we don’t even know if there are infinitely many twin primes. This is really asking whether twin primes can flank a multiple of an arbitrarily large power of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. Quick web searches have not found this question, while our point is that our motive came from the coding-theory angle.</p><p><p><H2> Polignacs and Twins and Spheres </H2></p><p><p>
In 1848, Camille Marie de Polignac somewhat lazily conjectured that every odd number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> is the sum of a prime number and a power of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. We speculate that he may have intended to exclude false cases such as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn+%3D+127%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n = 127}' title='{n = 127}' class='latex' /> where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> itself is prime, but even so he missed <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn+%3D+905%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n = 905}' title='{n = 905}' class='latex' /> amid his reported (but to us incredible) claim to have verified this up to about 3 million. Perhaps it was spoken with the bluster of a Confederate major-general during the Civil War, which is surprisingly what this French nobleman <a href=\"http://en.wikipedia.org/wiki/Camille_Armand_Jules_Marie,_Prince_de_Polignac\">became</a>. </p><p>
His older brother, Alphonse de Polignac, made a somewhat less lazy conjecture: that every even number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k}' title='{k}' class='latex' /> is the difference between infinitely many pairs of consecutive primes. Of course with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk%3D2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k=2}' title='{k=2}' class='latex' /> this subsumes the Twin Primes Conjecture, and indeed the latter is sometimes called de Polignac’s Conjecture after him. </p><p>
Should Camille have teamed up with his brother to make his conjecture? And would they have done better if they had been twins—maybe prove something about their conjecture? Well we have an example to go by: Zhi-Wei Sun has a twin brother, Zhi-Hong Sun at Huaiyin Normal University, and they teamed up in 1992 to prove something about the following conjecture by Donald Wall:</p><blockquote><p>
There are infinitely many primes <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> such that either <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp+%5Cequiv+%5Cpm+1%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p &#92;equiv &#92;pm 1}' title='{p &#92;equiv &#92;pm 1}' class='latex' /> modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B5%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%5E2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p^2}' title='{p^2}' class='latex' /> divides the Fibonacci number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BF_%7Bp+-+1%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_{p - 1}}' title='{F_{p - 1}}' class='latex' />, or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp+%5Cequiv+%5Cpm+2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p &#92;equiv &#92;pm 2}' title='{p &#92;equiv &#92;pm 2}' class='latex' /> modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B5%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%5E2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p^2}' title='{p^2}' class='latex' /> divides the Fibonacci number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BF_%7Bp+%2B+1%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_{p + 1}}' title='{F_{p + 1}}' class='latex' />, where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BF_n%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_n}' title='{F_n}' class='latex' /> is indexed with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BF_0+%3D+0%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_0 = 0}' title='{F_0 = 0}' class='latex' />, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BF_1+%3D+1%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_1 = 1}' title='{F_1 = 1}' class='latex' />.
</p></blockquote><p>
What Sun and Sun <a href=\"http://matwbn.icm.edu.pl/ksiazki/aa/aa60/aa6046.pdf\">proved</a> is that any minimal counterexample to Fermat’s Last Theorem would need to involve such a prime—of course from the proof of FLT two years later, we know there are none. They also gave a sufficient condition for a “Wall-Sun-Sun prime” to exist, though none has yet been found.</p><p>
Back to the Polignacs, we can try to capture ideas of both their conjectures with a case of what is actually a pretty general kind of question—a kind one can pose about other sets of numbers besides the primes:</p><blockquote><p>
What is the minimum <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> such that every odd number is within the distance-<img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> Hamming sphere of a prime number? Is it finite?
</p></blockquote><p>
To get the even numbers too we can add <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' />. Of course this is still a strong “every” kind of conjecture, and those are hard to prove. One can first try to attack “infinitely-many” versions. Obviously there are infinitely many odd numbers <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> that are <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpm+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pm 2}' title='{&#92;pm 2}' class='latex' /> from a prime <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />, but if we insist that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> too be prime we have our old friend the Twin Prime Conjecture again. So here is the corresponding Hamming-like question:</p><blockquote><p>
What is the minimum <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> such that there are infinitely many prime numbers <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> that are within Hamming distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> of some other prime number?
</p></blockquote><p>
Using Hamming’s own ideas in coding theory, we can prove the minimum is at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%3D2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d=2}' title='{d=2}' class='latex' />. Note that this is stronger than saying there are infinitely many pairs of primes <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%28p%2Cq%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(p,q)}' title='{(p,q)}' class='latex' /> such that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq+-+p+%3D+2%5Ek+%5Cpm+2%5El%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q - p = 2^k &#92;pm 2^l}' title='{q - p = 2^k &#92;pm 2^l}' class='latex' />, because we are also restricting what <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> have in the bit positions <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k}' title='{k}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bl%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{l}' title='{l}' class='latex' /> from the end. </p><p><p><H2> The Proof </H2></p><p><p>
The theorem is not that amazing, or unexpected, but we think how we prove it may be of interest. The proof is via Hamming’s famous <a href=\"http://en.wikipedia.org/wiki/Hamming_bound\">theorem</a> on the density of codes. Let <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BA_%7Bq%7D%28n%2Cd%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A_{q}(n,d)}' title='{A_{q}(n,d)}' class='latex' /> be size of the largest set <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> vectors over an alphabet of size <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> so that any two distinct code words in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> are at least Hamming distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> apart. </p><blockquote><p><b>Theorem 1</b><em> For all <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' />: 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++A_%7Bq%7D%28n%2Cd%29+%5Cle+%5Cfrac%7Bq%5E%7Bn%7D%7D%7B%5Csum_%7Bk%3D0%7D%5E%7Bt%7D+%5Cbinom%7Bn%7D%7Bk%7D%28q-1%29%5E%7Bk%7D%7D%2C+&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  A_{q}(n,d) &#92;le &#92;frac{q^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}(q-1)^{k}}, ' title='&#92;displaystyle  A_{q}(n,d) &#92;le &#92;frac{q^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}(q-1)^{k}}, ' class='latex' /></p><p>
where 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++t+%3D+%5Cleft%5Clfloor+%5Cfrac%7Bd-1%7D%7B2%7D+%5Cright%5Crfloor.+&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  t = &#92;left&#92;lfloor &#92;frac{d-1}{2} &#92;right&#92;rfloor. ' title='&#92;displaystyle  t = &#92;left&#92;lfloor &#92;frac{d-1}{2} &#92;right&#92;rfloor. ' class='latex' /></p><p></em></p></blockquote><p><p>
Now to state formally what we are proving, it is:</p><blockquote><p><b>Theorem 2</b><em> For every sufficiently large <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />, there are primes <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%2Cq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p,q}' title='{p,q}' class='latex' /> with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%5En+%5Cleq+p%2Cq+%3C+2%5E%7Bn%2B1%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2^n &#92;leq p,q &lt; 2^{n+1}}' title='{2^n &#92;leq p,q &lt; 2^{n+1}}' class='latex' /> such that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> have Hamming distance at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. </em></p></blockquote><p><p><em>Proof:</em>  Consider the set <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> of all primes in the interval <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5B2%5E%7Bn%7D%2C+%5Cdots%2C+2%5E%7Bn%2B1%7D-1%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{[2^{n}, &#92;dots, 2^{n+1}-1]}' title='{[2^{n}, &#92;dots, 2^{n+1}-1]}' class='latex' />. These of course can be represented by <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-bit vectors, eliding the leading <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> in the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^n}' title='{2^n}' class='latex' /> place. Think of them as a code. We will show that its minimum distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> is at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />, from which the theorem follows. </p><p>
Suppose that the distance is larger, that is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd+%5Cge+3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d &#92;ge 3}' title='{d &#92;ge 3}' class='latex' />. The apply Hamming’s Theorem for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BA_%7B2%7D%28n%2Cd%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A_{2}(n,d)}' title='{A_{2}(n,d)}' class='latex' /> noting that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bt+%5Cge+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{t &#92;ge 1}' title='{t &#92;ge 1}' class='latex' />. This yields </p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%7CS%7C+%5Cle+%5Cfrac%7B2%5E%7Bn%7D%7D%7B%5Csum_%7Bk%3D0%7D%5E%7Bt%7D+%5Cbinom%7Bn%7D%7Bk%7D%7D+%5Cle+%5Cfrac%7B2%5E%7Bn%7D%7D%7B1%2Bn%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  |S| &#92;le &#92;frac{2^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}} &#92;le &#92;frac{2^{n}}{1+n}. ' title='&#92;displaystyle  |S| &#92;le &#92;frac{2^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}} &#92;le &#92;frac{2^{n}}{1+n}. ' class='latex' /></p><p>
The <a href=\"http://en.wikipedia.org/wiki/Prime_number_theorem\">Prime Number Theorem</a> states that the density of primes up to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' /> converges to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN%2F%5Cln+N%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N/&#92;ln N}' title='{N/&#92;ln N}' class='latex' /> as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN+%5Clongrightarrow+%5Cinfty%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N &#92;longrightarrow &#92;infty}' title='{N &#92;longrightarrow &#92;infty}' class='latex' />, where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cln%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;ln}' title='{&#92;ln}' class='latex' /> is natural log. By an easy manipulation of estimates it follows that for any <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cepsilon+%3E+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;epsilon &gt; 0}' title='{&#92;epsilon &gt; 0}' class='latex' /> and all large enough <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' />, the primes have density at least <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%281-%5Cepsilon%29%5Cfrac%7B1%7D%7B%5Cln+N%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(1-&#92;epsilon)&#92;frac{1}{&#92;ln N}}' title='{(1-&#92;epsilon)&#92;frac{1}{&#92;ln N}}' class='latex' /> in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5BN%2F2%2C%5Cdots%2CN-1%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{[N/2,&#92;dots,N-1]}' title='{[N/2,&#92;dots,N-1]}' class='latex' />. It follows with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN+%3D+2%5E%7Bn%2B1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N = 2^{n+1}}' title='{N = 2^{n+1}}' class='latex' /> that </p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%7CS%7C+%5Cgeq+%281-%5Cepsilon%29%5Cfrac%7B2%5E%7Bn%7D%7D%7B%28n%2B1%29%5Cln+2%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  |S| &#92;geq (1-&#92;epsilon)&#92;frac{2^{n}}{(n+1)&#92;ln 2}. ' title='&#92;displaystyle  |S| &#92;geq (1-&#92;epsilon)&#92;frac{2^{n}}{(n+1)&#92;ln 2}. ' class='latex' /></p><p>
Since <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%2F%5Cln+2+%3D+%5Clog_2+e+%3D+1.44%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1/&#92;ln 2 = &#92;log_2 e = 1.44&#92;dots}' title='{1/&#92;ln 2 = &#92;log_2 e = 1.44&#92;dots}' class='latex' />, this implies with the above that </p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cfrac%7B1.44%281-%5Cepsilon%292%5En%7D%7Bn%2B1%7D+%5Cle+%5Cfrac%7B2%5En%7D%7Bn%2B1%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;frac{1.44(1-&#92;epsilon)2^n}{n+1} &#92;le &#92;frac{2^n}{n+1}, ' title='&#92;displaystyle  &#92;frac{1.44(1-&#92;epsilon)2^n}{n+1} &#92;le &#92;frac{2^n}{n+1}, ' class='latex' /></p><p>
but this is clearly false for large enough <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> and small enough <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;epsilon}' title='{&#92;epsilon}' class='latex' />. This contradiction proves <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd+%5Cleq+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d &#92;leq 2}' title='{d &#92;leq 2}' class='latex' /> and hence the theorem. <img src='https://s-ssl.wordpress.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;Box' title='&#92;Box' class='latex' /></p><p>
As the proof shows, there is actually a fair bit of “slack” in the counting. Hence the theorem can be extended to add conditions on the primes: we can further restrict the sizes of the primes, their residues modulo small numbers, and other properties. Indeed the counting makes this all close to working with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%3D1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d=1}' title='{d=1}' class='latex' />. That takes us back within the sphere of Camille de Polignac’s question as well.</p><p><p><H2> An Obstinate Question? </H2></p><p>
For <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%3D1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d=1}' title='{d=1}' class='latex' /> the question again comes in “every” (with the qualifier “large enough”) and “infinitely many” flavors:</p><blockquote><ol><li>
Is it true that for every large enough prime <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />, there is a prime <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> such that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> differ in one bit, or at least differ by a power of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />? (no)</p><li>
Are there infinitely many primes <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> such that for some other prime <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' />, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> differ in one bit, or at least <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq+-+p%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q - p}' title='{q - p}' class='latex' /> is a power of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />? (open)
</ol></blockquote><p>
Note that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq+%3E+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &gt; p}' title='{q &gt; p}' class='latex' /> is allowed. Without that condition we’d have already the counterexample <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp+%3D+127%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p = 127}' title='{p = 127}' class='latex' /> to Camille’s conjecture. Incidentally, counterexamples to Camille are called <em>obstinate numbers</em>, and there are <a href=\"http://sprott.physics.wisc.edu/pickover/obstinate.html\">various</a><a href=\"http://danieldockery.com/b/2002/obstinate-numbers/\">pages</a> devoted to enumerating them. A case where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq+%3E+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &gt; p}' title='{q &gt; p}' class='latex' /> is important is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp+%3D+113%2C%5C%21921%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p = 113,&#92;!921}' title='{p = 113,&#92;!921}' class='latex' />: <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq+%3D+p+%2B+2%5E%7B141%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q = p + 2^{141}}' title='{q = p + 2^{141}}' class='latex' /> is prime. Of course whenever <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq+%5Cgeq+2p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &#92;geq 2p}' title='{q &#92;geq 2p}' class='latex' /> such a pair also has Hamming distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />, using leading <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' />‘s to pad <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> to the same length as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' />.</p><p>
In 1964, Fred Cohen and John Selfridge noted that allowing <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq+%3E+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &gt; p}' title='{q &gt; p}' class='latex' /> made Camille’s idea good for every odd number up to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B262%2C144%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{262,144}' title='{262,144}' class='latex' />. However, they <a href=\"http://www.ams.org/journals/mcom/1975-29-129/S0025-5718-1975-0376583-0/S0025-5718-1975-0376583-0.pdf\">proved</a> that the prime 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle+p+%3D+47%2C%5C%21867%2C%5C%21742%2C%5C%21232%2C%5C%21066%2C%5C%21880%2C%5C%21047%2C%5C%21611%2C%5C%21079&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle p = 47,&#92;!867,&#92;!742,&#92;!232,&#92;!066,&#92;!880,&#92;!047,&#92;!611,&#92;!079' title='&#92;displaystyle p = 47,&#92;!867,&#92;!742,&#92;!232,&#92;!066,&#92;!880,&#92;!047,&#92;!611,&#92;!079' class='latex' /></p><p>
cannot be written as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp+%3D+q+%5Cpm+2%5Ek%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p = q &#92;pm 2^k}' title='{p = q &#92;pm 2^k}' class='latex' /> with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> prime. Moreover, they gave an infinite arithmetic progression of numbers <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba+%2B+bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a + bn}' title='{a + bn}' class='latex' /> with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%2Cb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a,b}' title='{a,b}' class='latex' /> coprime that cannot be written as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpm+2%5Ek+%5Cpm+q%5El%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pm 2^k &#92;pm q^l}' title='{&#92;pm 2^k &#92;pm q^l}' class='latex' /> with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> prime. Since every such progression contains infinitely many primes, this finally lays question 1 to rest even with the “large enough” modifier. Zhi-wei Sun himself made good on something stated in their abstract but not proved in their paper, in a 2000 <a href=\"http://www.ams.org/journals/mcom/1975-29-129/S0025-5718-1975-0376583-0/S0025-5718-1975-0376583-0.pdf\">paper</a> giving an infinite arithmetic progression of numbers that cannot be written as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%5Ek+%5Cpm+q%5El%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p^k &#92;pm q^l}' title='{p^k &#92;pm q^l}' class='latex' /> with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%2Cq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p,q}' title='{p,q}' class='latex' /> prime and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk%2Cl+%3E+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k,l &gt; 0}' title='{k,l &gt; 0}' class='latex' />. </p><p>
All this still, however, leaves the second question open. We would like to prove it, indeed find moderately dense sets of such pairs.</p><p><p><H2> Open Problems </H2></p><p><p>
Are there infinitely many pairs of primes that differ in just one bit?</p><p>
We note that there are people who have thought about connections between coding theory and number theory. For example, Toyokazu Hiramatsu and G&uuml;nter K&ouml;hler have a whole <a href=\"http://www.amazon.com/Coding-Theory-Number-Mathematics-Applications/dp/1402012039\">monograph</a> titled <i>Coding Theory and Number Theory</i> on this topic. But the idea there is to apply number theory to shed light on the structure of codes. Elliptic curves, for instance, can be used to construct certain interesting codes. We are interested in the impact of coding theory on number theory, such as the distribution of important sets like the primes, which in turn may have applications in computing theory.</p><p>
[$2^k + 2^l$ changed to $2^k \\pm 2^l$, fixed ceiling to floor in Hamming bound]</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11351/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11351/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&blog=6472207&post=11351&subd=rjlipton&ref=&feed=1\" width=\"1\" height=\"1\" />" "https://rjlipton.wordpress.com/2014/03/09/codes-meet-numbers/" (21275 63398) obsolete 10 nil nil ((title nil "Codes Meet Numbers") (link nil "https://rjlipton.wordpress.com/2014/03/09/codes-meet-numbers/") (comments nil "https://rjlipton.wordpress.com/2014/03/09/codes-meet-numbers/#comments") (pubDate nil "Sun, 09 Mar 2014 05:09:58 +0000") (dc:creator nil "Pip") (category nil "All Posts") (category nil "History") (category nil "Ideas") (category nil "Oldies") (category nil "Open Problems") (category nil "People") (category nil "coding theory") (category nil "conjecture") (category nil "Fermat") (category nil "Hamming") (category nil "obstinate numbers") (category nil "Polignac conjecture") (category nil "primes") (category nil "twin prime conjecture") (category nil "Zhi-Wei Sun") (guid ((isPermaLink . "false")) "https://rjlipton.wordpress.com/?p=11351") (description nil "Results and problems about primes that make us think of coding theory Cropped from source. Zhi-Wei Sun is a professor in Mathematics at Nanjing University in China. He is the Editor in Chief of the recently-founded Journal of Combinatorics and Number Theory. His homepage is unique in prominently featuring a long list of &#8230;not his [&#8230;]<img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11351&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Results and problems about primes that make us think of coding theory </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"https://rjlipton.files.wordpress.com/2014/03/suninsun.png\"><img src=\"https://rjlipton.files.wordpress.com/2014/03/suninsun.png?w=600\" alt=\"SunInSun\"   class=\"alignright size-full wp-image-11352\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Cropped from <a href=\"http://math.nju.edu.cn/~zwsun/with%20Prof.%20K.%20Rubin%20and%20D.%20Wan.jpg\">source</a>.<br /></FONT></td></table><p>
Zhi-Wei Sun is a professor in Mathematics at Nanjing University in China. He is the Editor in Chief of the recently-founded Journal of Combinatorics and Number Theory. His <a href=\"http://math.nju.edu.cn/~zwsun/\">homepage</a> is unique in prominently featuring a long list of </p><ul><li>
&#8230;not his awards, </p><li>
&#8230;not his papers, </p><li>
&#8230;not his theorems, </p><li>
&#8230;but rather his <em>conjectures</em>.
</ul><p>Indeed we count 432 total conjectures in his list, subtracting one that he seems last year to have proved. They do not seem to be easy conjectures&#8212;this <a href=\"https://listserv.nodak.edu/cgi-bin/wa.exe?A2=NMBRTHRY;3d24b586.1206\">one</a> implies the Riemann Hypothesis in a nontrivial way. Some of them involve powers of 2, which lend them a coding-theory flavor. </p><p>Today Ken and I wish to share ideas of using coding theory to prove number-theoretic results.<span id=\"more-11351\"></span></p><p>
Coding theory owes much to Richard Hamming, who defined <b>Hamming distance</b> between codewords and created the binary Hamming codes. The <b>Hamming sphere</b> of radius <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> centered on a word <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> is the set of all words <img src='https://s-ssl.wordpress.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> of the same length whose Hamming distance is at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' />, meaning <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> differ in at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> places. Our question is how the distributions of prime numbers and other sets relate to the Hamming spheres of their binary encodings. For example, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B5+%3D+101%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{5 = 101}' title='{5 = 101}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B7+%3D+111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7 = 111}' title='{7 = 111}' class='latex' /> are twin primes of Hamming distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />, while <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B11+%3D+1011%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{11 = 1011}' title='{11 = 1011}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B13+%3D+1101%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{13 = 1101}' title='{13 = 1101}' class='latex' /> have distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />.</p><p>
Sun has his own &#8220;Super Twin Prime Conjecture&#8221; listed first on his page. Call a pair <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%28k%2Cm%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(k,m)}' title='{(k,m)}' class='latex' /> of integers &#8220;super&#8221; if <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpi%28k%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(k)}' title='{&#92;pi(k)}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpi%28%5Cpi%28m%29%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(&#92;pi(m))}' title='{&#92;pi(&#92;pi(m))}' class='latex' /> are both twin primes, indeed the lower member of a twin pair, where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpi%28k%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(k)}' title='{&#92;pi(k)}' class='latex' /> denotes the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk%5E%7Bth%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k^{th}}' title='{k^{th}}' class='latex' /> prime number. The conjecture&#8212;a hybrid of Twin and Goldbach&#8212;is:</p><blockquote><p>
Every integer <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn+%5Cgeq+3%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n &#92;geq 3}' title='{n &#92;geq 3}' class='latex' /> is the sum of a super pair.
</p></blockquote><p>
He has verified this for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> up to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B10%5E9%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{10^9}' title='{10^9}' class='latex' />. What can motivate such a conjecture? Certainly one motivation is expected density&#8212;not only &#8220;should&#8221; the twin primes be infinite, but they should be dense enough to fill this kind of requirement, much as the set of primes themselves is dense enough to make Goldbach&#8217;s conjecture&#8212;that every even number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn+%5Cgeq+4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n &#92;geq 4}' title='{n &#92;geq 4}' class='latex' /> is the sum of two primes&#8212;plausible. But what other structure can supply motivation? That is what we seek.</p><p><p><H2> Numbers and Codes </H2></p><p><p>
Coding theory is all about the properties of vectors over finite sets, often over the binary field <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5C%7B0%2C1%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{0,1&#92;}}' title='{&#92;{0,1&#92;}}' class='latex' />. Of course number theory is all about the additive and multiplicative properties of integers. These seem to be vastly different, yet they are related: every number can be represented by a binary vector. </p><p>
Coding theory gives a way to express relationships that might be cumbersome with arithmetical tools such as congruences. For example, say a number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> is &#8220;top modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%5Em%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^m}' title='{2^m}' class='latex' />&#8221; if its <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' />-bit encoding begins with a <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />. Of course we can specify this as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%5E%7Bm-1%7D+%5Cleq+r+%3C+2%5Em%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^{m-1} &#92;leq r &lt; 2^m}' title='{2^{m-1} &#92;leq r &lt; 2^m}' class='latex' />, but &#8220;less-than&#8221; is a dodgy concept when working modulo some number. When <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> is odd we might want to define instead that the <em>middle</em> bit of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> in binary is a <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />. Middle bits are sometimes important in crypto, but relations involving them are not always easy to define via congruences.</p><p>
Of course a number is odd iff its last bit in binary is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />, and is congruent to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> mod <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' /> iff its second-last bit is also <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />. The distinction between congruence to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> versus <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> mod <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' /> is generally important for odd primes. How about congruence to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B5%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B7%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' /> mod <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{8}' title='{8}' class='latex' />, versus <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' />, that is being top mod <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{8}' title='{8}' class='latex' />? Of course one important distinction is which congruences are quadratic residues, but with binary-code notions we can define others.</p><p>
The number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B71+%3D+1000111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{71 = 1000111}' title='{71 = 1000111}' class='latex' /> is congruent to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B7%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' /> mod <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{8}' title='{8}' class='latex' />, and is part of a twin pair of Hamming distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B73+%3D+1001001%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{73 = 1001001}' title='{73 = 1001001}' class='latex' />. The first twin pair with greater Hamming distance actually gives distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B6%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{6}' title='{6}' class='latex' />: <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B191+%3D+10111111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{191 = 10111111}' title='{191 = 10111111}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B193+%3D+11000001%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{193 = 11000001}' title='{193 = 11000001}' class='latex' />. Next comes <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2687+%3D+10101111111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2687 = 10101111111}' title='{2687 = 10101111111}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2689+%3D+10110000001%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2689 = 10110000001}' title='{2689 = 10110000001}' class='latex' /> for distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B7%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' />. Is the Hamming distance of twin primes unbounded? </p><p>
Of course we don&#8217;t even know if there are infinitely many twin primes. This is really asking whether twin primes can flank a multiple of an arbitrarily large power of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. Quick web searches have not found this question, while our point is that our motive came from the coding-theory angle.</p><p><p><H2> Polignacs and Twins and Spheres </H2></p><p><p>
In 1848, Camille Marie de Polignac somewhat lazily conjectured that every odd number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> is the sum of a prime number and a power of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. We speculate that he may have intended to exclude false cases such as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn+%3D+127%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n = 127}' title='{n = 127}' class='latex' /> where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> itself is prime, but even so he missed <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn+%3D+905%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n = 905}' title='{n = 905}' class='latex' /> amid his reported (but to us incredible) claim to have verified this up to about 3 million. Perhaps it was spoken with the bluster of a Confederate major-general during the Civil War, which is surprisingly what this French nobleman <a href=\"http://en.wikipedia.org/wiki/Camille_Armand_Jules_Marie,_Prince_de_Polignac\">became</a>. </p><p>
His older brother, Alphonse de Polignac, made a somewhat less lazy conjecture: that every even number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k}' title='{k}' class='latex' /> is the difference between infinitely many pairs of consecutive primes. Of course with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk%3D2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k=2}' title='{k=2}' class='latex' /> this subsumes the Twin Primes Conjecture, and indeed the latter is sometimes called de Polignac&#8217;s Conjecture after him. </p><p>
Should Camille have teamed up with his brother to make his conjecture? And would they have done better if they had been twins&#8212;maybe prove something about their conjecture? Well we have an example to go by: Zhi-Wei Sun has a twin brother, Zhi-Hong Sun at Huaiyin Normal University, and they teamed up in 1992 to prove something about the following conjecture by Donald Wall:</p><blockquote><p>
There are infinitely many primes <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> such that either <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp+%5Cequiv+%5Cpm+1%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p &#92;equiv &#92;pm 1}' title='{p &#92;equiv &#92;pm 1}' class='latex' /> modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B5%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%5E2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p^2}' title='{p^2}' class='latex' /> divides the Fibonacci number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BF_%7Bp+-+1%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_{p - 1}}' title='{F_{p - 1}}' class='latex' />, or <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp+%5Cequiv+%5Cpm+2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p &#92;equiv &#92;pm 2}' title='{p &#92;equiv &#92;pm 2}' class='latex' /> modulo <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B5%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%5E2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p^2}' title='{p^2}' class='latex' /> divides the Fibonacci number <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BF_%7Bp+%2B+1%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_{p + 1}}' title='{F_{p + 1}}' class='latex' />, where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BF_n%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_n}' title='{F_n}' class='latex' /> is indexed with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BF_0+%3D+0%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_0 = 0}' title='{F_0 = 0}' class='latex' />, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BF_1+%3D+1%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_1 = 1}' title='{F_1 = 1}' class='latex' />.
</p></blockquote><p>
What Sun and Sun <a href=\"http://matwbn.icm.edu.pl/ksiazki/aa/aa60/aa6046.pdf\">proved</a> is that any minimal counterexample to Fermat&#8217;s Last Theorem would need to involve such a prime&#8212;of course from the proof of FLT two years later, we know there are none. They also gave a sufficient condition for a &#8220;Wall-Sun-Sun prime&#8221; to exist, though none has yet been found.</p><p>
Back to the Polignacs, we can try to capture ideas of both their conjectures with a case of what is actually a pretty general kind of question&#8212;a kind one can pose about other sets of numbers besides the primes:</p><blockquote><p>
What is the minimum <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> such that every odd number is within the distance-<img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> Hamming sphere of a prime number? Is it finite?
</p></blockquote><p>
To get the even numbers too we can add <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' />. Of course this is still a strong &#8220;every&#8221; kind of conjecture, and those are hard to prove. One can first try to attack &#8220;infinitely-many&#8221; versions. Obviously there are infinitely many odd numbers <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> that are <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpm+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pm 2}' title='{&#92;pm 2}' class='latex' /> from a prime <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />, but if we insist that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> too be prime we have our old friend the Twin Prime Conjecture again. So here is the corresponding Hamming-like question:</p><blockquote><p>
What is the minimum <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> such that there are infinitely many prime numbers <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> that are within Hamming distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> of some other prime number?
</p></blockquote><p>
Using Hamming&#8217;s own ideas in coding theory, we can prove the minimum is at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%3D2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d=2}' title='{d=2}' class='latex' />. Note that this is stronger than saying there are infinitely many pairs of primes <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%28p%2Cq%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(p,q)}' title='{(p,q)}' class='latex' /> such that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq+-+p+%3D+2%5Ek+%5Cpm+2%5El%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q - p = 2^k &#92;pm 2^l}' title='{q - p = 2^k &#92;pm 2^l}' class='latex' />, because we are also restricting what <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> have in the bit positions <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k}' title='{k}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bl%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{l}' title='{l}' class='latex' /> from the end. </p><p><p><H2> The Proof </H2></p><p><p>
The theorem is not that amazing, or unexpected, but we think how we prove it may be of interest. The proof is via Hamming&#8217;s famous <a href=\"http://en.wikipedia.org/wiki/Hamming_bound\">theorem</a> on the density of codes. Let <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BA_%7Bq%7D%28n%2Cd%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A_{q}(n,d)}' title='{A_{q}(n,d)}' class='latex' /> be size of the largest set <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> vectors over an alphabet of size <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> so that any two distinct code words in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> are at least Hamming distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> apart. </p><blockquote><p><b>Theorem 1</b><em> For all <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' />: 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++A_%7Bq%7D%28n%2Cd%29+%5Cle+%5Cfrac%7Bq%5E%7Bn%7D%7D%7B%5Csum_%7Bk%3D0%7D%5E%7Bt%7D+%5Cbinom%7Bn%7D%7Bk%7D%28q-1%29%5E%7Bk%7D%7D%2C+&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  A_{q}(n,d) &#92;le &#92;frac{q^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}(q-1)^{k}}, ' title='&#92;displaystyle  A_{q}(n,d) &#92;le &#92;frac{q^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}(q-1)^{k}}, ' class='latex' /></p><p>
where 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++t+%3D+%5Cleft%5Clfloor+%5Cfrac%7Bd-1%7D%7B2%7D+%5Cright%5Crfloor.+&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  t = &#92;left&#92;lfloor &#92;frac{d-1}{2} &#92;right&#92;rfloor. ' title='&#92;displaystyle  t = &#92;left&#92;lfloor &#92;frac{d-1}{2} &#92;right&#92;rfloor. ' class='latex' /></p><p></em></p></blockquote><p><p>
Now to state formally what we are proving, it is:</p><blockquote><p><b>Theorem 2</b><em> For every sufficiently large <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />, there are primes <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%2Cq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p,q}' title='{p,q}' class='latex' /> with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%5En+%5Cleq+p%2Cq+%3C+2%5E%7Bn%2B1%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2^n &#92;leq p,q &lt; 2^{n+1}}' title='{2^n &#92;leq p,q &lt; 2^{n+1}}' class='latex' /> such that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> have Hamming distance at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. </em></p></blockquote><p><p><em>Proof:</em>  Consider the set <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> of all primes in the interval <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5B2%5E%7Bn%7D%2C+%5Cdots%2C+2%5E%7Bn%2B1%7D-1%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{[2^{n}, &#92;dots, 2^{n+1}-1]}' title='{[2^{n}, &#92;dots, 2^{n+1}-1]}' class='latex' />. These of course can be represented by <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-bit vectors, eliding the leading <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> in the <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^n}' title='{2^n}' class='latex' /> place. Think of them as a code. We will show that its minimum distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> is at most <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />, from which the theorem follows. </p><p>
Suppose that the distance is larger, that is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd+%5Cge+3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d &#92;ge 3}' title='{d &#92;ge 3}' class='latex' />. The apply Hamming&#8217;s Theorem for <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BA_%7B2%7D%28n%2Cd%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A_{2}(n,d)}' title='{A_{2}(n,d)}' class='latex' /> noting that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bt+%5Cge+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{t &#92;ge 1}' title='{t &#92;ge 1}' class='latex' />. This yields </p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%7CS%7C+%5Cle+%5Cfrac%7B2%5E%7Bn%7D%7D%7B%5Csum_%7Bk%3D0%7D%5E%7Bt%7D+%5Cbinom%7Bn%7D%7Bk%7D%7D+%5Cle+%5Cfrac%7B2%5E%7Bn%7D%7D%7B1%2Bn%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  |S| &#92;le &#92;frac{2^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}} &#92;le &#92;frac{2^{n}}{1+n}. ' title='&#92;displaystyle  |S| &#92;le &#92;frac{2^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}} &#92;le &#92;frac{2^{n}}{1+n}. ' class='latex' /></p><p>
The <a href=\"http://en.wikipedia.org/wiki/Prime_number_theorem\">Prime Number Theorem</a> states that the density of primes up to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' /> converges to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN%2F%5Cln+N%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N/&#92;ln N}' title='{N/&#92;ln N}' class='latex' /> as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN+%5Clongrightarrow+%5Cinfty%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N &#92;longrightarrow &#92;infty}' title='{N &#92;longrightarrow &#92;infty}' class='latex' />, where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cln%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;ln}' title='{&#92;ln}' class='latex' /> is natural log. By an easy manipulation of estimates it follows that for any <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cepsilon+%3E+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;epsilon &gt; 0}' title='{&#92;epsilon &gt; 0}' class='latex' /> and all large enough <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' />, the primes have density at least <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%281-%5Cepsilon%29%5Cfrac%7B1%7D%7B%5Cln+N%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(1-&#92;epsilon)&#92;frac{1}{&#92;ln N}}' title='{(1-&#92;epsilon)&#92;frac{1}{&#92;ln N}}' class='latex' /> in <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5BN%2F2%2C%5Cdots%2CN-1%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{[N/2,&#92;dots,N-1]}' title='{[N/2,&#92;dots,N-1]}' class='latex' />. It follows with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7BN+%3D+2%5E%7Bn%2B1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N = 2^{n+1}}' title='{N = 2^{n+1}}' class='latex' /> that </p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%7CS%7C+%5Cgeq+%281-%5Cepsilon%29%5Cfrac%7B2%5E%7Bn%7D%7D%7B%28n%2B1%29%5Cln+2%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  |S| &#92;geq (1-&#92;epsilon)&#92;frac{2^{n}}{(n+1)&#92;ln 2}. ' title='&#92;displaystyle  |S| &#92;geq (1-&#92;epsilon)&#92;frac{2^{n}}{(n+1)&#92;ln 2}. ' class='latex' /></p><p>
Since <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%2F%5Cln+2+%3D+%5Clog_2+e+%3D+1.44%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1/&#92;ln 2 = &#92;log_2 e = 1.44&#92;dots}' title='{1/&#92;ln 2 = &#92;log_2 e = 1.44&#92;dots}' class='latex' />, this implies with the above that </p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle++%5Cfrac%7B1.44%281-%5Cepsilon%292%5En%7D%7Bn%2B1%7D+%5Cle+%5Cfrac%7B2%5En%7D%7Bn%2B1%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;frac{1.44(1-&#92;epsilon)2^n}{n+1} &#92;le &#92;frac{2^n}{n+1}, ' title='&#92;displaystyle  &#92;frac{1.44(1-&#92;epsilon)2^n}{n+1} &#92;le &#92;frac{2^n}{n+1}, ' class='latex' /></p><p>
but this is clearly false for large enough <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> and small enough <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;epsilon}' title='{&#92;epsilon}' class='latex' />. This contradiction proves <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd+%5Cleq+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d &#92;leq 2}' title='{d &#92;leq 2}' class='latex' /> and hence the theorem. <img src='https://s-ssl.wordpress.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;Box' title='&#92;Box' class='latex' /></p><p>
As the proof shows, there is actually a fair bit of &#8220;slack&#8221; in the counting. Hence the theorem can be extended to add conditions on the primes: we can further restrict the sizes of the primes, their residues modulo small numbers, and other properties. Indeed the counting makes this all close to working with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%3D1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d=1}' title='{d=1}' class='latex' />. That takes us back within the sphere of Camille de Polignac&#8217;s question as well.</p><p><p><H2> An Obstinate Question? </H2></p><p>
For <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bd%3D1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d=1}' title='{d=1}' class='latex' /> the question again comes in &#8220;every&#8221; (with the qualifier &#8220;large enough&#8221;) and &#8220;infinitely many&#8221; flavors:</p><blockquote><ol><li>
Is it true that for every large enough prime <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />, there is a prime <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> such that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> differ in one bit, or at least differ by a power of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />? (no)</p><li>
Are there infinitely many primes <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> such that for some other prime <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' />, <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> differ in one bit, or at least <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq+-+p%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q - p}' title='{q - p}' class='latex' /> is a power of <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />? (open)
</ol></blockquote><p>
Note that <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq+%3E+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &gt; p}' title='{q &gt; p}' class='latex' /> is allowed. Without that condition we&#8217;d have already the counterexample <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp+%3D+127%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p = 127}' title='{p = 127}' class='latex' /> to Camille&#8217;s conjecture. Incidentally, counterexamples to Camille are called <em>obstinate numbers</em>, and there are <a href=\"http://sprott.physics.wisc.edu/pickover/obstinate.html\">various</a><a href=\"http://danieldockery.com/b/2002/obstinate-numbers/\">pages</a> devoted to enumerating them. A case where <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq+%3E+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &gt; p}' title='{q &gt; p}' class='latex' /> is important is <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp+%3D+113%2C%5C%21921%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p = 113,&#92;!921}' title='{p = 113,&#92;!921}' class='latex' />: <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq+%3D+p+%2B+2%5E%7B141%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q = p + 2^{141}}' title='{q = p + 2^{141}}' class='latex' /> is prime. Of course whenever <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq+%5Cgeq+2p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &#92;geq 2p}' title='{q &#92;geq 2p}' class='latex' /> such a pair also has Hamming distance <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />, using leading <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' />&#8216;s to pad <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> to the same length as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' />.</p><p>
In 1964, Fred Cohen and John Selfridge noted that allowing <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq+%3E+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &gt; p}' title='{q &gt; p}' class='latex' /> made Camille&#8217;s idea good for every odd number up to <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B262%2C144%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{262,144}' title='{262,144}' class='latex' />. However, they <a href=\"http://www.ams.org/journals/mcom/1975-29-129/S0025-5718-1975-0376583-0/S0025-5718-1975-0376583-0.pdf\">proved</a> that the prime 	</p><p align=\"center\"><img src='https://s-ssl.wordpress.com/latex.php?latex=%5Cdisplaystyle+p+%3D+47%2C%5C%21867%2C%5C%21742%2C%5C%21232%2C%5C%21066%2C%5C%21880%2C%5C%21047%2C%5C%21611%2C%5C%21079&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle p = 47,&#92;!867,&#92;!742,&#92;!232,&#92;!066,&#92;!880,&#92;!047,&#92;!611,&#92;!079' title='&#92;displaystyle p = 47,&#92;!867,&#92;!742,&#92;!232,&#92;!066,&#92;!880,&#92;!047,&#92;!611,&#92;!079' class='latex' /></p><p>
cannot be written as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp+%3D+q+%5Cpm+2%5Ek%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p = q &#92;pm 2^k}' title='{p = q &#92;pm 2^k}' class='latex' /> with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> prime. Moreover, they gave an infinite arithmetic progression of numbers <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba+%2B+bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a + bn}' title='{a + bn}' class='latex' /> with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Ba%2Cb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a,b}' title='{a,b}' class='latex' /> coprime that cannot be written as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7B%5Cpm+2%5Ek+%5Cpm+q%5El%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pm 2^k &#92;pm q^l}' title='{&#92;pm 2^k &#92;pm q^l}' class='latex' /> with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> prime. Since every such progression contains infinitely many primes, this finally lays question 1 to rest even with the &#8220;large enough&#8221; modifier. Zhi-wei Sun himself made good on something stated in their abstract but not proved in their paper, in a 2000 <a href=\"http://www.ams.org/journals/mcom/1975-29-129/S0025-5718-1975-0376583-0/S0025-5718-1975-0376583-0.pdf\">paper</a> giving an infinite arithmetic progression of numbers that cannot be written as <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%5Ek+%5Cpm+q%5El%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p^k &#92;pm q^l}' title='{p^k &#92;pm q^l}' class='latex' /> with <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bp%2Cq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p,q}' title='{p,q}' class='latex' /> prime and <img src='https://s-ssl.wordpress.com/latex.php?latex=%7Bk%2Cl+%3E+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k,l &gt; 0}' title='{k,l &gt; 0}' class='latex' />. </p><p>
All this still, however, leaves the second question open. We would like to prove it, indeed find moderately dense sets of such pairs.</p><p><p><H2> Open Problems </H2></p><p><p>
Are there infinitely many pairs of primes that differ in just one bit?</p><p>
We note that there are people who have thought about connections between coding theory and number theory. For example, Toyokazu Hiramatsu and G&uuml;nter K&ouml;hler have a whole <a href=\"http://www.amazon.com/Coding-Theory-Number-Mathematics-Applications/dp/1402012039\">monograph</a> titled <i>Coding Theory and Number Theory</i> on this topic. But the idea there is to apply number theory to shed light on the structure of codes. Elliptic curves, for instance, can be used to construct certain interesting codes. We are interested in the impact of coding theory on number theory, such as the distribution of important sets like the primes, which in turn may have applications in computing theory.</p><p>
[$2^k + 2^l$ changed to $2^k \\pm 2^l$, fixed ceiling to floor in Hamming bound]</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11351/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11351/\" /></a><img alt=\" \" border=\"0\" src=\"https://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11351&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "https://rjlipton.wordpress.com/2014/03/09/codes-meet-numbers/feed/") (slash:comments nil "6") (media:content ((url . "https://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "https://rjlipton.files.wordpress.com/2014/03/suninsun.png") (medium . "image")) (media:title ((type . "html")) "SunInSun")))) ("Gödel's Lost Letter and P=NP" "a personal view of the theory of computation" "http://rjlipton.wordpress.com" (21319 15378 829379 668000) feed 0 nil nil ((title nil "Gödel's Lost Letter and P=NP") (atom:link ((href . "http://rjlipton.wordpress.com/feed/") (rel . "self") (type . "application/rss+xml"))) (link nil "http://rjlipton.wordpress.com") (description nil "a personal view of the theory of computation") (lastBuildDate nil "Thu, 10 Apr 2014 18:14:57 +0000") (language nil "en") (sy:updatePeriod nil "hourly") (sy:updateFrequency nil "1") (generator nil "http://wordpress.com/") (cloud ((domain . "rjlipton.wordpress.com") (port . "80") (path . "/?rsscloud=notify") (registerProcedure . "") (protocol . "http-post"))) (image nil (url nil "http://s2.wp.com/i/buttonw-com.png") (title nil "Gödel's Lost Letter and P=NP") (link nil "http://rjlipton.wordpress.com")) (atom:link ((rel . "search") (type . "application/opensearchdescription+xml") (href . "http://rjlipton.wordpress.com/osd.xml") (title . "Gödel's Lost Letter and P=NP"))) (atom:link ((rel . "hub") (href . "http://rjlipton.wordpress.com/?pushpress=hub"))) (item nil (title nil "Multiple-Credit Tests") (link nil "http://rjlipton.wordpress.com/2014/04/10/multiple-credit-tests/") (comments nil "http://rjlipton.wordpress.com/2014/04/10/multiple-credit-tests/#comments") (pubDate nil "Thu, 10 Apr 2014 18:14:27 +0000") (dc:creator nil "Pip") (category nil "All Posts") (category nil "Ideas") (category nil "anagrams") (category nil "April Fool's") (category nil "chess") (category nil "MOOCs") (category nil "multiple-choice tests") (category nil "Pandolfini") (category nil "quiz") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11505") (description nil "Can chess statistics help design multiple-choice exams? UT Dallas source Bruce Pandolfini is one of very few living people who have been played by an Oscar-winning actor. He was the real-life chess teacher of junior chess player Joshua Waitzkin, who went on to become the world champion&#8212;in T&#8217;ai Chi. Their story is told in the [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11505&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Can chess statistics help design multiple-choice exams? </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/04/pandolfini-bruce-2012-02.jpg\"><img src=\"http://rjlipton.files.wordpress.com/2014/04/pandolfini-bruce-2012-02.jpg?w=600\" alt=\"pandolfini-bruce-2012-02\"   class=\"alignright size-full wp-image-11506\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">UT Dallas <a href=\"http://www.utdallas.edu/news/2012/2/21-15941_ChessFest-To-Honor-Well-Known-Master-Coach_article-wide.html\">source</a><br /></FONT></td></table><p>
Bruce Pandolfini is one of very few living people who have been played by an Oscar-winning actor. He was the real-life chess teacher of junior chess player Joshua Waitzkin, who went on to become the world champion&#8212;<a href=\"http://en.wikipedia.org/wiki/Joshua_Waitzkin#Author\">in T&#8217;ai Chi</a>. Their story is told in the <a href=\"http://en.wikipedia.org/wiki/Searching_for_Bobby_Fischer\">movie</a> &#8220;Searching For Bobby Fischer&#8221; with Sir Ben Kingsley, which is still iconic after 20-plus years. Pandolfini is still doing what he loves as an active chess teacher in New York City. For much of this time he has also written a popular feature called &#8220;Solitaire Chess&#8221; for Chess Life magazine, which is published by the United States Chess Federation.</p><p>
Today Dick and I wish to compare styles of multiple-choice exams, with reference to &#8220;Solitaire Chess,&#8221; and have some fun as well.</p><p>
Most multiple-choice questions are designed to have a unique correct answer, with all other answers receiving 0 points or even a minus. This is like a chess problem of &#8220;find the winning move&#8221; type. Mate-in-2, mate-in-3, and endgame problems generally have unique answers&#8212;a &#8220;dual&#8221; solution is an esthetic blemish. There are several popular websites devoted to this kind of chess puzzle, which is great for honing one&#8217;s tactical ability. </p><p>
&#8220;Solitaire Chess&#8221; is different, with more emphasis on strategy. The reader takes the winning side of a notable game Bruce has prepared, and chooses his/her move before revealing the answer and the opponent&#8217;s next move. It simulates the feeling of playing a master game. </p><p>
Incidentally Bruce recently attended the wedding of another master player represented in the movie, the real-life Asa Hoffman to the former Virginia LoPresto, who also remember me from New York tournaments in the 1970&#8242;s. Among children Bruce has coached in preteen years is the world&#8217;s current 5th-ranked player, Fabiano Caruana of Brooklyn and Italy.</p><p><p><H2> Solitaire Chess </H2></p><p><p>
The difference we emphasize is that the game positions often give partial or even full credit for alternative choices. For example, here is the position at move 22 in the March 2014 Chess Life column, of a game that was played in 1934 by Fred Reinfeld, an earlier master teacher who wrote many great books until the 1960&#8242;s.  White is to play:</p><p><P><br /><a href=\"http://rjlipton.files.wordpress.com/2014/04/reinfeldposition.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/04/reinfeldposition.png?w=300&#038;h=300\" alt=\"ReinfeldPosition\" width=\"300\" height=\"300\" class=\"aligncenter size-medium wp-image-11508\" /></a></p><p><P><br />
The top score of 5 points goes to the capture move 22.axb4, but the alternatives 22.Nc6 and 22.Ne6+ are deemed almost as good, worth 4 points each, while the non-capture move 22.a4 still gets 2 points. Several other game turns have 3-point partial credits. At the end is a chart connecting your total score over all the moves to the standard chess rating scale devised by Arpad Elo.  For instance, 81&#8211;94 points is deemed the range of a 2200&#8211;2399 master player such as myself, while 36&#8211;50 is for a &#8220;good club player&#8221; with 1600&#8211;1799 rating. </p><p>
Pandolfini&#8217;s expert judgment goes into setting both the partial credits and the overall assessment scale. Although chess positions often have 30&#8211;50 legal moves or even more, there are typically at most 3&#8211;5 moves worth considering, so this is like a standard multiple-choice test in that way. The partial credits, however, are more typical of <em>ranking</em> applications such as judging the value of search-engine hits, where there are 10, 20, 30, or hundreds or thousands of choices to consider. Our topic is about having the best of both kinds of application, and how to do the assessment scientifically.</p><p><p><H2> But Let&#8217;s Have Fun </H2></p><p><p>
Well we guess you didn&#8217;t come to a blog to take an exam, so we&#8217;ll try to make at least the first part fun, before we introduce more &#8220;strategic&#8221; questions with partial credits. You are on your honor not to Google the answers&#8212;we can tell of course; we won&#8217;t tell you how we know but our <a href=\"http://en.wikipedia.org/wiki/Heartbleed_bug\">heartbleeds</a> for you.</p><ol><li> PCP stands for which of the following?
<ol><li>
Post Correspondence Problem </p><li>
Provably Checkable Proofs </p><li> A recreational drug
<li> Probabilistically Checkable Proofs
<li> All the above
<li> Some of the above
<li> None of the above.
</ol><li> The first Turing Award Winner was&#8212;?
<ol><li> Alan Turing, posthumously for Turing Machines
<li> John Backus for Fortran
<li> Alan Perlis for Algol
<li> None of the above.
</ol><li> By the terms of the Clay Millennium Prize, it would be awarded for&#8212;?
<ol><li> A proof that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' />.
<li> A proof that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.
<li> A proof that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' /> is independent of set theory.
<li> All the above
<li> Some of the above
<li> None of the above.
</ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> stands for:
<ol><li> Not Polynomial (time).
<li> Nick Pippenger.
<li> Nondeterministic Polynomial (time).
<li> Nick&#8217;s Problems.
<li><img src='http://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' /> times <img src='http://s0.wp.com/latex.php?latex=%7BP%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{P}' title='{P}' class='latex' />.
</ol><li> Breaking RSA is equivalent to factoring integers:
<ol><li> Yes
<li> No
<li> Yes on Riemann Hypothesis
<li> No on Riemann Hypothesis
<li> Open question.
</ol><li> If <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BBQP%3DBPP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BQP=BPP}}' title='{&#92;mathsf{BQP=BPP}}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NC}}' title='{&#92;mathsf{P=NC}}' class='latex' /> then it follows that which is true?
<ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' />.
<li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNL%3DP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NL=P}}' title='{&#92;mathsf{NL=P}}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNL%3DNC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NL=NC}}' title='{&#92;mathsf{NL=NC}}' class='latex' />.
<li> All the above
<li> Some of the above
<li> None of the above.
</ol></ol><p><p><H2> Multi-Choice </H2></p><p><p>
OK, more serious now. Start your engines. Actually in chess, &#8220;start your engines&#8221; refers to computer chess programs, and would mean either you are cheating, or you are playing in the InfinityChess Freestyle <a href=\"http://www.infinitychess.com/Web/Page/Public/Article/DefaultArticle.aspx?id=141\">tournament</a>, which finishes today.</p><ol><p><li>
The main significance of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> being shown <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete in 1970-71 is: </p><ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete sets weren&#8217;t known before. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> is a natural problem, and this led to many other natural problems in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> being shown to be complete. </p><li>
Logic is a universal language. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> does not have a polynomial-time algorithm. </p><li>
Formulas that are satisfiable can be verified after guessing a good assignment in polynomial time.
</ol><li> We know that nondeterministic linear bounded automata (NLBAs) accept a different class of languages from <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> because:
<ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> allows using more than linear space. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D+%5Cneq+%5Cmathsf%7BNTIME%7D%5BO%28n%29%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP} &#92;neq &#92;mathsf{NTIME}[O(n)]}' title='{&#92;mathsf{NP} &#92;neq &#92;mathsf{NTIME}[O(n)]}' class='latex' /> by the nondeterministic time hierarchy theorem. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> is closed downward under polynomial-time many-one reductions but the class of NLBA languages is not. </p><li>
NLBAs can accept <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' />-complete languages and <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE+%5Csupset+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE &#92;supset NP}}' title='{&#92;mathsf{PSPACE &#92;supset NP}}' class='latex' />. </p><li>
NLBA languages are closed under complement, while <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> isn&#8217;t.
</ol><li> The easiest languages currently known not to be in nonuniform <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BACC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{ACC}}' title='{&#92;mathsf{ACC}}' class='latex' /> belong to:
<ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNEXP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NEXP}}' title='{&#92;mathsf{NEXP}}' class='latex' /></p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BEXP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{EXP}}' title='{&#92;mathsf{EXP}}' class='latex' /></p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /></p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /></p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNC%5E%7B1%7D%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NC^{1}}}' title='{&#92;mathsf{NC^{1}}}' class='latex' />.
</ol><li> Kurt G&ouml;del&#8217;s Second Incompleteness Theorem states that:
<ol><li>
No formal system can prove its own consistency. </p><li>
No formal system can prove its own consistency, unless it is inconsistent. </p><li>
No formal system that extends basic arithmetic can prove its own consistency. </p><li>
No formal system that extends basic arithmetic can prove its own consistency, unless it is inconsistent. </p><li>
No computably axiomatizable formal system that extends basic arithmetic can prove its own consistency, unless it is inconsistent.
</ol><li> The language of undirected simple graphs that have a unique 4-edge coloring up to isomprphisms belongs to <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />&#8212;indeed, it is just disjoint unions of star graphs. In consequence:
<ol><li>
The &#8220;Four Edge Coloring&#8221; (<img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' />) problem cannot be <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete. </p><li>
There does not exist a parsimonious polynomial-time reduction to the <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> language unless factoring is in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> cannot be polynomial-time isomorphic, unless factoring is in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> is solvable in quantum polynomial time. </p><li>
There does not exist a polynomial-time reduction from <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> to <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B4EC%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{4EC}}' title='{&#92;mathsf{4EC}}' class='latex' /> that is parsimonious on the 4-edge-coloring relation, unless factoring is in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />.
</ol><li> Structural evidence for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BBPP+%3D+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP = P}}' title='{&#92;mathsf{BPP = P}}' class='latex' /> is:
<ol><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPrimes%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{Primes}}' title='{&#92;mathsf{Primes}}' class='latex' /> and several other classic <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BBPP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP}}' title='{&#92;mathsf{BPP}}' class='latex' /> problems are now known to be in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />. </p><li>
Polynomial identity testing can be de-randomized. </p><li>
It follows if there are languages in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BEXP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{EXP}}' title='{&#92;mathsf{EXP}}' class='latex' /> that do not have <img src='http://s0.wp.com/latex.php?latex=%7B2%5E%7Bo%28n%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^{o(n)}}' title='{2^{o(n)}}' class='latex' />-sized circuits. </p><li>
No <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BBPP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP}}' title='{&#92;mathsf{BPP}}' class='latex' />-complete problems have been found. </p><li>
A random oracle <img src='http://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A}' title='{A}' class='latex' /> makes <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BBPP%7D%5EA+%3D+%5Cmathsf%7BP%7D%5EA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{BPP}^A = &#92;mathsf{P}^A}' title='{&#92;mathsf{BPP}^A = &#92;mathsf{P}^A}' class='latex' />.
</ol></ol><p><p><H2> Getting Help With Judgment Calls </H2></p><p><p>
We think each of our latter six &#8220;multi-choice&#8221; questions has a clear best answer, but our judgment comes from perspectives in our field. For instance, &#8220;structural&#8221; complexity came with a specific meaning apart from algorithmic and practical considerations. Even granting that meaning, arguments can be made for several answers to the last question&#8212;all except the one that is false on current knowledge. For example, random-oracle results used to be considered stronger evidence than is commonly ascribed to them now.</p><p>
We could have made catch-all &#8220;some of the above&#8221; answers as in our first set. However, this would miss our feeling of there being a pecking order even among the non-optimal answers. Again with reference to the last question, random oracles and complete languages are &#8220;structural&#8221; while the history of classifying problems is not, and between the first two, lacking a completeness level is not generally evidence of being tractable. Hence we see the possibility of better assessment by giving different partial credits to these answers.</p><p>
An even more quantitative option is to ask the test-taker to rate each statement on (say) a 0&#8211;5 scale. This would be just like asking the takers to estimate the partial credits themselves. We could then score according to distributional similarity to our own assignment, weighting closeness on the best answers the most. Of course this style of grading is most appropriate to judging search engines, based on an expert reference assessment of the importance of the various &#8216;hits&#8217; returned. And it is also like simulating the creation of &#8220;Solitaire Chess&#8221; itself&#8212;more than just looking for the best move which is what we do when we actually play chess. Thus the teacher has a harder task than the player.</p><p>
The most ambitious goal is to turn the process around by making backwards inferences about the values of questions from the aggregated selection of many well-informed takers. In chess this would be like judging the value of a move based on the proportion of strong players who choose it. Nowadays this is regarded as overruled by the judgments of strong computer programs, notwithstanding the issue that players&#8217; &#8220;book knowledge&#8221; of past games makes their choices less independent than among test takers. </p><p>
However, the ability in chess to correlate players&#8217; judgments with computer values of moves, and map the distributions, <em>may</em> help us make inferences about &#8220;objective value&#8221; from the distributions of the test-takers. The computer values are <i>scientifically objective</i> partial credits, and &#8220;Solitaire Chess&#8221; could be scored as an app that way.  This all plays into quantifying <a href=\"http://en.wikipedia.org/wiki/The_Wisdom_of_Crowds\">the wisdom of crowds</a> along lines discussed toward the end of the Distinguished Speaker <a href=\"http://cfem.au.dk/fileadmin/www.cfem.au.dk/Downloads/CFEM-inauguration/Bounding_Rationality_by_Computation_Complexity_Lance-Fortnow.pdf\">lecture</a> given by Lance Fortnow on his visit to Buffalo last week. At least this is our motive for making tests more like strategic chess.</p><p><p><H2> Open Problems </H2></p><p><p>
What partial-credit values would you assign to our complexity questions?</p><p>
Should multiple-choice tests be more like &#8220;Solitaire Chess&#8221;? Does one obtain deeper and better assessment that way? Is the difference important enough to massive online courses? </p><p align=\"center\"> &sect; </p><p>
Here are the answers to our April Fool&#8217;s anagram <a href=\"http://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/\">quiz</a>, besides &#8220;Pearl Gates&#8221; = Peter Sagal and &#8220;Slack Laser&#8221; = Carl Kasell:</p><ul><li>
&#8220;Hydra Dye Frog&#8221; is Godfrey Hardy; the item is true. </p><li>
&#8220;Gail Kali&#8221; is Gil Kalai, and the bio is false&#8212;although the description of his eponymous <a href=\"http://en.wikipedia.org/wiki/Kalai's_3^d_conjecture\">conjecture</a> is fine. </p><li>
&#8220;Rich-Cal Fried Sugars&#8221; is Carl Friedrich Gauss, and the Ceres story is fit to go on a box of frosted cornflakes.
<li>
&#8220;One-Ale Hurdler&#8221; is Leonhard Euler, and the <a href=\"http://en.wikipedia.org/wiki/Seven_Bridges_of_Konigsberg\">K&ouml;nigsberg Bridge Problem</a> is indeed hailed as founding Graph Theory. </p><li>
&#8220;One-Cat Tree&#8221; is Terence Tao, and our extrapolation of his new <a href=\"http://terrytao.wordpress.com/2014/02/04/finite-time-blowup-for-an-averaged-three-dimensional-navier-stokes-equation/\">result</a> on Navier-Stokes is a flight of fancy. </p><li>
&#8220;Wes Gromit&#8221; is Tim Gowers, and we twisted past all the great work by him and Tao and &#8220;Gene Bern&#8221; = Ben Green on arithmetic progressions with a false statement&#8212;one falsified by the older theorem of Gustav Dirichlet that every infinite arithmetic progression without a common factor has infinitely many primes. </p><li>
&#8220;Annual Trig&#8221; is Alan Turing, true item. </p><li>
&#8220;Town Falconer&#8221; is Lance Fortnow, and we stated things backwards: he and &#8220;Semi Spiker&#8221; = Mike Sipser gave an oracle <img src='http://s0.wp.com/latex.php?latex=%7BA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A}' title='{A}' class='latex' /> for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BIP%7D%5EA+%5Cnot%5Csubseteq+%5Cmathsf%7Bco%7D%5Ctext%7B-%7D%5Cmathsf%7BNP%7D%5EA%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{IP}^A &#92;not&#92;subseteq &#92;mathsf{co}&#92;text{-}&#92;mathsf{NP}^A}' title='{&#92;mathsf{IP}^A &#92;not&#92;subseteq &#92;mathsf{co}&#92;text{-}&#92;mathsf{NP}^A}' class='latex' />, while &#8220;Amish Raid&#8221; = Adi Shamir finished the oracle-exorcising result <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BIP+%3D+PSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{IP = PSPACE}}' title='{&#92;mathsf{IP = PSPACE}}' class='latex' />. </p><li>
&#8220;Joint Who Tolled&#8221; is John Littlewood, true description. </p><li>
&#8220;Glacial Warmish&#8221; is William Gasarch, but as with &#8220;Falconer&#8221; the theorem statement is backwards. </p><li>
&#8220;Glib Tales&#8221; is a well-known anagram of Bill Gates, and yes he was <a href=\"http://en.chessbase.com/post/carlsen-mates-bill-gates-in-79-seconds\">mated</a> in 9 moves. </p><li>
&#8220;Sonata Consort&#8221; is Scott Aaronson, and the opposite of our first statement is <a href=\"http://www.scottaaronson.com/blog/\">proclaimed</a> on the masthead of his blog. Indeed all six &#8220;fools&#8221; are bloggers like us&#8230;
</ul><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11505/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11505/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11505&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/04/10/multiple-credit-tests/feed/") (slash:comments nil "0") (media:content ((url . "http://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/04/pandolfini-bruce-2012-02.jpg") (medium . "image")) (media:title ((type . "html")) "pandolfini-bruce-2012-02")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/04/reinfeldposition.png?w=300") (medium . "image")) (media:title ((type . "html")) "ReinfeldPosition"))) (item nil (title nil "Counting Is Sometimes Easy") (link nil "http://rjlipton.wordpress.com/2014/04/05/counting-is-sometimes-easy/") (comments nil "http://rjlipton.wordpress.com/2014/04/05/counting-is-sometimes-easy/#comments") (pubDate nil "Sat, 05 Apr 2014 05:14:43 +0000") (dc:creator nil "Pip") (category nil "History") (category nil "Ideas") (category nil "Oldies") (category nil "P=NP") (category nil "People") (category nil "complexity") (category nil "counting") (category nil "finite automata") (category nil "Sipser") (category nil "textbooks") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11490") (description nil "Cases where we can count objects in polynomial time New Interim Dean source&#8212;our congrats Mike Sipser is one of the top theorists, especially in complexity theory, and has been Head of the Mathematics Department at MIT since 2004. He is long known for some very clever proofs and his famous survey paper on the status [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11490&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Cases where we can count objects in polynomial time </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/04/sipserdean.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/04/sipserdean.png?w=180&#038;h=216\" alt=\"SipserDean\" width=\"180\" height=\"216\" class=\"alignright wp-image-11495\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">New Interim Dean <a href=\"http://newsoffice.mit.edu/2013/michael-sipser-named-interim-dean-of-the-school-of-science-1206\">source</a>&#8212;our congrats<br /></FONT></td></table><p>
Mike Sipser is one of the top theorists, especially in complexity theory, and has been Head of the Mathematics Department at MIT since 2004. He is long known for some very clever proofs and his famous <a href=\"http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.44.9296\">survey paper</a> on the status of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' />. He is recently known for co-authoring the <a href=\"http://arxiv.org/pdf/quant-ph/0001106v1.pdf\">paper</a> that introduced <a href=\"http://en.wikipedia.org/wiki/Adiabatic_quantum_computation\">adiabatic quantum computing</a>, which is the kind being given physical realization <a href=\"http://bits.blogs.nytimes.com/2014/03/24/quantum-computing-research-may-back-controversial-company/\">by</a> the company D-Wave Systems. But he is perhaps best known nowadays for his <a href=\"http://www.amazon.com/Introduction-Theory-Computation-Michael-Sipser/dp/113318779X\">textbook</a><i>Introduction to the Theory of Computation</i>. I have used the earlier version many times for teaching our undergraduate class; I have not used the third edition, mainly because I teach other things these days.</p><p>
Today Ken and I wish to talk about a topic that is covered in his book, finite state automata, in relation to counting.<br /><span id=\"more-11490\"></span></p><p>
Yes, lowly finite state automata (FSA). In my opinion FSA are one of the great inventions of theory. They led Michael Rabin and Dana Scott to discover nondeterminism, yielding a Turing Award along the way. They led algorithm designers like Don Knuth to discover, with Jim Morris and Vaughan Pratt, the first linear-time pattern matching algorithm. And much more.</p><p>
Mike&#8217;s book was discussed before <a href=\"http://rjlipton.wordpress.com/2009/03/07/finite-state-automata-binary-decision-diagrams-and-presburger-arithmetic/\">here</a>, where I talked about his use of FSA to prove that the first order theory of addition is decidable. This is one of my favorite applications of FSA, which I learned from Ann Yasuhara directly&#8212;it is also included in her early <a href=\"http://www.amazon.com/Recursive-Function-Computer-Science-Mathematics/dp/0127689508\">book</a>, <i>Recursive Function Theory and Logic</i>.</p><p><p><H2> A Look at the Book </H2></p><p><p>
Mike&#8217;s book proves some interesting theorems that are ancient&#8212;okay, many decades old. This yields what in retrospect look like omissions, which are bound up with the history of the theorems. For example, consider the following classic one: </p><blockquote><p><b>Theorem 1</b><em> A language is context-free if and only if some nondeterministic pushdown automaton (PDA) accepts it. </em></p></blockquote><p>
This is proved in detail in his book&#8212;see page 117 in the new edition, Theorem 2.20. But the proof establishes more, much more, that is not stated. I have used both of these consequences in my own work over the years:</p><ul><li>
Given a context-free grammar we can construct the PDA in polynomial time, and conversely given the PDA we can construct the grammar. </p><li>
The sizes of the grammar and the description of the PDA are related by a polynomial bound.
</ul><p>
Note that the best construction, I believe, goes from a PDA with <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> states to a grammar with <img src='http://s0.wp.com/latex.php?latex=%7BO%28S%5E%7B3%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(S^{3})}' title='{O(S^{3})}' class='latex' /> rules. If there is a better one it would have some interesting consequences. </p><p>
Let me say that this omission is not isolated to Mike&#8217;s book, but others most always leave out these interesting refinements. I believe that the reason is simple: the above theorem was proved before polynomial time was defined, and the textbook is sequenced that way. Hence the omission. Perhaps they can be added to a fourth edition.</p><p>
Ken adds&#8212;also writing much of the rest of this post: I now like the sequence of skipping grammars and PDA&#8217;s and going straight from regular languages and FSA to Turing computability and complexity. After this &#8216;kernel&#8217; material the instructor has an option of covering grammars, and then the polynomial-overhead concepts are in place. Or the instructor can do more with complexity or logic or some other core topic.</p><p><p><H2> Counting </H2></p><p><p>
Let&#8217;s get back to FSA and counting.</p><blockquote><p><b>Theorem 2</b><em> Let <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> be a deterministic FSA with <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> states and input alphabet <img src='http://s0.wp.com/latex.php?latex=%7B%5CSigma%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;Sigma}' title='{&#92;Sigma}' class='latex' />. Then we can determine the cardinality <img src='http://s0.wp.com/latex.php?latex=%7BC_m%28n%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{C_m(n)}' title='{C_m(n)}' class='latex' /> of the set <img src='http://s0.wp.com/latex.php?latex=%7BL%28M%29%5Ccap+%5CSigma%5E%7Bn%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{L(M)&#92;cap &#92;Sigma^{n}}' title='{L(M)&#92;cap &#92;Sigma^{n}}' class='latex' /> in time polynomial in <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />. </em></p></blockquote><p><p>
Put another way, we can count in polynomial time the number of strings of length <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> that a FSA accepts. If the FSA is fixed, then the time is polynomial only in <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />. Actually, in this case the time is essentially bi-linear in <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />&#8212;it depends on the exact computational model. </p><p>
The algorithm to prove this is often described as &#8220;dynamic programming,&#8221; but often that just means maintaining a well-chosen data structure. Here we allocate a slot for each state <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> of the FSA, and maintain for each <img src='http://s0.wp.com/latex.php?latex=%7Bk+%5Cleq+n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k &#92;leq n}' title='{k &#92;leq n}' class='latex' /> the number <img src='http://s0.wp.com/latex.php?latex=%7BN_%7Bk%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{k,q}}' title='{N_{k,q}}' class='latex' /> of strings of length exactly <img src='http://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k}' title='{k}' class='latex' /> that reach <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> from the start state <img src='http://s0.wp.com/latex.php?latex=%7Bs%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s}' title='{s}' class='latex' />. Initially <img src='http://s0.wp.com/latex.php?latex=%7Bk+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k = 0}' title='{k = 0}' class='latex' />, <img src='http://s0.wp.com/latex.php?latex=%7BN_%7B0%2Cs%7D+%3D+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{0,s} = 1}' title='{N_{0,s} = 1}' class='latex' /> for the empty string, and all other <img src='http://s0.wp.com/latex.php?latex=%7BN_%7B0%2Cq%7D+%3D+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{0,q} = 0}' title='{N_{0,q} = 0}' class='latex' />. Now to update it to <img src='http://s0.wp.com/latex.php?latex=%7BN_%7Bk%2B1%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{k+1,q}}' title='{N_{k+1,q}}' class='latex' />, find all states <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and characters <img src='http://s0.wp.com/latex.php?latex=%7Bc%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{c}' title='{c}' class='latex' /> such that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cdelta%28p%2Cc%29+%3D+q%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;delta(p,c) = q}' title='{&#92;delta(p,c) = q}' class='latex' />, where <img src='http://s0.wp.com/latex.php?latex=%7B%5Cdelta%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;delta}' title='{&#92;delta}' class='latex' /> is the transition function of <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' />, and sum up <img src='http://s0.wp.com/latex.php?latex=%7BN_%7Bk%2Cp%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{k,p}}' title='{N_{k,p}}' class='latex' />. That is, </p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++N_%7Bk%2B1%2Cq%7D+%3D+%5Csum_%7Bp%2Cc%3A+%5Cdelta%28p%2Cc%29+%3D+q%7D+N_%7Bk%2Cp%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  N_{k+1,q} = &#92;sum_{p,c: &#92;delta(p,c) = q} N_{k,p}. ' title='&#92;displaystyle  N_{k+1,q} = &#92;sum_{p,c: &#92;delta(p,c) = q} N_{k,p}. ' class='latex' /></p><p>
Finally <img src='http://s0.wp.com/latex.php?latex=%7BC_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n)}' title='{C_M(n)}' class='latex' /> equals the sum of <img src='http://s0.wp.com/latex.php?latex=%7BN_%7Bn%2Cq%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_{n,q}}' title='{N_{n,q}}' class='latex' /> over all accepting states <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' />. Assuming random access to the data slots, and unit time for arithmetic on small numbers, this runs in time <img src='http://s0.wp.com/latex.php?latex=%7BO%28Sn%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(Sn)}' title='{O(Sn)}' class='latex' />.</p><p>
Sounds simple, but as often happens in complexity, delicacy and difficulty lurk not too far away.</p><p><p><H2> The NFA Case and an Application </H2></p><p><p>
First, does the algorithm work when <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> is nondeterministic? It certainly runs, and counts <em>something</em>, but not the number of accepted strings. So can we modify it to do so? </p><p>
The answer is no&#8212;or maybe better to say &#8220;ostensibly not&#8221;: Given a Boolean formula that is a conjunction of clauses <img src='http://s0.wp.com/latex.php?latex=%7BC_1%2C%5Cdots%2CC_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_1,&#92;dots,C_m}' title='{C_1,&#92;dots,C_m}' class='latex' />, design an NFA <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> that begins with a nondeterministic choice of one of <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> states <img src='http://s0.wp.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' />. From every <img src='http://s0.wp.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' />, <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> starts reading its input <img src='http://s0.wp.com/latex.php?latex=%7Bx+%5Cin+%5C%7B0%2C1%5C%7D%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x &#92;in &#92;{0,1&#92;}^n}' title='{x &#92;in &#92;{0,1&#92;}^n}' class='latex' /> deterministically. The part of <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' />&#8216;s code from <img src='http://s0.wp.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' /> is written so that if <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> is an assignment that makes every literal in <img src='http://s0.wp.com/latex.php?latex=%7BC_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_j}' title='{C_j}' class='latex' /> false&#8212;note that the literals can be presented in index order&#8212;then <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> accepts <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. Thus the formula is <em>un</em>satisfiable if and only if <img src='http://s0.wp.com/latex.php?latex=%7BC_M%28n%29+%3D+2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n) = 2^n}' title='{C_M(n) = 2^n}' class='latex' />. So if we had a <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28Sn%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(Sn)}' title='{&#92;mathsf{poly}(Sn)}' class='latex' /> algorithm to compute <img src='http://s0.wp.com/latex.php?latex=%7BC_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n)}' title='{C_M(n)}' class='latex' />, we&#8217;d have <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP+%3D+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP = P}}' title='{&#92;mathsf{NP = P}}' class='latex' />.</p><p>
Moreover, <img src='http://s0.wp.com/latex.php?latex=%7B2%5En+-+C_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^n - C_M(n)}' title='{2^n - C_M(n)}' class='latex' /> counts the satisfying assignments. Hence relaxing <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> from DFA to NFA makes our little problem <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#P}}' title='{&#92;mathsf{&#92;#P}}' class='latex' />-complete. Now it&#8217;s important that <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> is part of the input. If <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> is fixed and we only want to compute <img src='http://s0.wp.com/latex.php?latex=%7BC_M%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{C_M(n)}' title='{C_M(n)}' class='latex' /> given <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />, then of course we can convert <img src='http://s0.wp.com/latex.php?latex=%7BM%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M}' title='{M}' class='latex' /> to an equivalent DFA which is likewise fixed, and run our algorithm. Hence one must be delicate with what constitutes the input. </p><p>
For an example, call a string <b>special</b> if it contains <img src='http://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> copies of the pattern <img src='http://s0.wp.com/latex.php?latex=%7Bu+%3D+010111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{u = 010111}' title='{u = 010111}' class='latex' /> for some <img src='http://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> that is a prime number. We can count the number of special strings of length <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> in time polynomial in <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />. To do so, we take <img src='http://s0.wp.com/latex.php?latex=%7Bm+%3D+%5Clfloor+n%2F6+%5Crfloor%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m = &#92;lfloor n/6 &#92;rfloor}' title='{m = &#92;lfloor n/6 &#92;rfloor}' class='latex' /> and program a choice over all <img src='http://s0.wp.com/latex.php?latex=%7Bj+%5Cleq+m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j &#92;leq m}' title='{j &#92;leq m}' class='latex' /> as before, this time keeping only the <img src='http://s0.wp.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' /> for which <img src='http://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> is prime. From each <img src='http://s0.wp.com/latex.php?latex=%7Bq_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q_j}' title='{q_j}' class='latex' /> we program a DFA <img src='http://s0.wp.com/latex.php?latex=%7BM_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M_j}' title='{M_j}' class='latex' /> that accepts a string <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> if and only if it contains exactly <img src='http://s0.wp.com/latex.php?latex=%7Bj%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j}' title='{j}' class='latex' /> copies of <img src='http://s0.wp.com/latex.php?latex=%7Bu%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{u}' title='{u}' class='latex' />. This resembles the <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> case, but is different because there is no overlap in the strings accepted by the respective <img src='http://s0.wp.com/latex.php?latex=%7BM_j%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M_j}' title='{M_j}' class='latex' />. So we just count the numbers of length-<img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> strings accepted by each and add them up. </p><p>
This is not a hugely important application. We selected it to show that there are counting problems that might be tricky to solve without the FSA method. This and other examples may be useful.</p><p><p><H2> What Else Can Be Counted? </H2></p><p><p>
Note that even though the decision problem <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B2SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{2SAT}}' title='{&#92;mathsf{2SAT}}' class='latex' /> is in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />, the counting problem <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%232SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#2SAT}}' title='{&#92;mathsf{&#92;#2SAT}}' class='latex' /> is still <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#P}}' title='{&#92;mathsf{&#92;#P}}' class='latex' />-complete. For an aside, <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B2SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{2SAT}}' title='{&#92;mathsf{2SAT}}' class='latex' /> is a major example in Mike&#8217;s quantum paper, but here we raise the question, what else can be counted? </p><p>
For instance, counting the number <img src='http://s0.wp.com/latex.php?latex=%7BN_m%28f%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f)}' title='{N_m(f)}' class='latex' /> of solutions to an <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-variable polynomial <img src='http://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{f}' title='{f}' class='latex' /> over <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathbb%7BZ%7D_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathbb{Z}_m}' title='{&#92;mathbb{Z}_m}' class='latex' /> is <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B%5C%23P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{&#92;#P}}' title='{&#92;mathsf{&#92;#P}}' class='latex' />-complete. It becomes <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7BO%281%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{O(1)}}' title='{n^{O(1)}}' class='latex' />-time, however, when <img src='http://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{f}' title='{f}' class='latex' /> has degree at most <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. This is when <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> is fixed. What if <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> is variable? We can also ask about computing <img src='http://s0.wp.com/latex.php?latex=%7BN_m%28f+-+j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f - j)}' title='{N_m(f - j)}' class='latex' /> for all <img src='http://s0.wp.com/latex.php?latex=%7Bj+%5Cin+%5Cmathbb%7BZ%7D_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{j &#92;in &#92;mathbb{Z}_m}' title='{j &#92;in &#92;mathbb{Z}_m}' class='latex' />, for the particular purpose of computing the <em>exponential sum</em></p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++Z_f+%3D+%5Csum_%7Bj%3D0%7D%5E%7Bm-1%7D+N_m%28f+-+j%29+%5Comega%5Ej+%3D+%5Csum_%7Bx+%5Cin+%5Cmathbb%7BZ%7D_m%5En%7D+%5Comega%5E%7Bf%28x%29%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  Z_f = &#92;sum_{j=0}^{m-1} N_m(f - j) &#92;omega^j = &#92;sum_{x &#92;in &#92;mathbb{Z}_m^n} &#92;omega^{f(x)}, ' title='&#92;displaystyle  Z_f = &#92;sum_{j=0}^{m-1} N_m(f - j) &#92;omega^j = &#92;sum_{x &#92;in &#92;mathbb{Z}_m^n} &#92;omega^{f(x)}, ' class='latex' /></p><p>
where <img src='http://s0.wp.com/latex.php?latex=%7B%5Comega+%3D+%5Cexp%28%5Cfrac%7B2%5Cpi+i%7D%7Bm%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;omega = &#92;exp(&#92;frac{2&#92;pi i}{m})}' title='{&#92;omega = &#92;exp(&#92;frac{2&#92;pi i}{m})}' class='latex' />.</p><p>
Dick co-authored a <a href=\"http://arxiv.org/abs/1005.2632\">paper</a> recently with Jin-Yi Cai, Xi Chen, and Pinyan Lu, showing that when <img src='http://s0.wp.com/latex.php?latex=%7Bf%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{f}' title='{f}' class='latex' /> has degree at most <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />, <img src='http://s0.wp.com/latex.php?latex=%7BZ_f%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Z_f}' title='{Z_f}' class='latex' /> is computable in time polynomial in <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B%5Clog+m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;log m}' title='{&#92;log m}' class='latex' />. In particular this means that for <img src='http://s0.wp.com/latex.php?latex=%7Bm+%3D+2%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m = 2^r}' title='{m = 2^r}' class='latex' />, when we can represent the members of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathbb%7BZ%7D_m%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathbb{Z}_m}' title='{&#92;mathbb{Z}_m}' class='latex' /> by strings in <img src='http://s0.wp.com/latex.php?latex=%7B%5C%7B0%2C1%5C%7D%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{0,1&#92;}^r}' title='{&#92;{0,1&#92;}^r}' class='latex' />, the time to compute <img src='http://s0.wp.com/latex.php?latex=%7BZ_f%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Z_f}' title='{Z_f}' class='latex' /> is <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nr)}' title='{&#92;mathsf{poly}(nr)}' class='latex' />. </p><p>
A little thought shows that this suffices to compute any individual number <img src='http://s0.wp.com/latex.php?latex=%7BN_m%28f+-+j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f - j)}' title='{N_m(f - j)}' class='latex' /> in time <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nm%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nm)}' title='{&#92;mathsf{poly}(nm)}' class='latex' />, indeed by computing all of them. But if we just want one, and <img src='http://s0.wp.com/latex.php?latex=%7Bm+%3D+2%5Er%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m = 2^r}' title='{m = 2^r}' class='latex' />, can we do it in time <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nr)}' title='{&#92;mathsf{poly}(nr)}' class='latex' />? This is not obvious to me (Ken), and at least for now leaves the funny situation where we can compute in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28nr%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(nr)}' title='{&#92;mathsf{poly}(nr)}' class='latex' /> time the historically important <img src='http://s0.wp.com/latex.php?latex=%7BZ_f%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Z_f}' title='{Z_f}' class='latex' /> function which involves all the <img src='http://s0.wp.com/latex.php?latex=%7BN_m%28f+-+j%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N_m(f - j)}' title='{N_m(f - j)}' class='latex' /> values, but don&#8217;t see a way to compute any one of them in the same time.</p><p><p><H2> Open Problems </H2></p><p><p>
Whose originally proved efficient counting for deterministic FSA? We seem to not be able to track that down. Are there some cool applications? </p><p>
What is the answer to the last problem? Should <em>counting</em> receive more emphasis in texts at the level of Mike&#8217;s?</p><p>
I (Ken) add a story: I first met Mike when we shared a compartment of the train between Hamburg, Germany and Aarhus, Denmark, on the way to ICALP 1982.  I had just moved from algebraic combinatorics into complexity during my first year at Oxford, and naturally asked him what were the propsects for proving <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.  He replied &#8220;It will be proved &#8230; yes we will prove it,&#8221; and backed up his confidence by naming <a href=\"http://link.springer.com/article/10.1007%2FBF01744431\">some</a><a href=\"http://dl.acm.org/citation.cfm?id=808733\">results</a> and giving some ideas along lines that would later be called the &#8220;Sipser programme&#8221; of approach via circuit lower bounds.  (Did we mention that he also wrote with Ravi Boppana a bellwether <a href=\"https://www.cs.umd.edu/~gasarch/BLOGPAPERS/boppana_sipser.ps\">survey</a> on circuit complexity?)  I guess there wasn&#8217;t a time limit on his assertion&#8230;</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11490/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11490/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11490&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/04/05/counting-is-sometimes-easy/feed/") (slash:comments nil "11") (media:content ((url . "http://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/04/sipserdean.png?w=250") (medium . "image")) (media:title ((type . "html")) "SipserDean"))) (item nil (title nil "Wait Wait… Don’t Fool Me!") (link nil "http://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/") (comments nil "http://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/#comments") (pubDate nil "Tue, 01 Apr 2014 18:19:21 +0000") (dc:creator nil "Pip") (category nil "Ideas") (category nil "People") (category nil "April Fool") (category nil "Computation") (category nil "Faadosly Polir") (category nil "gravity waves") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11473") (description nil "It&#8217;s that time of year again Altered from NPR source. Faadosly Polir is back in contact with us. We have encountered him before, but this time he has company. He has teamed up with two well-known radio personalities to launch a quiz show about mathematics. Today Ken and I wish to talk about material for [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11473&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> It&#8217;s that time of year again </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/04/peterandcarlfool.jpg\"><img src=\"http://rjlipton.files.wordpress.com/2014/04/peterandcarlfool.jpg?w=240&#038;h=180\" alt=\"peterandcarlFool\" width=\"240\" height=\"180\" class=\"alignright  wp-image-11474\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Altered from NPR <a href=\"http://www.npr.org/programs/waitwait/about.html\">source</a>.<br /></FONT></td></table><p>
Faadosly Polir is back in contact with us. We have <a href=\"http://rjlipton.wordpress.com/2009/04/01/a-new-factoring-algorithm/\">encountered</a><a href=\"http://rjlipton.wordpress.com/2010/03/31/april-fool/\">him</a><a href=\"http://rjlipton.wordpress.com/2013/04/01/interstellar-quantum-computation/\">before</a>, but this time he has company. He has teamed up with two well-known radio personalities to launch a quiz show about mathematics.</p><p>
Today Ken and I wish to talk about material for the show that Faadosly has sent us.<br /><span id=\"more-11473\"></span></p><p>
The draft he sent has the subtitle, &#8220;Strange Facts About Mathematics.&#8221; The material is not only about strange facts, but is strange in itself. Many of the &#8220;facts&#8221; are false. Everyone&#8217;s name is replaced by an anagram. Decoding the name to a true person helps you, but the fact can still be false. His co-authors on the scripts are named <b>Pearl Gates</b> and <b>Slack Laser</b>. </p><p>
Apparently the <a href=\"http://en.wikipedia.org/wiki/Wait_Wait..._Don't_Tell_Me!#Bluff_the_Listener\">idea</a> is that the quiz contestant hears three &#8220;facts&#8221; and has to say which one is true. The problem is that their math items are not arranged that way, but rather jumbled all together. The proportion of true ones seems to be more like 1/2 than 1/3. Perhaps it is harder to generate true ones that seem false than false ones that are plausible, so they figure they can do more of the latter later? Anyway, they are allowing us to share some with you.</p><p><p><H2> Some Strange Facts? </H2></p><p><p>
Here is a sampler from their draft&#8212;a mix of true stories and &#8220;fools.&#8221; Count a &#8220;fool&#8221; if either the personal description or the mathematical &#8220;fact&#8221; is false, or both.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Hydra Dye Frog</b>, while well known for his brilliant mathematics in number theory and analysis, once wrote a seminal paper on genetics. The issue was whether a dominant character should show a tendency to spread over a whole population; or put another way would all recessive characters tend to die out. Assuming a reasonable random model of mating, he showed that dominant genes would not force out recessive ones. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Gail Kali</b> is a mathematician from Chennai, India. Like her countryman Srinivasa Ramanujan, she credits a Hindu goddess for her mathematical insights&#8212;of course in her case the goddess Kali. In a dream Kali told her that every generalized Platonic solid with central symmetry in <img src='http://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' />-dimensional space has at least <img src='http://s0.wp.com/latex.php?latex=%7B3%5EN+-+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3^N - 1}' title='{3^N - 1}' class='latex' /> lower-dimensional faces, including its vertices.  Unfortunately, Gail woke up before Kali got beyond the all-triangles cases in the proof. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Rich-Cal Fried Sugars</b> was another great mathematician known for many results in number theory. But in his lifetime he was famous for helping solve one of the great mysteries of his time. Astronomers were tracking the position of Ceres, a huge asteroid, and they lost it owing to the glare of the sun. He famously predicted the path of where it would be, and on New Year&#8217;s Eve astronomers found it. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet}' title='{&#92;bullet}' class='latex' /><b>One-Ale Hurdler</b> proved that there was no way to route one-way traffic touring his whole city without causing a snarl. Even before his rule that T-junctions were bad news, he discovered that the bridges made it impossible. This problem founded an entire big branch of mathematics.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet}' title='{&#92;bullet}' class='latex' /><b>One-Cat Tree</b> proved that a relativistic smoothing of the Navier-Stokes equations allows infinite concentration of energy in finite time, because of its ability to simulate universal computation. Running this in reverse, it follows from the quantum complementarity of energy and time that the Big Bang did a lot of computation in its brief timespan. The computational results can now be read off from the pattern of gravity waves in the cosmic microwave background. At over a trillion times the concentrated power of the Large Hadron Collider, the Big Bang Computer represents almost a billion times the processing capacity of Google, whose data-mining efforts to read off long numerical calculations from it are underway. Thus we have it: the digits of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi}' title='{&#92;pi}' class='latex' /> in the sky.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Wes Gromit</b> is not related to the famous British star of animated films, but his father has composed many movie scores. In disjoint work with One-Cat Tree and <b>Gene Bern</b>, he proved the existence of an infinite arithmetical progression with exactly two prime numbers in it. Although married with five children, he was declared a bachelor by Queen Elizabeth II in 2012.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Annual Trig</b> was a mathematician who along with a colleague introduced modulo wrap-around computation to cryptography. They actually used it modulo six, but the ability to wrap was essential to make their system work. They were working on an analog system to scramble telephone calls. In their system there were six bands that had to be moved around, and they found that by doing certain arithmetic operations modulo six they had more security.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Town Falconer</b> proved that there is a language in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> whose complement does not have an interactive protocol. This flies in the face of there being an oracle constructed by <b>Amish Raid</b> that gives every language in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' /> such a protocol, so that Falconer and <b>Semi Spiker</b> are credited with proving the only truly natural non-relativizing result in complexity.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Joint Who Tolled</b> was a mathematician famous for work in analysis and related areas. He was a doubter of the Riemann Hypothesis (RH) throughout his life. There are claims&#8212;but who can tell&#8212;that he might have changed his mind if he knew some of the modern computations that show RH holding for a huge number of zeroes. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Glacial Warmish</b> is a complexity theorist who is interested in Kolmogorov Complexity, among other things. One of his main results is a proof that this theory gives a natural construction of a set that is undecidable, but is weaker than the Halting problem. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /><b>Glib Tales</b> co-wrote a paper proving what until recently was the fastest known way to flip pancakes in a stack so that the larger ones end up below smaller ones. Instead of opening a pancake business he founded a company which became rich enough to sponsor him in a match against the world chess champion. However, he got checkmated in nine moves. The paper still earned him an Erd&#337;s Number of 4.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet}' title='{&#92;bullet}' class='latex' /><b>Sonata Consort</b> proved that quantum computers can solve <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete problems. Although his algorithm is &#8220;galactic&#8221; in worst case, his ideas inspired a Vancouver startup company to build a quantum computer that solves <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete problems in many cases, perhaps even without needing anything &#8220;quantum&#8221; at all. As this company&#8217;s most valuable consultant, he is paid in a quantum-money scheme of his own devising. </p><p><p><H2> Open Problems </H2></p><p><p>
Which ones are the &#8220;fools&#8221;? Try not to be fooled today. As a hint, the fools have something in common&#8230;</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11473/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11473/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11473&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/04/01/wait-wait-dont-fool-me/feed/") (slash:comments nil "3") (media:content ((url . "http://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/04/peterandcarlfool.jpg?w=240") (medium . "image")) (media:title ((type . "html")) "peterandcarlFool"))) (item nil (title nil "A Matchless Result") (link nil "http://rjlipton.wordpress.com/2014/03/28/a-matchless-result/") (comments nil "http://rjlipton.wordpress.com/2014/03/28/a-matchless-result/#comments") (pubDate nil "Fri, 28 Mar 2014 15:49:08 +0000") (dc:creator nil "Pip") (category nil "Oldies") (category nil "Proofs") (category nil "Results") (category nil "Algorithms") (category nil "complexity") (category nil "depth-first search") (category nil "graphs") (category nil "matchings") (category nil "Silvio Micali") (category nil "Vijay Vazirani") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11449") (description nil "A famous algorithm, a new paper, a full correctness proof Vijay Vazirani is one of the world experts on algorithmic theory, and is especially known for his masterful book on approximation algorithms. Among many results in computational complexity, two have been Wikified: his theorem with Les Valiant on unique SAT, and the subsequent generalized Isolation [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11449&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> A famous algorithm, a new paper, a full correctness proof </em><br /><font color=\"”#000000?\"></p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/vijaygatech.jpg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/vijaygatech.jpg?w=208&#038;h=300\" alt=\"VijayGatech\"   class=\"alignright size-medium wp-image-11450\" /></a></p><p>
Vijay Vazirani is one of the world experts on algorithmic theory, and is especially known for his masterful <a href=\"http://www.amazon.com/Approximation-Algorithms-Vijay-V-Vazirani/dp/3540653678\">book</a> on approximation algorithms. Among many results in computational complexity, two have been Wikified: his <a href=\"http://en.wikipedia.org/wiki/Valiant-Vazirani_theorem\">theorem</a> with Les Valiant on unique SAT, and the subsequent generalized <a href=\"http://en.wikipedia.org/wiki/Isolation_lemma\">Isolation Lemma</a> with Ketan Mulmuley and his brother Umesh Vazirani. Lately his focus has been more on computational aspects of auctions, economic systems, and game theory.</p><p>
Today Ken and I wish to discuss a recent paper by Vijay on matching.<br /><span id=\"more-11449\"></span></p><p>
His paper is quite unique&#8212;is &#8220;quite&#8221; redundant?&#8212;well it is an isolated case of a top researcher taking the time and energy to explain the correctness of one of his famous algorithms, originally in joint work with Silvio Micali. As our field matures we should see more of this.</p><p>
Given an undirected graph <img src='http://s0.wp.com/latex.php?latex=%7BG%3D%28V%2CE%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{G=(V,E)}' title='{G=(V,E)}' class='latex' /> a <a href=\"http://en.wikipedia.org/wiki/Matching_(graph_theory)\">matching</a>, of course, is a set of pairwise non-adjacent edges: no two edges share a common vertex. A maximum matching is a matching that contains the largest possible number of edges. If <img src='http://s0.wp.com/latex.php?latex=%7B%7CV%7C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{|V|}' title='{|V|}' class='latex' /> is even then a matching with <img src='http://s0.wp.com/latex.php?latex=%7B%7CV%7C%2F2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{|V|/2}' title='{|V|/2}' class='latex' /> edges is <em>perfect</em>. The notorious Petersen graph</p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/match.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/match.png?w=600\" alt=\"match\"   class=\"aligncenter size-full wp-image-11451\" /></a></p><p>
has six different perfect matchings: the five &#8220;spokes&#8221; and others using just one spoke. Although matchings are often associated with bipartite graphs, it is important to note that the Petersen graph is not bipartite. This is important since the matching algorithm we will discuss works for general graphs, not just bipartite graphs. </p><p><H2> The Importance Of Matching </H2></p><p><p>
Finding a maximum matching is one of the foundational problems at the intersection of graph theory and algorithmic theory. The reason for this is: </p><ul><li><i>The problem is useful in practice</i>. Unlike many problems that are sometimes studied in theory, people really would like to be able to find matchings of general graphs. See <a href=\"http://www.cs.odu.edu/~mhalappa/matching/applications.html\">this</a> for a detailed list.</p><li><i>The problem is basic to the theory of graphs</i>. L&aacute;szl&oacute; Lov&aacute;sz and Michael Plummer wrote an entire book called <a href=\"http://www.amazon.com/Matching-Theory-AMS-Chelsea-Publishing/dp/0821847597\">Matching Theory</a> on&#8212;you guessed right&#8212;matchings. They shared the Niveau Prize of the Hungarian Academy of Sciences for this book in 1991. We especially like the Amazon review of the book:</p><blockquote><p>
The subject has obviously advanced a lot since the book was published, but the overview provided is still unmatched.
</p></blockquote><p>
Cool pun.</p><p><li><i>The problem is basic to the theory of algorithms</i>. Euclid may have the first non-trivial algorithm, his algorithm for finding the gcd of two numbers, but algorithms for matching started over fifty years ago. This is not the place to trace out the long and complex history of who did what algorithm for finding matchings. Suffice it to say that much of the theory of algorithms can be traced to the history of matching algorithms: various tricks and methods that are used through computing often first appeared in matching algorithms. Andras Frank has written a wonderful <a href=\"http://www.cs.elte.hu/egres/tr/egres-04-14.pdf\">piece</a> called <i>On Kuhn&#8217;s Hungarian Method&#8212;A tribute from Hungary</i> about the bipartite case&#8212;see it for some interesting history.
</ul><p>
Here is a picture of some of the applications of matching algorithms.</p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/apps.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/apps.png?w=550&#038;h=377\" alt=\"apps\" width=\"550\" height=\"377\" class=\"aligncenter wp-image-11452\" /></a></p><p>
Let&#8217;s turn to look at Vijay&#8217;s new paper.</p><p><p><H2> The Paper&#8217;s Tracks </H2></p><p><p>
Actually we need to first look at the original paper called <i>An <img src='http://s0.wp.com/latex.php?latex=%7BO%28%5Csqrt%7B%7CV%7C%7D%7CE%7C%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(&#92;sqrt{|V|}|E|)}' title='{O(&#92;sqrt{|V|}|E|)}' class='latex' /> algoithm for finding maximum matching in general graphs</i> by Silvio Micali and Vijay Vazirani. It was <a href=\"http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=4567800\">published</a> in the 21st Annual Symposium on Foundations of Computer Science in 1980. </p><p>
We will call this paper the MV paper, and its algorithm the MV algorithm. Note the running time is <img src='http://s0.wp.com/latex.php?latex=%7BO%28m%5Csqrt%7Bn%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(m&#92;sqrt{n})}' title='{O(m&#92;sqrt{n})}' class='latex' /> using &#8220;modern&#8221; internationally agreed-upon notation: we use <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> always to denote the number of vertices and <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> the number of edges. Paul Halmos was always careful about <a href=\"http://rjlipton.wordpress.com/2009/03/30/halmos-non-standard-analysis-and-names/\">notation</a>, and once said that his worst nightmare was that someone would type 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Clim_%7B%5Cepsilon+%5Crightarrow+%5Cinfty%7D+n_%7B%5Cepsilon%7D+%3D+0.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;lim_{&#92;epsilon &#92;rightarrow &#92;infty} n_{&#92;epsilon} = 0. ' title='&#92;displaystyle  &#92;lim_{&#92;epsilon &#92;rightarrow &#92;infty} n_{&#92;epsilon} = 0. ' class='latex' /></p><p>
The title of Vijay&#8217;s original paper was created before these agreements, so it is understandable that they used the &#8220;old&#8221; style notation in the title.  It is also less prone to the problem that if you write <img src='http://s0.wp.com/latex.php?latex=%7BO%28%5Csqrt%7Bn%7Dm%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(&#92;sqrt{n}m)}' title='{O(&#92;sqrt{n}m)}' class='latex' /> it may be hard to see that the square-root sign does not also cover the <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' />.</p><p><p>
This paper presented the MV algorithm with the given running time. The major advance was that it efficiently found a maximum matching in general graphs. There is an interesting cliff that happens in the theory of algorithms for finding maximum matchings. Bipartite graphs are just much easier for matching algorithms. Of course they are easier for many other algorithms: it is trivial to find a 2-coloring of a bipartite graph, but NP-hard to find a 3-colring in a general graph. One of the achievements of the MV paper is that everything works for general graphs. </p><p>
The new <a href=\"http://www.cc.gatech.edu/~vazirani/new-proof.pdf\">paper</a> is solely authored by Vijay. It has several goals, but the main one is to give a clear but full proof of the correctness of the MV algorithm. The algorithm remains the same, but the correctness proof is new. The previous proof had a flawed case analysis. The new proof avails itself of information that the previous proof bypassed, to make the analysis tighter and more manageable.</p><p>
We will not give the whole proof, but we will give an algorithmic idea highlighted also by Vijay, which has independent interest.</p><p><p><H2> Dueling Depth-First Searches </H2></p><p><p>
Let <img src='http://s0.wp.com/latex.php?latex=%7BG+%3D+%28V%2CE%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{G = (V,E)}' title='{G = (V,E)}' class='latex' /> be a directed acyclic graph whose vertices are in <em>layers</em> numbered <img src='http://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' /> (for sinks) through <img src='http://s0.wp.com/latex.php?latex=%7B%5Cell%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;ell}' title='{&#92;ell}' class='latex' /> (sources). Edges from any non-sink node go to nodes in lower layers, not necessarily the next layer, and every node has a path to a sink in layer <img src='http://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' />. Let <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> be any two non-sink nodes. By <a href=\"http://en.wikipedia.org/wiki/Menger's_theorem\">Menger&#8217;s Theorem</a>, either</p><ol><li>
there are vertex-disjoint paths from <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> to sinks <img src='http://s0.wp.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' />, or </p><li>
the set <img src='http://s0.wp.com/latex.php?latex=%7BB_%7Bg%2Cr%7D+%3D+%5C%7Bv%3A%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{B_{g,r} = &#92;{v:}' title='{B_{g,r} = &#92;{v:}' class='latex' /> every path from <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> to a sink goes through <img src='http://s0.wp.com/latex.php?latex=%7Bv%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v&#92;}}' title='{v&#92;}}' class='latex' /> is nonempty.
</ol><p>
In the latter case, let <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> be the element of <img src='http://s0.wp.com/latex.php?latex=%7BB_%7Bg%2Cr%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{B_{g,r}}' title='{B_{g,r}}' class='latex' /> in the highest layer. The algorithm must find this <em>highest bottleneck</em> node <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> within time proportional to the total number of edges in paths from <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> to <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' />. In the former case the algorithm must output paths to <img src='http://s0.wp.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' /> within time proportional to the total number of edges on all paths from <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> to either of <img src='http://s0.wp.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' />.</p><p>
The main puzzle is, how can we avoid searching past <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> and taking more than the time allowed to the latter case, if we don&#8217;t even know that it holds? For a single local search, this does indeed seem to be impossible. However, what Vijay called &#8220;Double Depth-First Search&#8221; (DDFS) solves it. Two search posses led by rangers Green and Red start respectively at <img src='http://s0.wp.com/latex.php?latex=%7Bg%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{g}' title='{g}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> and mark out &#8220;green&#8221; and &#8220;red&#8221; nodes and edges both. Neither may tread on the other&#8217;s ground. The rules are:</p><ul><li>
Whichever posse is on a higher-level node gets to move; if they are on the same level, Red moves. </p><li>
If one posse&#8217;s depth-first search comes to an already-marked empty node <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />&#8212;it could have been marked by either posse on an earlier visit&#8212;it goes back and tries another down-edge from its previous node. If there are no more down-edges, it backtracks up from its previous node as in normal depth-first search. </p><li> If the other posse is <i>on</i> node <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />, however, Red and Green fight a duel at 20 paces.
</ul><p><P></p><table style=\"margin:auto;\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/03/beattyghranger.jpg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/beattyghranger.jpg?w=300&#038;h=375\" alt=\"BeattyGHRanger\" width=\"300\" height=\"375\" class=\"aligncenter wp-image-11471\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">By permission of <a href=\"http://comicartfans.com/\">ComicArtFans</a> gallery owner Mark Geier: <a href=\"http://www.comicartfans.com/GalleryPiece.asp?Piece=1043183&amp;GSub=147878\">source</a> commissioned from artist <a href=\"http://www.terrybeatty.com/\">Terry Beatty</a><br /></FONT></td></tr></table><p>
The duel follows gentlemen&#8217;s rules. Red shoots in the air. Green takes the hint and backtracks looking for another node <img src='http://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{w}' title='{w}' class='latex' /> at the same level as <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> or lower. If Green succeeds, he sends a Western Union telegram to Red, who puts his marker on <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> and moves on. If Green gets stuck, then Red has to keep the same bargain. Red backtracks until he either finds another <img src='http://s0.wp.com/latex.php?latex=%7Bw%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{w}' title='{w}' class='latex' /> at the same level as <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> or lower, whereupon he telegrams Green to come back and claim <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> as his, or Red gets stuck too. If they are both stuck they both come back to <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />. Each claims just the respective (necessarily different) (sets of) edges he followed into <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' />, but they identify <img src='http://s0.wp.com/latex.php?latex=%7Bv%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{v}' title='{v}' class='latex' /> itself as the highest bottleneck <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> and share a bottle of hooch to celebrate.</p><p>
They can celebrate because they have met the time guarantee: Neither searched below <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' />, and all the edges they traversed in their wanderings had to be on paths to <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' />, since they did not find any open trails going elsewhere. And in the case where they reach separate destinations <img src='http://s0.wp.com/latex.php?latex=%7Bs_g%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_g}' title='{s_g}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bs_r%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s_r}' title='{s_r}' class='latex' />, any backtracking done by one posse because of hitting the other&#8217;s marked node is inductively on a path to the other&#8217;s goal, so at most the various routes between <img src='http://s0.wp.com/latex.php?latex=%7B%5C%7Bg%2Cr%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{g,r&#92;}}' title='{&#92;{g,r&#92;}}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B%5C%7Bs_g%2Cs_r%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{s_g,s_r&#92;}}' title='{&#92;{s_g,s_r&#92;}}' class='latex' /> get searched. </p><p>
Making a search posse on a lower level wait for the other ensures that nodes below a bottleneck don&#8217;t get searched.  Many other parts of the algorithm similarly rely on co-ordination with delicate timing considerations; this is just a taste of them.  The new paper also has many other figurative concepts, with illustrations.</p><p><H2> Open Problems </H2></p><p><p>
Do read Vijay&#8217;s paper. It is one of the clearest expositions of a graph algorithm&#8212;a model for others. Also the idea that Vijay went back to an ancient paper&#8212;over thirty years old&#8212;solely to write the definitive proof of its correctness is something we all should applaud.</p><p>
Of course the central problem in matching theory is still what is the best time for an algorithm that finds a maximum matching? Given the interest today in huge graphs that arise from social networks we will like a linear time algorithm. Is this possible? See <a href=\"http://www.or.uni-bonn.de/~hougardy/paper/23matching.pdf\">this</a> for some fast approximate algorithms.</p><p>
[added words \"on all paths\" to DDFS time requirement, name and word fixes and adds, permission for vintage Green Hornet/Lone Ranger artwork]</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11449/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11449/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11449&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/03/28/a-matchless-result/feed/") (slash:comments nil "8") (media:content ((url . "http://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/vijaygatech.jpg?w=209") (medium . "image")) (media:title ((type . "html")) "VijayGatech")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/match.png") (medium . "image")) (media:title ((type . "html")) "match")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/apps.png?w=334") (medium . "image")) (media:title ((type . "html")) "apps")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/beattyghranger.jpg?w=238") (medium . "image")) (media:title ((type . "html")) "BeattyGHRanger"))) (item nil (title nil "Rabin Meets Lagrange") (link nil "http://rjlipton.wordpress.com/2014/03/23/rabin-meets-lagrange/") (comments nil "http://rjlipton.wordpress.com/2014/03/23/rabin-meets-lagrange/#comments") (pubDate nil "Mon, 24 Mar 2014 00:54:56 +0000") (dc:creator nil "rjlipton") (category nil "History") (category nil "People") (category nil "Proofs") (category nil "four squares") (category nil "Lagrange Theorem") (category nil "secret computation") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11439") (description nil "On Rabin&#8217;s recent talks at Tech Jeffrey Shallit is a computational number theorist, with many wonderful results. He is also well known for his work as an advocate for civil liberties on the Internet, and also against intelligent design (ID). Indeed he was at one point slated to testify in the 2005 Dover case until [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11439&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> On Rabin&#8217;s recent talks at Tech </em><br /><font color=\"”#000000?\"></p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/unknown2.jpeg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/unknown2.jpeg?w=600\" alt=\"Unknown\"   class=\"alignright size-full wp-image-11441\" /></a></p><p>
Jeffrey Shallit is a computational number theorist, with many wonderful results. He is also well known for his work as an advocate for civil liberties on the Internet, and also against <a href=\"http://en.wikipedia.org/wiki/Intelligent_design\">intelligent design</a> (ID). Indeed he was at one point slated to testify in the 2005 Dover <a href=\"http://en.wikipedia.org/wiki/Kitzmiller_v._Dover\">case</a> until a stand-down by the ID side accomplished his purpose. Ken once used his <a href=\"http://www.talkreason.org/articles/eandsdembski.pdf\">survey</a> with Wesley Elsberry in a graduate seminar on cellular automata and various forms of complexity, not to say anything about ID, but just as a source of well-written definitions and relevant examples.</p><p>
Today I would like to talk about on Michael Rabin&#8217;s talks at Tech this week and their connection to Jeff.<br /><span id=\"more-11439\"></span></p><p>
Both of Rabin&#8217;s talks were great, no surprise. They were based on his recent <a href=\"http://cacm.acm.org/magazines/2014/2/171688-cryptography-miracles-secure-auctions-matching-problem-verification/fulltext\">paper</a> with Silvio Micali in February&#8217;s issue of the CACM. Rather than talk about details I will focus on one aspect that used a &#8220;trick&#8221; that I particularly liked, and thought I would share it with you. The trick is related to an old paper with Jeff.</p><p>
The paper <a href=\"http://dl.acm.org/citation.cfm?id=896095\">appears</a> on the ACM website with the first author named &#8220;J.O. Rabin.&#8221; Those are Jeff&#8217;s initials, with the &#8216;O&#8217; interestingly standing for &#8220;Outlaw.&#8221; Michael also has &#8216;O&#8217; as his middle initial, so it was an easier mistake to make. O well.</p><p><h2> Secret Straight-line Computations </h2><p><p>
Rabin showed, roughly, how to perform straight-line computation in a manner that keeps the values hidden from others. His computations allowed addition, multiplication, and comparison. The last is what I found quite interesting, since hiding ring operations is not too difficult, but hiding a highly non-linear operation like comparison seems quite different. Even multiplication while non-linear is bi-linear, and has a lot of linear structure that can be exploited. </p><p>
The basic approach is to use the <i>split value</i> representation of a number. A large prime <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is fixed, and all values <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> are represented by some pair <img src='http://s0.wp.com/latex.php?latex=%7B%28u%2Cv%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(u,v)}' title='{(u,v)}' class='latex' /> so that <img src='http://s0.wp.com/latex.php?latex=%7Bu+%2B+v+%3D+x+%5Cbmod+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{u + v = x &#92;bmod p}' title='{u + v = x &#92;bmod p}' class='latex' />. If the split is done randomly, then knowing one of the pair gives no information at all about the value of <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. This idea has been used before, of course, in many crypto protocols, often in multi-party protocols. Rabin&#8217;s work uses this method to make auctions secret. and does the same for electronic elections. See their paper for the details of what type of security he and Micali are able to achieve. </p><p>
Let&#8217;s go back to the comparison operation. In order to perform it using split pairs, Rabin needs to use Lagrange&#8217;s Four Square Theorem, which I state in a moment. The reason is that he can reduce comparison to the checking that some <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> is in a certain range, but he needs that the value of <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> not be too large. Lagrange&#8217;s theorem allows him to do that. </p><p><h2> Lagrange&#8217;s Theorem </h2><p><p>
Joseph Lagrange in 1770 proved the wonderful <a href=\"http://en.wikipedia.org/wiki/Lagrange's_four-square_theorem\">theorem</a>: </p><blockquote><p><b>Theorem: </b><em> Every natural number is the sum of four squares. </em></p></blockquote><p> Thus given <img src='http://s0.wp.com/latex.php?latex=%7Bx+%5Cge+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x &#92;ge 0}' title='{x &#92;ge 0}' class='latex' /> there are <img src='http://s0.wp.com/latex.php?latex=%7Ba%2Cb%2Cc%2Cd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a,b,c,d}' title='{a,b,c,d}' class='latex' /> so that
<p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++x+%3D+a%5E%7B2%7D+%2B+b%5E%7B2%7D+%2B+c%5E%7B2%7D+%2B+d%5E%7B2%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  x = a^{2} + b^{2} + c^{2} + d^{2}. ' title='&#92;displaystyle  x = a^{2} + b^{2} + c^{2} + d^{2}. ' class='latex' /></p><p> Note, some or all of <img src='http://s0.wp.com/latex.php?latex=%7Ba%2Cb%2Cc%2Cd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a,b,c,d}' title='{a,b,c,d}' class='latex' /> can be zero.</p><p>
There are two key ideas in Lagrange&#8217;s proof of his theorem. The first is that if <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> can both be written as a sum of four squares, then so can their product. </p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/euler.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/euler.png?w=300\" alt=\"euler\" width=\"300\" class=\"aligncenter  wp-image-11440\" /></a></p><p>
The second is that, therefore, one needs only to prove that every <b>prime number</b> can be written as a sum of four squares. But this can be done using properties of primes, and we are done.</p><p><h2> Effective Lagrange&#8217;s Theorem </h2><p><p>
Not quite. Over three hundred years later&#8212;1770 to 1985&#8212;the rules have changed. We now are interested not just in the existence of a representation of a number as the sum of four squares, but are interested in finding it efficiently. In this light Lagrange&#8217;s proof breaks down immediately, since he works on primes and therefore needs the factorization of <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> in order to find its representation as four squares. This means that his proof cannot directly lead to an efficient algorithm&#8212;one must avoid factorization.</p><p>
Enter our &#8216;O&#8217; duo. In their paper from 1985 they devised a randomized algorithm that runs in polynomial time and finds a four square representation of a number <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. They actually given several proofs of this statement, including additional results about other representation theorems that they can make effective. Jeff himself <a href=\"http://mathoverflow.net/questions/110239/is-there-an-algorithm-for-writing-a-number-as-a-sum-of-three-squares/110278#110278\">commented</a> in a MathOverflow <a href=\"http://mathoverflow.net/questions/110239/is-there-an-algorithm-for-writing-a-number-as-a-sum-of-three-squares/\">item</a> on possible extensions, and their paper itself was <a href=\"http://math.stackexchange.com/questions/483101/rabin-and-shallit-algorithm\">outlined</a> on StackExchange last September.</p><p>
One method uses the following neat idea: Suppose that you want to represent <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> as the sum of four squares. Pick random squares <img src='http://s0.wp.com/latex.php?latex=%7Br%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r^{2}}' title='{r^{2}}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bs%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s^{2}}' title='{s^{2}}' class='latex' /> and assume that
<p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%09x+%3D+r%5E%7B2%7D+%2B+s%5E%7B2%7D+%2B+p+%5C+%5C+%28%2A%29%2C++&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle 	x = r^{2} + s^{2} + p &#92; &#92; (*),  ' title='&#92;displaystyle 	x = r^{2} + s^{2} + p &#92; &#92; (*),  ' class='latex' /></p><p> where <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is a prime that is congruent to <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> modulo <img src='http://s0.wp.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' />. The key is that such primes are always the sum of two squares. So they build a subroutine that can solve this problem in randomized polynomial time: they have a polynomial time procedure to find such a representation of <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> provided it is a prime. As usual the procedure could be lucky and still work if <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is composite. But if the procedure fails they pick new <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bs%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{s}' title='{s}' class='latex' /> and try again. A deep and amazing theorem of Yuri Linnik shows that every <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> has many representations of the form (*). This leads to the main result.</p><p><h2> A Weak Lagrange Theorem </h2><p><p>
Suppose that we want to write <img src='http://s0.wp.com/latex.php?latex=%7Bx%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x&gt;0}' title='{x&gt;0}' class='latex' /> as the sum of a few squares, but perhaps more than four. The &#8216;few&#8217; must be small because it affects the cost of other computations, and also we want finding the few to be efficient. We can use the Rabin-Shallit method which is more than fast enough. But there is a very simple direct method that I thought I would share.</p><p>
Let&#8217;s suppose that <img src='http://s0.wp.com/latex.php?latex=%7Bx%3E0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x&gt;0}' title='{x&gt;0}' class='latex' /> and apply the &#8220;greedy&#8221; method&#8212;it is always a good idea to try the simplest ideas first.</p><p>
Set <img src='http://s0.wp.com/latex.php?latex=%7Bk%3D%5Clfloor+%5Csqrt%7Bx%7D+%5Crfloor%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k=&#92;lfloor &#92;sqrt{x} &#92;rfloor}' title='{k=&#92;lfloor &#92;sqrt{x} &#92;rfloor}' class='latex' />. Let <img src='http://s0.wp.com/latex.php?latex=%7By+%3D+x-k%5E%7B2%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y = x-k^{2}}' title='{y = x-k^{2}}' class='latex' />. Then
<p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++0+%5Cle+y+%5Cle+x-k%5E%7B2%7D+%5Cle+x+-+%28%5Csqrt%7Bx%7D-1%29%5E%7B2%7D+%3D+2%5Csqrt%7Bx%7D%2B1.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  0 &#92;le y &#92;le x-k^{2} &#92;le x - (&#92;sqrt{x}-1)^{2} = 2&#92;sqrt{x}+1. ' title='&#92;displaystyle  0 &#92;le y &#92;le x-k^{2} &#92;le x - (&#92;sqrt{x}-1)^{2} = 2&#92;sqrt{x}+1. ' class='latex' /></p><p> Then repeat this on <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> until it is small enough to do by table lookup. The number of iterations is bounded by a double logarithm in <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. So this yields an expression for <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> as a sum of at most <img src='http://s0.wp.com/latex.php?latex=%7B%5Clog+%5Clog+x%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;log &#92;log x}' title='{&#92;log &#92;log x}' class='latex' /> squares. For the range used in Rabin&#8217;s applications this value is seven rather than four. </p><p><h2> Open Problems </h2><p><p>
I like the weak effective Lagrange Theorem. If anyone knows a reference for it I would like to know. Perhaps it can be used in some other algorithms because it is extremely fast. For an <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-bit number it finds the representation in time <img src='http://s0.wp.com/latex.php?latex=%7BO%28M%28n%29%5Clog+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(M(n)&#92;log n)}' title='{O(M(n)&#92;log n)}' class='latex' /> where <img src='http://s0.wp.com/latex.php?latex=%7BM%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{M(n)}' title='{M(n)}' class='latex' /> is the time to perform multiplication, while Rabin-Shallit uses <img src='http://s0.wp.com/latex.php?latex=%7BO%28M%28n%29%28%5Clog+n%29%5E%7B2%7D%5Clog%5Clog+n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(M(n)(&#92;log n)^{2}&#92;log&#92;log n)}' title='{O(M(n)(&#92;log n)^{2}&#92;log&#92;log n)}' class='latex' />.</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11439/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11439/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11439&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/03/23/rabin-meets-lagrange/feed/") (slash:comments nil "0") (media:content ((url . "http://1.gravatar.com/avatar/afaa664a052777146630095c596117b2?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "lipton")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/unknown2.jpeg") (medium . "image")) (media:title ((type . "html")) "Unknown")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/euler.png") (medium . "image")) (media:title ((type . "html")) "euler"))) (item nil (title nil "The Power Of ACC") (link nil "http://rjlipton.wordpress.com/2014/03/20/the-power-of-acc/") (comments nil "http://rjlipton.wordpress.com/2014/03/20/the-power-of-acc/#comments") (pubDate nil "Thu, 20 Mar 2014 21:40:25 +0000") (dc:creator nil "Pip") (category nil "All Posts") (category nil "Ideas") (category nil "ACC") (category nil "boolean") (category nil "circuits") (category nil "complexity") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11431") (description nil "Euler&#8217;s back-door pass to Gauss sinks a bucket ACC stands for the Atlantic Coast Conference, which is an athletic organization that contains Georgia Tech and fourteen other colleges. In basketball, the top several teams in the ACC qualified for the NCAA championship tournament, which started today. We call the NCAA tournament &#8220;March Madness&#8221; because the [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11431&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Euler&#8217;s back-door pass to Gauss sinks a bucket </em><br /><font color=\"”#000000?\"></p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/acc-basketball-hand-640_20111109111225_640_480.jpg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/acc-basketball-hand-640_20111109111225_640_480.jpg?w=200&#038;h=150\" alt=\"ACC-basketball-hand-640_20111109111225_640_480\" width=\"200\" height=\"150\" class=\"alignright wp-image-11432\" /></a></p><p>
ACC stands for the Atlantic Coast Conference, which is an athletic organization that contains Georgia Tech and fourteen other colleges. In basketball, the top several teams in the ACC qualified for the NCAA championship tournament, which started today. We call the NCAA tournament &#8220;March Madness&#8221; because the opening rounds have games being shown on national TV seemingly every hour of every day, and often some spectacular upsets happen. Indeed Harvard has just beaten a favored University of Cincinnati team. </p><p>
Today I want talk about another ACC: our own complexity class.<span id=\"more-11431\"></span></p><p>
Recall that <a href=\"http://en.wikipedia.org/wiki/ACC0\">ACC</a>, as a complexity class, is the class of Boolean functions computed by boolean circuits of constant depth and polynomial size, and the gates include <i>modular</i> gates that can count the number of <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> inputs modulo a fixed constant. This class is quite mysterious. It could be very powerful, yet we do not even know if it contains the majority function.</p><p><p>
Alas the ACC qualifiers for the men&#8217;s tournament did not contain Georgia Tech, for our men&#8217;s team had a losing record this year.  Our women&#8217;s team, however, played well enough to receive an at-large entry into the NCAA Women&#8217;s championship, which is staggered two days after the men and so begins Saturday.  No Buffalo team made either.  The tournaments run through April 7 and 8.  Go Yellow Jackets.</p><p><H2> The Problem </H2></p><p><p>
Suppose you have a number <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' />. Now I give you an <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-bit prime number <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and ask that you check whether <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a quadratic residue modulo <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />. Recall that means that there is a <img src='http://s0.wp.com/latex.php?latex=%7Bb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{b}' title='{b}' class='latex' /> such that 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++a+%5Cequiv+b%5E%7B2%7D+%5Cbmod+p.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  a &#92;equiv b^{2} &#92;bmod p. ' title='&#92;displaystyle  a &#92;equiv b^{2} &#92;bmod p. ' class='latex' /></p><p>
This is the problem we are interested in solving with an ACC circuit. Note that it is a <a href=\"http://en.wikipedia.org/wiki/Promise_problem\">promise problem</a>&#8212;we only ask that your computation works when the input number <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is a prime.</p><p><p><H2> An Approach </H2></p><p>
An obvious idea is to use the famous <a href=\"http://en.wikipedia.org/wiki/Euler's_criterion\">Euler criterion</a>, which says that <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a quadratic residue if and only if 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++a%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D+%5Cequiv+1+%5Cbmod+p.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  a^{&#92;frac{p-1}{2}} &#92;equiv 1 &#92;bmod p. ' title='&#92;displaystyle  a^{&#92;frac{p-1}{2}} &#92;equiv 1 &#92;bmod p. ' class='latex' /></p><p>
Thus we need only raise <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> to a power by repeated squaring and so on. The trouble, of course, is that we do not know whether ACC can do the required repeated multiplication. </p><p><p><H2> Another Approach </H2></p><p><p>
Now let&#8217;s expressly state that <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is bounded in size by some constant. Still the Euler approach looks hopeless. But there is a deep theorem of number theory that comes to the rescue: <a href=\"http://en.wikipedia.org/wiki/Quadratic_reciprocity\">quadratic reciprocity</a>. Define the <a href=\"http://en.wikipedia.org/wiki/Legendre_symbol\">Legendre symbol</a></p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' title='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' class='latex' /></p><p>
as the value <img src='http://s0.wp.com/latex.php?latex=%7B+a%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D+%5Cbmod+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{ a^{&#92;frac{p-1}{2}} &#92;bmod p}' title='{ a^{&#92;frac{p-1}{2}} &#92;bmod p}' class='latex' /> where <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is a prime. Note it is always <img src='http://s0.wp.com/latex.php?latex=%7B-1%2C0%2C%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{-1,0,+1}' title='{-1,0,+1}' class='latex' />: it is only <img src='http://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' /> when <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> divides <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' />. Thus our problem is to compute 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' title='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) ' class='latex' /></p><p>
for <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> an input and <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> bounded in size. </p><p>
This is in ACC. The key is we can use the deep quadratic reciprocity <a href=\"http://en.wikipedia.org/wiki/Quadratic_reciprocity\">theorem</a> which says that 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Bp%7D%7Bq%7D+%5Cright%29+%5Cleft%28+%5Cfrac%7Bq%7D%7Bp%7D+%5Cright%29+%3D+%28-1%29%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D%28-1%29%5E%7B%5Cfrac%7Bq-1%7D%7B2%7D%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{p}{q} &#92;right) &#92;left( &#92;frac{q}{p} &#92;right) = (-1)^{&#92;frac{p-1}{2}}(-1)^{&#92;frac{q-1}{2}}, ' title='&#92;displaystyle  &#92;left( &#92;frac{p}{q} &#92;right) &#92;left( &#92;frac{q}{p} &#92;right) = (-1)^{&#92;frac{p-1}{2}}(-1)^{&#92;frac{q-1}{2}}, ' class='latex' /></p><p>
where <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> are primes. The theorem was conjectured by Leonhard Euler and Adrien-Marie Legendre, but finally proved by Carl Gauss. He referred to it as &#8220;the fundamental theorem&#8221; and wrote:  </p><blockquote><p>
The fundamental theorem must certainly be regarded as one of the most elegant of its type.
</p></blockquote><p>
So how do we proceed? Suppose first that the constant <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a prime. Then we know by reciprocity that 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+%5Cleft%28+%5Cfrac%7Bp%7D%7Ba%7D+%5Cright%29+%3D+%28-1%29%5E%7B%5Cfrac%7Ba-1%7D%7B2%7D%7D%28-1%29%5E%7B%5Cfrac%7Bp-1%7D%7B2%7D%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{p}{a} &#92;right) = (-1)^{&#92;frac{a-1}{2}}(-1)^{&#92;frac{p-1}{2}}. ' title='&#92;displaystyle  &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{p}{a} &#92;right) = (-1)^{&#92;frac{a-1}{2}}(-1)^{&#92;frac{p-1}{2}}. ' class='latex' /></p><p>
The right-hand side is easy to compute in ACC. To determine it we need only compute <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />&#8216;s residue modulo <img src='http://s0.wp.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' />. Since <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> is given in binary this is trivial. Thus, all reduces to the computation of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cleft%28+%5Cfrac%7Bp%7D%7Ba%7D+%5Cright%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;left( &#92;frac{p}{a} &#92;right)}' title='{&#92;left( &#92;frac{p}{a} &#92;right)}' class='latex' />. The key is that the Legendre symbol only depends on the value of <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> modulo <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' />. Since we can do this in ACC we are done for the case when <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is a prime.</p><p>
When <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is composite we use one simple fact about the Legendre symbol that follows directly from its definition. 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cleft%28+%5Cfrac%7Bab%7D%7Bp%7D+%5Cright%29+%3D+%5Cleft%28+%5Cfrac%7Ba%7D%7Bp%7D+%5Cright%29+%5Cleft%28+%5Cfrac%7Bb%7D%7Bp%7D+%5Cright%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;left( &#92;frac{ab}{p} &#92;right) = &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{b}{p} &#92;right). ' title='&#92;displaystyle  &#92;left( &#92;frac{ab}{p} &#92;right) = &#92;left( &#92;frac{a}{p} &#92;right) &#92;left( &#92;frac{b}{p} &#92;right). ' class='latex' /></p><p>
Thus we can use the case where <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is prime multiple times. </p><p><p><H2> Open Problems </H2></p><p><p>
The Legendre symbol for bounded <img src='http://s0.wp.com/latex.php?latex=%7Ba%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a}' title='{a}' class='latex' /> is thus in ACC&#8212;the complexity class, not the conference. The rationale for this discussion is two-fold. One it shows that obvious approaches to a problem may sometimes be avoided by deep mathematics. Is this possible to do the same for other problems that we care about? The permanent, for example? Another rationale is the perennially important open problem: what can ACC actually compute? It may be hard to resolve the majority function, but perhaps other functions can be shown to be in ACC. Good luck thinking about this.</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11431/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11431/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11431&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/03/20/the-power-of-acc/feed/") (slash:comments nil "10") (media:content ((url . "http://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/acc-basketball-hand-640_20111109111225_640_480.jpg?w=300") (medium . "image")) (media:title ((type . "html")) "ACC-basketball-hand-640_20111109111225_640_480"))) (item nil (title nil "Happy St. Patrick’s Day 2014") (link nil "http://rjlipton.wordpress.com/2014/03/17/happy-st-patricks-day-2014/") (comments nil "http://rjlipton.wordpress.com/2014/03/17/happy-st-patricks-day-2014/#comments") (pubDate nil "Mon, 17 Mar 2014 12:03:05 +0000") (dc:creator nil "rjlipton") (category nil "Ideas") (category nil "News") (category nil "People") (category nil "Proofs") (category nil "Leprechaun") (category nil "P=NP") (category nil "simulation hypothesis") (category nil "St. Patrick's Day") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11394") (description nil "A shocking story from our friendly Leprechaun Neil L. is not a computer scientist&#8212;he is a Leprechaun. He has visited me every year since I started writing GLL, always visiting on St. Patrick&#8217;s day. Today I want to report on what happened this year. Days ago I received a email from him&#8212;a first. It said: [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11394&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> A shocking story from our friendly Leprechaun </em><br /><font color=\"”#000000?\"><br /><font color=\"”#00D700\"></p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/unknown1.jpeg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/unknown1.jpeg?w=177&#038;h=186\" alt=\"Unknown\" width=\"177\" height=\"186\" class=\"alignright  wp-image-11397\" /></a></p><p>
Neil L. is not a computer scientist&#8212;he is a Leprechaun. He has visited me every year since I started writing GLL, always visiting on St. Patrick&#8217;s day.</p><p>
Today I want to report on what happened this year.<br /><span id=\"more-11394\"></span></p><p>
Days ago I received a email from him&#8212;a first. It said:</p><blockquote><p><FONT FACE=\"veranda, arial\"><br />
 If you agree to not catch me, I will be at your place at 12:01am Monday. Neil L.<br /></FONT></p></blockquote><p>
One <a href=\"http://rjlipton.wordpress.com/2011/03/17/happy-st-patricks-day-again-again/\">year</a> I did catch him, affording me three wishes. I thought I would get some of the secrets of the universe, but he outsmarted me. </p><p>
I replied back that yes I would stop trying to catch him. I got no reply. In any event I decided I would stay up late Sunday night and see if he would appear.</p><p>
Just after midnight I smelled a pungent odor, then saw a puff of green smoke, and there was Neil L. standing before me. His pipe in his mouth was putting out that green smoke, which has a strong but surprisingly pleasant smell. My dad was a pipe smoker when I was young, quitting later in life&#8212;of course his tobacco smoke was never green.</p><p>
Neil said, &#8220;Good day to you on this fine St. Patrick&#8217;s Day. I read your reply, quite clever.&#8221; I responded that I did not think I was being clever at all. Neil smiled, took another puff, and said &#8220;Come on&#8212;saying I will not <i>try</i> to catch you&#8212;come now.&#8221; He added that I must promise <i>not</i> to catch him. I nodded back yes, and he sat down on a chair across from where I was sitting. His short legs dangled off the floor.</p><p><h2> Neil&#8217;s Answer </h2><p><p>
We sat there for a moment in silence, then as I was about to speak, he interrupted and said, &#8220;I will answer ye any one question, no tricks, straight up.&#8221; I looked back surprised and figured that I had nothing to lose so I asked <em>the</em> question, </p><blockquote><p>
Is P=NP?
</p></blockquote><p>
Neil puffed away for quite a while and then said, &#8220;I appreciate your not trying to be tricky with your question. I could answer of course no, since the letters &#8216;P&#8217; and &#8216;NP&#8217; are different. But I will be straightforward with you. No teasing, no games today.&#8221; I was excited, perhaps I would finally know the answer. </p><p>
He added, &#8220;I could make you swear that you cannot repeat this to anyone, but I do not need to, for none will believe ye.&#8221; I said OK, so what is the answer? Neil smiled and said:</p><blockquote><p>
&#8220;We have not yet determined the answer. That&#8217;s the truth. No tricks. I swear as a Leprechaun, may you find all my gold coins if I lie.&#8221;
</p></blockquote><p>
I thought, what does that mean? <i>Not determined yet?</i> A mathematical statement is either true or it&#8217;s false. No tricks.</p><p><h2> Neil&#8217;s Explanation </h2><p><p>
I asked what did he mean by &#8220;not yet determined?&#8221; Either P=NP or P&ne;NP, I responded. Neil smiled and said that he would explain. He said:</p><blockquote><p>
&#8220;You live in a world that is really a simulation. We control it all.&#8221;
</p></blockquote><p>
I looked at him, thinking this was another trick. Neil registered my shock and added: &#8220;Yes it must be hard for you to believe, but it is true. How else can you explain a Leprechaun that appears and disappears.&#8221; With that he puffed some more on his pipe and laughed and added, &#8220;I told you no one will believe ye.&#8221;</p><p>
Okay I said, could he explain what he meant by &#8220;not yet determined&#8221;?  He nodded yes. &#8220;The simulation mostly runs itself quite well, but there are situations where it gets stuck and the committee of seven then step in and decide what it should do.&#8221;</p><p>
I asked what is the &#8216;committee of seven&#8217;? He answered, &#8220;It is a group of over fifty-seven wise ones who are tasked with maintaining the simulation and fixing any unexpected problems. We cannot be expected to have foreseen all possible situations, so they are the ones who decide things.&#8221; Another puff and more green smoke, and he continued, &#8220;Don&#8217;t even ask why it&#8217;s the committee of seven, it&#8217;s too long a story.&#8221;</p><p>
I finally laughed and said that this was his best visit ever&#8212;what a silly story. I told him that I did not believe a word of it. Neil looked at me and said he understood, yet he could give me some &#8220;proof.&#8221; I said that would be great.</p><p><h2> Neil&#8217;s Proof </h2><p><p>
Neil answered, &#8220;Look I know it is hard for ye to believe, but I will give ye examples of why it is true.&#8221; The first he gave is that in ancient times there were more miracles and strange occurrences, including demons and the like. Did I not agree? I said that that was the folklore but&#8230; He interrupted and said &#8220;Ay&#8212;that was when we first began to run the simulation; we were new at it and made mistakes. We are much better today. Much.&#8221;</p><p>
I started to say yes, nothing like that happens today, but Neil waved me off and said, &#8220;we don&#8217;t make errors but we still have fun&#8212;especially with your sports.&#8221; I gave him a cold stare, but he continued: &#8220;You are a fan of sailing, if I recall. What are the odds of coming back from 8&#8211;1 down in a best-of-9 series?&#8221; He was talking about the Oracle US team&#8217;s <a href=\"http://www.dailymail.co.uk/sport/othersports/article-2432966/Sir-Ben-Ainslies-Americas-Cup-win-greatest-sporting-comeback-time.html\">comeback</a> in last September&#8217;s America&#8217;s Cup final. I rounded the simple coin-flip answer: &#8220;About 250&#8211;1 against, more since they looked badly beaten.&#8221; Neil asked whether there had been anywhere near 250 final series since the America&#8217;s Cup began, and needed no answer from me as he puffed with a grin.</p><table style=\"margin:auto;\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/03/ainslietshirt.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/ainslietshirt.png?w=300\" alt=\"AinslieTshirt\" width=\"300\" class=\"aligncenter  wp-image-11403\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Commercial T-shirt <a href=\"http://stpatricksdaytee.com/view/1255850/ainslie-o-ainslie-irish-for-a-day-st-patrick-day-t-shirt\">source</a><br /></FONT></td></tr></table><p>&#8220;Do you mess with bookies?&#8221; I blurted out, then felt ashamed for incivility.  But Neil leaned forward with a hand gesture and hush for my attention: &#8220;The simulation gives us a budget of improbability, and by the Rule of Improbability we have only a tiny window to deviate. But we are free to choose which improbable events happen to maximize our fun, so long as we do not also violate the Rule of Indistinguishability.&#8221; Without even pausing for my query, he went on: &#8220;That Rule is the same one you use in defining <a href=\"http://en.wikipedia.org/wiki/Zero-knowledge_proof#Variants_of_zero-knowledge\">computational zero knowledge</a>&#8212;we can prove things to you, but it would take you too much effort to prove our tricks to a third party. To keep it, we put much effort into <em>not</em> messing with things. For instance our simulator had to work hard this weekend to calculate the true odds and allowances for Warren Buffett&#8217;s &#036;1,000,000,000 <a href=\"http://www.nytimes.com/2014/03/16/sports/ncaabasketball/mathematicians-are-hoping-their-calculations-add-up-to-the-perfect-bracket.html?_r=0\">Bracket Challenge</a>, but we&#8217;re all set for &#8220;March Madness&#8221; now.&#8221;</p><p>
I asked if they could mess with physics, and he told me about a third rule: &#8220;The Rule of Consistency is that we may not overturn any past experimental results once their confidence has gone beyond <a href=\"http://news.discovery.com/space/big-bang-theorist-told-of-gravitational-wave-discovery-video-140317.htm\">5 sigma</a>.&#8221; Of course humanity has only had the 5-sigma rule for declaring things like the Higgs Boson or primordial gravity waves to exist for a short time, so I asked what about physics in the past. Neil continued, &#8220;I know nothing about this, but there was a problem with something called beta-decay.&#8221; I jumped in and said: yes there is a surprising effect&#8212;it is one of few physical <a href=\"http://en.wikipedia.org/wiki/Weak_interaction\">effects</a> ever discovered that tells left from right. Neil added, &#8220;Yes that is it. Some fool made a mistake and caused that to happen. Once it got into the world the committee thought it was fun to have it. A kind of insider joke. Of course it meant we had to re-program the physics part of the simulator to compute using Dirac notation, long before Dirac invented it.&#8221;</p><p><h2> The Meta Question </h2><p><p>
I was still numb from the story&#8212;it could not be true? Yet. What he just said about &#8220;programming&#8221; made me realize, surely the laws of computability and complexity must apply to them too. Now I knew I had him, so I asked:</p><blockquote><p>
Surely P=NP must have an answer in your world&#8212;which your committee is subject to. What is the answer there?
</p></blockquote><p>
Neil answered calmly, &#8220;As I said, it is not yet determined.&#8221;</p><p>
I expostulated, &#8220;Not yet determined for <em>us</em> you said. But surely it is determined for <em>them</em>.&#8221;</p><p>
A little patronizingly Neil replied, &#8220;Nay me lad. By me honor, when I said it is not yet determined I spoke true. I did say there are over fifty-seven on the committee of seven. We cannot violate consistency amongst ourselves for a mathematical proposition.&#8221;</p><p>
I remembered from writing our recent simulation <a href=\"http://rjlipton.wordpress.com/2014/02/22/the-evil-genius/\">post</a> that people who live in simulations would write their own simulations that other people could live in, <em>ad-infinitum</em> all the way down. For Neil to be right it could be infinities all the way up too. Then I realized, &#8220;Ah&#8212;I see why you said &#8216;over fifty-seven&#8217; before: there&#8217;s you plus your committee of 7, then each of those is subject to a committee of 7, so <img src='http://s0.wp.com/latex.php?latex=%7B1+%2B+7+%2B+7%5E2+%3D+57%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1 + 7 + 7^2 = 57}' title='{1 + 7 + 7^2 = 57}' class='latex' /> and it goes on from there. But how can there be infinitely many leprechauns?&#8221;</p><p>
To my surprise he gave a pained start: &#8220;Ay, ye have catched me in a secret, and ye did not try to&#8212;it was me saying too much. So I must now tell ye exactly how many leprechauns we are, and it will prove to ye what I said about your mathematics.&#8221; I stood as he stood up as if to leave, and I saw he was really a little guy, only <img src='http://s0.wp.com/latex.php?latex=%7B1%2F12%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1/12}' title='{1/12}' class='latex' /> my size. Neil spoke once more as his pipe puffed mightily.</p><blockquote><p>
&#8220;We have other committees and hierarchies with other numbers, so our total is the sum of all the natural numbers <img src='http://s0.wp.com/latex.php?latex=%7B1+%2B+2+%2B+3+%2B+4+%2B+5+%2B+6+%2B+7+%2B+%5Ccdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{1 + 2 + 3 + 4 + 5 + 6 + 7 + &#92;cdots}' title='{1 + 2 + 3 + 4 + 5 + 6 + 7 + &#92;cdots}' class='latex' />&#8212;and the smoke will tell you what that is.&#8221;
</p></blockquote><p>
With a &#8220;pouf&#8221; he vanished, but once again his smoke stayed behind, and some of it knotted itself into what first looked like a snake until I recognized it was making the Greek letter zeta. Then I saw the <a href=\"http://www.nytimes.com/2014/02/04/science/in-the-end-it-all-adds-up-to.html\">value</a>, and I realized that choosing it must have caused endless committees endless mirth in their endless&#8212;but thereby finite&#8212;hierarchy:</p><p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle+%5Czeta%28-1%29+%3D+%5Cfrac%7B-1%7D%7B12%7D%5C%2C.&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle &#92;zeta(-1) = &#92;frac{-1}{12}&#92;,.' title='&#92;displaystyle &#92;zeta(-1) = &#92;frac{-1}{12}&#92;,.' class='latex' /></p><p>
I rushed to look this up in a book, the first to hand being a physics <a href=\"http://www.amazon.com/String-Cambridge-Monographs-Mathematical-Physics/dp/0521672279/ref=sr_1_1?ie=UTF8&amp;qid=1395007493&amp;sr=8-1&amp;keywords=polchinski#reader_0521672279\">book</a> on String Theory which I had just ordered from Amazon, and sure enough <a href=\"http://haacked.com/archive/2014/01/26/fun-with-infinite-sums/\">there it was</a>:</p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/polchinskiequation.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/polchinskiequation.png?w=600\" alt=\"PolchinskiEquation\"   class=\"aligncenter size-full wp-image-11395\" /></a></p><p><h2> Open Problems </h2><p><p>
Ken and I wish you a happy and safe St. Patrick&#8217;s Day. Do you believe a word of our Leprechaun, Neil? I do not. &#8220;Not determined yet&#8221;&#8212;that is ridiculous. It is silly, yet how can I distinguish <img src='http://s0.wp.com/latex.php?latex=%7B%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;dots}' title='{&#92;dots}' class='latex' /></p><p><p></font><br /><b>Update 3/18:</b><br /><font color=\"”#00D700\"><br />
We wrote and posted this before knowing about yesterday&#8217;s announced <a href=\"http://www.nytimes.com/2014/03/18/science/space/detection-of-waves-in-space-buttresses-landmark-theory-of-big-bang.html?_r=0\">discovery</a> of solid evidence for gravity waves and cosmic inflation at the Big Bang.  Where Neil L. is talking about &#8220;5-sigma&#8221; above I&#8217;ve linked this heartwarming <a href=\"http://news.discovery.com/space/big-bang-theorist-told-of-gravitational-wave-discovery-video-140317.htm\">video</a> of Andrei Linde getting the news from a collaborator on the discovering project, whose first words were, &#8220;It&#8217;s 5-sigma.&#8221;  As this St. Patty&#8217;s &#8220;big bang&#8221; is verified, let&#8217;s hope the leprechauns keep their word&#8230;</p><p>
I obtained two surprising data points for 2012 and 2013 yesterday which strengthen my own evidence <a href=\"http://www.cse.buffalo.edu/~regan/chess/fidelity/data/IPR2600reg4yr.jpg\">against</a> a different kind of &#8220;inflation&#8221; that almost all strong chess players are said to believe in.</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11394/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11394/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11394&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/03/17/happy-st-patricks-day-2014/feed/") (slash:comments nil "6") (media:content ((url . "http://1.gravatar.com/avatar/afaa664a052777146630095c596117b2?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "lipton")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/unknown1.jpeg") (medium . "image")) (media:title ((type . "html")) "Unknown")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/ainslietshirt.png") (medium . "image")) (media:title ((type . "html")) "AinslieTshirt")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/polchinskiequation.png") (medium . "image")) (media:title ((type . "html")) "PolchinskiEquation"))) (item nil (title nil "Could We Have Felt Evidence For SDP ≠ P?") (link nil "http://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/") (comments nil "http://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/#comments") (pubDate nil "Sat, 15 Mar 2014 15:58:02 +0000") (dc:creator nil "Pip") (category nil "All Posts") (category nil "History") (category nil "Ideas") (category nil "Open Problems") (category nil "P=NP") (category nil "People") (category nil "approximation") (category nil "complexity") (category nil "conjecture") (category nil "deterministic") (category nil "Khachiyan") (category nil "linear programming") (category nil "lower bounds") (category nil "Nash") (category nil "polynomial") (category nil "Scott Aaronson") (category nil "SDP's") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11375") (description nil "Evaluating mathematical beliefs Rutgers in memoriam source. Leonid Khachiyan in 1979 caused arguably the most sudden surprise to the West&#8217;s popular scientific understanding since the successful launch of Sputnik in 1957. His ellipsoid method gave the first algorithm for linear programming whose polynomial running time was verified. Thanks largely to Narendra Karmarkar it has been [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11375&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Evaluating mathematical beliefs </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/03/khachiyan.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/khachiyan.png?w=600\" alt=\"Khachiyan\"   class=\"aligncenter size-full wp-image-11379\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Rutgers in memoriam <a href=\"http://www.cs.rutgers.edu/Khachiyan/\">source</a>.<br /></FONT></td></table><p>
Leonid Khachiyan in 1979 caused arguably the most sudden surprise to the West&#8217;s popular scientific understanding since the successful launch of Sputnik in 1957. His <a href=\"http://en.wikipedia.org/wiki/Ellipsoid_method\">ellipsoid method</a> gave the first algorithm for linear programming whose polynomial running time was verified. Thanks largely to Narendra Karmarkar it has been superseded by faster <a href=\"http://en.wikipedia.org/wiki/Interior-point_method\">interior-point methods</a>, while older algorithms have since been noted to run in polynomial time, but the breakthrough and inspiration came from Khachiyan. Could something like it happen again? </p><p>
Today Ken and I want to ask whether recent argument over beliefs about <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%3DNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P=NP}}' title='{&#92;mathsf{P=NP}}' class='latex' />? can be evaluated in light of this shock.<br /><span id=\"more-11375\"></span></p><p>
Khachiyan&#8217;s &#8220;rocket&#8221; had actually left the hangar ten months before, in a January 1979 <em>Doklady Akademii Nauk</em> paper whose title translates into English as, &#8220;A polynomial algorithm for linear programming.&#8221; As <a href=\"http://lpsdp.files.wordpress.com/2011/10/ellipsoid-stories.pdf\">recounted</a> by Berkeley&#8217;s Eugene Lawler, it was sighted at a May 1979 meeting Lawler attended in Oberwohlfach, and after Peter G&aacute;cs and L&aacute;szl&oacute; Lov&aacute;sz supplied proofs missing in the paper, it was pronounced correct at a conference in Montreal. The discovery was picked up in October by <em>Science News</em>, and then by the magazine <em>Science</em>. An allusion by the latter to the NP-complete Traveling Salesman problem was moved to the headline of a Nov. 4 story in England&#8217;s Guardian newspaper, and reflected three days later in the New York Times&#8217;s front-page screamer, &#8220;A Soviet Discovery Rocks World of Mathematics.&#8221; </p><p>
Our point is not to say that linear programming being in <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> was a surprise. To those who knew the reality behind the headlines, it wasn&#8217;t. As Lawler relates, the great George Dantzig had tried to set Times reporter Malcolm Browne straight on this and points related to what LP&#8217;s can and (ostensibly) cannot solve. The simplex algorithm already solved the vast majority of <img src='http://s0.wp.com/latex.php?latex=%7Bn%5C%21%5Ctimes%5C%21n%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n&#92;!&#92;times&#92;!n}' title='{n&#92;!&#92;times&#92;!n}' class='latex' /> LP cases in <img src='http://s0.wp.com/latex.php?latex=%7BO%28n%5E3%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{O(n^3)}' title='{O(n^3)}' class='latex' /> expected time, so there was no feeling of practical intractability. Rather our point draws on something perhaps less widely known and appreciated: that Khachiyan&#8217;s ideas extend to solve a much wider class than linear programs, including so-called <a href=\"http://en.wikipedia.org/wiki/Semidefinite_programming\">semi-definite programs</a> or SDP&#8217;s, exactly or with high approximation. Thus it can be said to show that a complexity class <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSDP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP}}' title='{&#92;mathsf{SDP}}' class='latex' /> defined by &#8220;approximation-robust&#8221; reductions to these programs equals <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />.</p><p>
We raise this with regard to the main technical argument in a recent <a href=\"http://www.scottaaronson.com/blog/?p=1720\">post</a> by Scott Aaronson titled &#8220;The Scientific Case for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' title='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' class='latex' />.&#8221; We wonder whether a similar argument might have seemed on the side of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%5Cneq+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP &#92;neq P}}' title='{&#92;mathsf{SDP &#92;neq P}}' class='latex' /> in the years before Khachiyan. Even more speculatively, we wonder whether a kind of &#8220;Reverse Oracle Result&#8221; can be formulated to make any of this more concrete. But first let&#8217;s review Scott&#8217;s comments in the wider context of belief about <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> vs. <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> and about open problems that were resolved in surprising ways.</p><p><p><H2> Scott&#8217;s Comments and Our Positions </H2></p><p><p>
Essentially Scott gave a quite reasonable argument for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />, in his usual elegant and convincing style. Bill Gasarch <a href=\"http://blog.computationalcomplexity.org/2014/03/why-do-we-think-p-ne-np-inspired-by.html\">expanded</a> it. But. But mathematics is not something we argue about like: who was the best hockey player of all time, or what is the right philosophy? The simple fact is that no one has proved that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.</p><p>
Our purpose with our recent <a href=\"http://rjlipton.wordpress.com/2014/02/28/practically-pnp/\">post</a> on a 13-GB certificate of unsatisfiability was not to start a discussion about <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />, but rather to witness that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hardness is not so great a practical obstacle as we may think. The Gr&ouml;bner basis algorithm is run all the time, despite the problem it solves being complete for exponential <em>space</em>. Notably it runs in singly-exponential time on a <a href=\"http://algo.inria.fr/seminars/summary/Bardet2002.pdf\">generic set</a> of cases. If we can shift down a level, this is like having &#8220;smoothed polynomial-time behavior&#8221; of an algorithm for a <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' />-complete problem. Solving nontrivial cases of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard problems <a href=\"http://numberwarrior.wordpress.com/2009/11/01/cheating-at-the-2009-sudoku-championship/\">is</a><a href=\"http://arxiv.org/pdf/1403.1911v1.pdf\">addictive</a>.</p><p>
Almost the entire business model of <a href=\"http://en.wikipedia.org/wiki/Quintiq\">this company</a> is to solve <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard optimization problems, using non-quantum computers. As is evident from examples on their <a href=\"http://www.quintiq.com/\">website</a>, they are not just gristing easy approximation for run-of-the-mill instances. To quote <a href=\"http://www.quintiq.com/blog/what-usain-bolt-can-teach-you-about-optimization/\">one</a> of their blog entries (their emphasis):  </p><blockquote><p>
According to academic research on NP-hard problems, it&#8217;s impossible to guarantee that optimal solutions to difficult problems will be found in a reasonable time frame. However, with almost all real-life planning puzzles, you <b>can</b> get <b>excellent</b> results very quickly.
</p></blockquote><p>
Hence our initial reaction was, who cares about discussions on <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> being true or not, aside from progress on this great question? A full solution would be wonderful, but just having small steps would be great, even a possible program for a solution would be welcome. So that was what we thought we should just say, nothing more, except noting our split <a href=\"http://rjlipton.wordpress.com/2011/06/24/polls-and-predictions-and-pnp/\">answers</a> to Bill G&#8217;s reprised <a href=\"http://blog.computationalcomplexity.org/2011/06/i-am-conducing-new-poll-on-p-vs-np.html\">poll</a> three years ago.</p><p>
But. But Dick couldn&#8217;t resist adding some more sections, while Ken made some effort to counter Scott&#8217;s facts, counterfactually.</p><p><p><H2> Dick Speaks </H2></p><p><p>
I feel compelled to explain why I am open-minded on this question perhaps more than anyone else. I have several reasons that I feel are important to remind all of us: </p><ol><li>
In mathematics people have guessed wrong before on famous open questions. </p><li>
The actual theorems about why <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> is weaker than <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> are extremely hard and very weak. </p><li>
If <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%3D+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} = &#92;mathsf{NP}}' title='{&#92;mathsf{P} = &#92;mathsf{NP}}' class='latex' /> it could still be that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> is computable in time <img src='http://s0.wp.com/latex.php?latex=%7B+n%5E%7B2%5E%7B1000%7D%7D.+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{ n^{2^{1000}}. }' title='{ n^{2^{1000}}. }' class='latex' /></p><li>
If <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> it could still be that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> is computable in time <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7B%5Clog+n%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{&#92;log n}}' title='{n^{&#92;log n}}' class='latex' />&#8212;while the evidence cited by Scott is properly for an exponential lower bound.
</ol><p>
We&#8217;ll address the full <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> versus <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> question, and not situations where say the algorithm generating <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> instances is restricted to <img src='http://s0.wp.com/latex.php?latex=%7Br%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r(n)}' title='{r(n)}' class='latex' /> random bits&#8212;a case in which we&#8217;ve <a href=\"http://rjlipton.wordpress.com/2013/08/23/a-world-without-randomness/\">noted</a> that in the limit one can solve them all in something like time <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7Bpoly%7D%28n%292%5E%7Br%28n%29%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{poly}(n)2^{r(n)}}' title='{&#92;mathsf{poly}(n)2^{r(n)}}' class='latex' />. </p><p><p><H2> Bad Guesses </H2></p><p><p>
I have discussed guesses in mathematics <a href=\"http://rjlipton.wordpress.com/2009/02/19/we-all-guessed-wrong/\">many</a><a href=\"http://rjlipton.wordpress.com/2009/09/27/surprises-in-mathematics-and-theory\">times</a><a href=\"http://rjlipton.wordpress.com/2010/06/19/guessing-the-truth/\">before</a><a href=\"http://rjlipton.wordpress.com/2011/04/13/even-great-mathematicians-guess-wrong/\">on</a><a href=\"http://rjlipton.wordpress.com/2011/05/04/guessing/\">this</a><a href=\"http://rjlipton.wordpress.com/2011/08/01/guessing-again/\">blog</a>. One of the biggest issues in guessing wrong is that people do not take seriously the other possibility. Researchers tend not to work on showing <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%3D+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} = &#92;mathsf{NP}}' title='{&#92;mathsf{P} = &#92;mathsf{NP}}' class='latex' /> anymore. Research support does not go there, since we all &#8220;know&#8221; that it would be a waste of time, and there are other consequences to the field. </p><p>
Here are some famous guesses that were essentially off by exponentials. For each I will list the time gap between the initial problem being raised and being solved.</p><ul><li><b>The Borsuk Conjecture [60 years].</b>  It was claimed that <img src='http://s0.wp.com/latex.php?latex=%7Bd%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d+1}' title='{d+1}' class='latex' /> was the answer to this <a href=\"http://en.wikipedia.org/wiki/Borsuk's_conjecture\">geometric conjecture</a>. Many top people worked on it for years and partial results were proved, showing <img src='http://s0.wp.com/latex.php?latex=%7Bd%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d+1}' title='{d+1}' class='latex' /> is correct in many important cases. Then Gil Kalai and Jeff Kahn proved that <img src='http://s0.wp.com/latex.php?latex=%7Bd%2B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d+1}' title='{d+1}' class='latex' /> was slightly off; the correct answer is exponential&#8212;at least <img src='http://s0.wp.com/latex.php?latex=%7Bc%5E%7B%5Csqrt%7Bd%7D%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{c^{&#92;sqrt{d}}}' title='{c^{&#92;sqrt{d}}}' class='latex' /> for some <img src='http://s0.wp.com/latex.php?latex=%7Bc%3E1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{c&gt;1}' title='{c&gt;1}' class='latex' />, and possibly with <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> in the exponent. </p><li><b>Barrington&#8217;s Theorem [26 years].</b>  I worked on lower bounds to show that bounded width computation could not compute the majority function. This was joint work with Ashok Chandra and Merrick Furst, which introduced multi-party communication. Then David Barrington came along and proved that bounded width could do all of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNC%7D%5E%7B1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NC}^{1}}' title='{&#92;mathsf{NC}^{1}}' class='latex' />. Hmmmm.</p><li><b>Law of Small Numbers [118 years].</b><br />
It was noticed by Gauss that 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cpi%28x%29+%3C+li%28x%29%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;pi(x) &lt; li(x), ' title='&#92;displaystyle  &#92;pi(x) &lt; li(x), ' class='latex' /></p><p>
for all reasonable size <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. Here <img src='http://s0.wp.com/latex.php?latex=%7Bli%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{li(x)}' title='{li(x)}' class='latex' /> is the logarithmic intergal 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cint_%7B0%7D%5E%7Bx%7D%5Cfrac%7Bdt%7D%7B%5Cln+t%2C%7D+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;int_{0}^{x}&#92;frac{dt}{&#92;ln t,} ' title='&#92;displaystyle  &#92;int_{0}^{x}&#92;frac{dt}{&#92;ln t,} ' class='latex' /></p><p>
which is an asympotic approximation to <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(x)}' title='{&#92;pi(x)}' class='latex' />, the number of primes less than <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' />. It was conjectured that this would always hold and was widely believed for over a century. Then John Littlewood proved that the lead changes between <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(x)}' title='{&#92;pi(x)}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bli%28x%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{li(x)}' title='{li(x)}' class='latex' /> infinitely often, although the first switch is upper bounded by an immense number. Richard Guy wrote a wonderful <a href=\"http://www.math.sjsu.edu/~hsu/courses/126/Law-of-Small-Numbers.pdf\">article</a> on what he called the &#8220;The Strong Law of Small Numbers&#8221;: cases when evident phenomena held for small numbers but eventually would fail. Here is a <a href=\"http://googology.wikia.com/wiki/Strong_Law_of_Small_Numbers\">table</a> with other examples:
</ul><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/lawsmall.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/lawsmall.png?w=540&#038;h=393\" alt=\"lawsmall\" width=\"540\" height=\"393\" class=\"aligncenter wp-image-11377\" /></a></p><p>
By the way the &#8220;common clock&#8221; on <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq {NP}}' title='{&#92;mathsf{P} &#92;neq {NP}}' class='latex' /> is 43 years.</p><p><p><H2> Weak Theorems and Galactic Algorithms </H2></p><p><p>
We do have the theorem that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BDTIME%7D%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{DTIME}(n)}' title='{&#92;mathsf{DTIME}(n)}' class='latex' /> is not equal to <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNTIME%7D%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NTIME}(n)}' title='{&#92;mathsf{NTIME}(n)}' class='latex' />, which we have discussed <a href=\"http://rjlipton.wordpress.com/2011/01/19/we-believe-a-lot-but-can-prove-little/\">before</a> and which is particular to the multitape Turing machine model&#8212;make the tapes planes or trees and it goes away. We cannot even deduce from it that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BDTIME%7D%28n%5E%7B2%7D%29+%5Cneq+%5Cmathsf%7BNTIME%7D%28n%5E%7B2%7D%29.+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{DTIME}(n^{2}) &#92;neq &#92;mathsf{NTIME}(n^{2}). }' title='{&#92;mathsf{DTIME}(n^{2}) &#92;neq &#92;mathsf{NTIME}(n^{2}). }' class='latex' /> That&#8217;s pretty weak. Remember that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' title='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' class='latex' /> means that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BDTIME%7D%28n%5E%7B1000%7D%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{DTIME}(n^{1000})}' title='{&#92;mathsf{DTIME}(n^{1000})}' class='latex' /> does not contain <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNTIME%7D%28n%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NTIME}(n)}' title='{&#92;mathsf{NTIME}(n)}' class='latex' />. And more, of course. </p><p>
The <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> versus <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /><em>statement</em> still allows cross-cutting the generally-understood <em>significance</em>. That is:</p><ul><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' /> allows <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> to have no less than an <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7B1%2C000%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{1,000}}' title='{n^{1,000}}' class='latex' />-time algorithm. </p><li><img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> still allows <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> to have an <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7B%5Clog%5E%7B%2A%7D+n%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{&#92;log^{*} n}}' title='{n^{&#92;log^{*} n}}' class='latex' />-time algorithm.
</ul><p>
To be sure, some evidence cited by Scott is really for an exponential lower bound on <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' />; we have <a href=\"http://rjlipton.wordpress.com/2011/07/04/getting-on-base-with-pnp/\">discussed</a> this before too. But what we are saying still cuts against the usual argument that &#8220;many people have worked on looking for algorithms for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' />.&#8221; Yes many have looked for algorithms, but most were interested in &#8220;real&#8221; practical algorithms. For this kind of quest there is not much difference between <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7B20%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{20}}' title='{n^{20}}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B2%5E%7Bn%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^{n}}' title='{2^{n}}' class='latex' />. </p><p>
Aram Harrow communicates to us a more-concrete version of this point, which also serves as a bridge to Ken&#8217;s musings. 	</p><p><p><H2> Aram&#8217;s Bridging Thoughts </H2></p><p><p>
Quoting Aram, with light editing: &#8220;One of the stronger reasons for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> is the Bayesian one&#8212;it is easier to find algorithms than lower bounds, so our failure to find a subexponential-time algorithm for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' /> speaks louder than our failure to find a super-linear lower bound for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' />. A related way of expressing this is that before <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-completeness was understood, thousands of researchers in disparate fields were unwittingly all trying to put <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' /> into <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />.</p><p>
But a counter-argument is that all of those seemingly independent researchers would always come up with algorithms that relied on a few kinds of structure&#8212;a lot is covered by just two kinds: </p><ul><li>
Convexity/absence of local minima&#8212;cases where greedy algorithms work. </p><li>
Tree structure&#8212;cases where dynamic programming, divide-and-conquer, and related ideas work.
</ul><p>
This <em>paucity of algorithmic variety</em> can be viewed in (at least) two ways:</p><ol><li>
Algorithms, like oil deposits, are a finite resource. We&#8217;ve found all the important ones, and <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7B3SAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{3SAT}}' title='{&#92;mathsf{3SAT}}' class='latex' /> is always going to require exponential time. </p><li>
The paucity is a sociological phenomenon, due to the fact that all researchers have learned essentially similar math backgrounds.
</ol><p>
On the latter, Terry Tao&#8217;s recent <a href=\"http://terrytao.wordpress.com/2014/02/04/finite-time-blowup-for-an-averaged-three-dimensional-navier-stokes-equation/\">breakthrough</a> on the Navier-Stokes equations is an example of how much the same ideas keep recirculating, and how much more quickly progress can be made by cross-applying ideas rather than coming up with radically new ones. Going from Erwin Schr&ouml;dinger&#8217;s equation to Peter Shor&#8217;s quantum factoring algorithm is a 60-minute lecture, but it took over 60 years (and a change in perspective coming from the computer revolution) to discover. Our lack of algorithms reveals only our lack of creativity, and it is arrogant to posit fundamental limits to mathematics just because we can&#8217;t solve a problem. Either way, the central question isn&#8217;t so much about <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' /> but rather a &#8220;throwback&#8221; of a question now being asked about quantum computers:</p><blockquote><p>
Where does the power of deterministic algorithms come from?
</p></blockquote><p>
A related question is the power of the <a href=\"http://math.mit.edu/~rothvoss/lecturenotes/lasserresurvey.pdf\">Lasserre hierarchy</a>. It has been shown to be effective for a large number of problems, but with a surprisingly small number of truly different techniques. I would love to know whether further work will increase or decrease the number of ways in which we know how to use it; that is, either by discovering new methods or by unifying apparently different methods.&#8221;</p><p><p><H2> Ken&#8217;s Sixth World </H2></p><p><p>
The Lasserre hierarchy builds upon LP&#8217;s and SDP&#8217;s, and this brings us back to the intro. I (still Dick) remember many people in the 1970&#8242;s trying to prove that certain linear/convex programming problems were <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard, despite all our confidence in the simplex algorithm for daily use. This makes Ken wonder:</p><blockquote><p>
What if SDP&#8217;s really were hard?
</p></blockquote><p>
Russell Impagliazzo famously categorized <a href=\"http://intractability.princeton.edu/blog/2009/05/program-for-workshop-on-impagliazzos-worlds/\">five worlds</a> that are consistent with current knowledge of complexity. Is there room to analyze any more, ones that are inconsistent now, but might have been meaningfully consistent had our field taken a different path?</p><p>
All of Impagliazzo&#8217;s worlds&#8212;including ones with <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> and with <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' />&#8212;have been instantiated via oracle results. All oracle results involve pretending that some ostensibly hard problem is easy. For instance, the world with <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%3D+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P = NP}}' title='{&#92;mathsf{P = NP}}' class='latex' /> involves pretending <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BPSPACE%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{PSPACE}}' title='{&#92;mathsf{PSPACE}}' class='latex' />-complete problems are easy, while known ones for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' /> involve granting free access to a set coded so that the free access itself activates a diagonalization. What I (Ken) wonder is whether there is a sensible formal way to do &#8220;Reverse Oracle Results,&#8221; which pretend that some easy problem <img src='http://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> is hard.</p><p><p>
One known way to get this effect is to narrow the definition of &#8220;easy&#8221; so that <img src='http://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> still has easy reductions <b>to</b><img src='http://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> from other problems <img src='http://s0.wp.com/latex.php?latex=%7BW%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{W}' title='{W}' class='latex' />. For example, linear programming problems are <a href=\"http://en.wikipedia.org/wiki/P-complete#P-complete_problems\">P-complete</a> under logspace (and even easier) reductions, as are problems of approximation by SDP&#8217;s. But here I mean something more structural&#8212;a sense in which <img src='http://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> is the <em>only</em> route to solving a whole class of problems <img src='http://s0.wp.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Y}' title='{Y}' class='latex' />. Then we can segregate this entire class and pretend it all is hard. It might suffice to give &#8220;easy&#8221; reductions <b>from</b><img src='http://s0.wp.com/latex.php?latex=%7BX%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{X}' title='{X}' class='latex' /> to all these <img src='http://s0.wp.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Y}' title='{Y}' class='latex' />. In particular, a lot of <img src='http://s0.wp.com/latex.php?latex=%7BY%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{Y}' title='{Y}' class='latex' />&#8216;s are solved via the interior-point paradigm for (LP&#8217;s and) SDP&#8217;s. It could also employ ideas in <a href=\"http://en.wikipedia.org/wiki/Reverse_mathematics\">reverse mathematics</a>.</p><p><H2> Countering Factuals with Counterfactuals </H2></p><p><p>
Scott replied to my <a href=\"http://www.scottaaronson.com/blog/?p=1720#comment-101896\">comment</a> about a possible <img src='http://s0.wp.com/latex.php?latex=%7Bn%5E%7B20%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n^{20}}' title='{n^{20}}' class='latex' /> algorithm for <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSAT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SAT}}' title='{&#92;mathsf{SAT}}' class='latex' /> in his post by referring to his earlier <a href=\"http://www.scottaaronson.com/blog/?p=1720#comment-101751\">comment</a> that:</p><blockquote><p>
Since it would be inelegant and unnatural for the class <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> to be &#8220;severed into two&#8221; in this way, I&#8217;d say the much likelier possibility is simply that <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP+%5Cneq+NP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P &#92;neq NP}}' title='{&#92;mathsf{P &#92;neq NP}}' class='latex' />.
</p></blockquote><p>
Our point is, perhaps <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' /> remains already manifestly &#8220;severed into two&#8221; along Khachiyan&#8217;s and the interior-point fault-lines. In particular, we wonder how the following consequences would have looked as conditional results had they been proved in the late 1970&#8242;s:</p><p><blockquote><p><b>Theorem 1</b><em> If <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%3D+P%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP = P}}' title='{&#92;mathsf{SDP = P}}' class='latex' />, then it is possible to compute in polynomial time close approximations to a function <img src='http://s0.wp.com/latex.php?latex=%7B%5Cvartheta%28G%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;vartheta(G)}' title='{&#92;vartheta(G)}' class='latex' /> of undirected graphs <img src='http://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{G}' title='{G}' class='latex' /> that is <a href=\"http://en.wikipedia.org/wiki/Lov%C3%A1sz_number#Lov.C3.A1sz_.22sandwich_theorem.22\">sandwiched</a> between the <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete clique number <img src='http://s0.wp.com/latex.php?latex=%7B%5Comega%28G%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;omega(G)}' title='{&#92;omega(G)}' class='latex' /> and chromatic number <img src='http://s0.wp.com/latex.php?latex=%7B%5Cchi%28G%29%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;chi(G)}' title='{&#92;chi(G)}' class='latex' />, which all coincide whenever neither <img src='http://s0.wp.com/latex.php?latex=%7BG%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{G}' title='{G}' class='latex' /> nor its complement has an odd induced cycle.<br /></em></p></blockquote><blockquote><p><b>Theorem 2</b><em> If <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%3D+P%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP = P}}' title='{&#92;mathsf{SDP = P}}' class='latex' />, then <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BMAX+CUT%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{MAX CUT}}' title='{&#92;mathsf{MAX CUT}}' class='latex' /> is polynomial-time approximable within <img src='http://s0.wp.com/latex.php?latex=%7B0.87856%5Cdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{0.87856&#92;dots}' title='{0.87856&#92;dots}' class='latex' />, even though it is <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard to approximate within <img src='http://s0.wp.com/latex.php?latex=%7B0.941%5Cdots%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{0.941&#92;dots}' title='{0.941&#92;dots}' class='latex' />. </em></p></blockquote><p>In the first theorem we have also inverted time by embracing the <a href=\"http://en.wikipedia.org/wiki/Strong_perfect_graph_theorem\">Strong Perfect Graph Theorem</a> which was proved in 2002 (final in 2006), but this conjecture was strongly felt and makes it transparent that many important families of graphs are perfect.  Hence the sweeping tractability of major <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-complete problems on these cases could be a surprise.  On the second theorem, why should the difference between <img src='http://s0.wp.com/latex.php?latex=%7B0.878%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0.878}' title='{0.878}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B0.9412%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0.9412}' title='{0.9412}' class='latex' /> matter to such a simple problem as <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BMAX+CUT%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{MAX CUT}}' title='{&#92;mathsf{MAX CUT}}' class='latex' />? </p><p>
Of course in the light of knowledge we understand how these two <a href=\"http://en.wikipedia.org/wiki/Holographic_algorithm#History\">famous</a><a href=\"http://en.wikipedia.org/wiki/Semidefinite_programming#Example_3_.28Goemans-Williamson_MAX_CUT_approximation_algorithm.29\">theorems</a> work. On the latter the Unique Games Conjecture already helps explain how <img src='http://s0.wp.com/latex.php?latex=%7B0.87856%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0.87856&#92;dots}' title='{0.87856&#92;dots}' class='latex' /> may be special. But the present exercise is about how we reason when we don&#8217;t (yet) have the light of knowledge.</p><p><p><H2> Open Problems </H2></p><p><p>
Can we make some formal sense of a world where Khachiyan&#8217;s breakthrough never happens?</p><p><P><br /><b>Update 3/18/14:</b> The comments section has some excellent replies, including ones on the argument of the last two sections <a href=\"http://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/#comment-44250\">by</a> Scott Aaronson and <a href=\"http://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/#comment-44206\">by</a> Timothy Gowers.</p><p><P><br /><b>Update 3/17/14:</b> The Lov&aacute;sz theta-function example replaced the post&#8217;s original quoting of Leslie Valiant&#8217;s first &#8220;<a>Accidental Algorithm</a>&#8221; under a mis-memory that LP&#8217;s were involved (and SDP&#8217;s in later developments).  Snipping the irrelevant qualifier, it reads:</p><blockquote><p><b>Theorem 3</b><em> Counting assignments to a certain class of planar formulas is deterministic polynomial-time computable modulo <img src='http://s0.wp.com/latex.php?latex=%7B7%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' />, or modulo any Mersenne prime, even though it is <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BNP%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{NP}}' title='{&#92;mathsf{NP}}' class='latex' />-hard modulo <img src='http://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7B5%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' />. </em></p></blockquote><p>Aside from the fact that this computation belongs to a class called <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BGapL%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{GapL}}' title='{&#92;mathsf{GapL}}' class='latex' /> which is commonly believed to be a proper subclass of <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P}}' title='{&#92;mathsf{P}}' class='latex' />, the intent was to argue: &#8220;What do Mersenne primes have to do with matchings and convex programming really? Surely counting must be equally hard modulo any odd prime&#8212;after all there&#8217;s no exception for Mersenne in modular circuit lower bounds&#8212;so <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BSDP+%5Cneq+P%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{SDP &#92;neq P}}' title='{&#92;mathsf{SDP &#92;neq P}}' class='latex' /> must be an &#8216;invisible fence&#8217; around this kind of ridiculousness.&#8221;  The intro and Borsuk statements were also amended.</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11375/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11375/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11375&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/03/15/could-we-have-felt-evidence-for-sdp-p/feed/") (slash:comments nil "60") (media:content ((url . "http://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/khachiyan.png") (medium . "image")) (media:title ((type . "html")) "Khachiyan")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/lawsmall.png?w=600") (medium . "image")) (media:title ((type . "html")) "lawsmall"))) (item nil (title nil "How To Carry Fame") (link nil "http://rjlipton.wordpress.com/2014/03/10/how-to-carry-fame/") (comments nil "http://rjlipton.wordpress.com/2014/03/10/how-to-carry-fame/#comments") (pubDate nil "Mon, 10 Mar 2014 14:43:50 +0000") (dc:creator nil "rjlipton") (category nil "History") (category nil "People") (category nil "Proofs") (category nil "decidable") (category nil "fame") (category nil "Logic") (category nil "Rabin") (category nil "S2S") (category nil "talks") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11361") (description nil "Long proofs are not always the most important results Michael Rabin is visiting Georgia Tech today and tomorrow to give a pair of distinguished lectures. Both of these will be on applications of cryptography. One is to help auctions avoid cheaters, while the other is to help elections avoid cheaters. I see a pattern. Ken [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11361&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Long proofs are not always the most important results </em><br /><font color=\"”#000000?\"></p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/unknown.jpeg\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/unknown.jpeg?w=275\" alt=\"Unknown\" width=\"275\" class=\"alignright  wp-image-11367\" /></a></p><p>
Michael Rabin is visiting Georgia Tech today and tomorrow to give a pair of distinguished lectures. Both of these will be on applications of cryptography. One is to help auctions avoid cheaters, while the other is to help elections avoid cheaters. I see a pattern. Ken sees another pattern&#8212; he is helping chess tournaments avoid cheaters. </p><p>
Today I want to comment about Rabin&#8217;s fame and what makes a result important. </p><p><span id=\"more-11361\"></span></p><p>
I have known Michael since I was a graduate student at CMU&#8212;I have talked about this before <a href=\"http://rjlipton.wordpress.com/2009/03/01/rabin-flips-a-coin/\">here</a>. In the decades since then I have heard him given many talks, all of which have been brilliant. He is one of the best presenters of technical material I have every seen, perhaps the best in the world. My &#8220;proof&#8221; of this statement is:</p><blockquote><p>
 that I can still recall&#8212;in detail&#8212;most of his talks, even ones from decades ago.
</p></blockquote><p>Can you recall that talk you heard last year, or even one you heard last month? I have trouble recalling my own talks. But Michael&#8217;s talks are special, memorable, informative, clear, and fun.</p><p><h2> Great Talks </h2><p><p>
I have selected a few talks of Michael that I recall in great detail&#8212;they span about forty years. There are many others that I could have added, but these should make my point.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on <i>Theoretical impediments to artificial intelligence</i>, was the first of his talks that I had ever heard. It was at the 1974 <a href=\"http://www.informatik.uni-trier.de/~ley/db/conf/ifip/ifip74.html\">IFIP Congress</a>, which occurred in Stockholm Sweden. There was a time when the IFIP Congress was a major conference that many of us went to. I met Dick Karp there for the first time.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on the introduction of <i>randomness</i> to algorithms, which was given at Yale when I was there as a junior faculty member. It was in 1977, I recall. This talk made the case for the power of randomness&#8212;Michael showed that randomness could help in a certain geometric search problem. I talked about this in detail in the same <a href=\"http://rjlipton.wordpress.com/2009/03/01/rabin-flips-a-coin/\">post</a> with the CMU story. </p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on the <i>Karp-Rabin pattern matching algorithm</i> was given in the 1980&#8242;s at Princeton University. We have also talked about this before <a href=\"http://rjlipton.wordpress.com/2009/04/16/the-word-problem-for-free-groups/\">here</a>.</p><p><img src='http://s0.wp.com/latex.php?latex=%7B%5Cbullet+%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;bullet }' title='{&#92;bullet }' class='latex' /> His talk on <i>hyper-encryption</i> was given at Georgia Tech about ten years ago. This was an cool idea&#8212;I believe&#8212;on using non-complexity assumptions to build encryption methods that were very powerful. The short insight was that memory is expensive, and one could defeat an adversary that had limited memory. This yielded a protocol that needed no assumptions about factoring or the existence of one-way functions.</p><p><h2> Great Results </h2><p><p>
Why indeed is Rabin famous? He received the Turing Award with Dana Scott for their work on finite state automata (FSA). I would argue that his most exciting results were curiously his least deep results. We all know about FSA; his introduction of randomness to all parts of computing; his primality test, independent but related to Gary Miller&#8217;s work; his pattern matching algorithm with Karp; and much more. Yet, I would argue that his deepest result is probably his least known. It was, is, his brilliant work on S2S.</p><p><h2> Second Order Monadic Theory </h2><p><p>
What is S2S? </p><p>
There are many logical theories that we study, such as Peano Arithmetic (PA). PA is a first-order theory. This means that quantifiers can only range over individual elements&#8212;in PA they range over integers. Thus, in PA we can say
<p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cforall+x+%5C+%5Cexists+r+%5C+%5Cexists+s+%5C+%5Cexists+t+%28t%5Cneq+0+%5Cwedge+tx+%3D+r%5E%7B3%7D+%2B+s%5E%7B3%7D%29.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;forall x &#92; &#92;exists r &#92; &#92;exists s &#92; &#92;exists t (t&#92;neq 0 &#92;wedge tx = r^{3} + s^{3}). ' title='&#92;displaystyle  &#92;forall x &#92; &#92;exists r &#92; &#92;exists s &#92; &#92;exists t (t&#92;neq 0 &#92;wedge tx = r^{3} + s^{3}). ' class='latex' /></p><p> This states that all numbers have a non-zero multiple that is a sum of two cubes. This is <a href=\"http://www.emis.de/journals/JIS/VOL6/Broughan/broughan25.pdf\">true</a>&#8212;but it is not trivial. </p><p>
The reason PA is so powerful is that it allows both addition and multiplication. Given a statement like the above about cubes it is impossible, in general, to decide whether the statement is true or not. </p><p>
We obviously like decidable theories since at least in principle they allow us to tell if a statement is true or false. Of course if <img src='http://s0.wp.com/latex.php?latex=%7B%5Cmathsf%7BP%7D+%5Cneq+%5Cmathsf%7BNP%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' title='{&#92;mathsf{P} &#92;neq &#92;mathsf{NP}}' class='latex' />, then even for a decidable theory it may be hard to tell whether something is true. But still decidable is a great property for a theory to have. </p><p>
A difficulty is the tension between being an expressive theory and being decidable. PA is very expressive, most everyday theorems of mathematics can be proved in it, at least in principle. It is so expressive that even weak subtheories are undecidable. </p><p>
Enter S2S. The theory S2S is a different kind of theory from PA. While PA is a first-order theory, S2S is a second-order theory. The &#8220;S&#8221; in &#8220;S2S&#8221; stands for <i>second order</i>. It allows quantifiers to range over individual elements and also over finite or infinite sets of elements. The basic objects in S2S are finite paths in the infinite binary tree. </p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/rabintree.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/rabintree.png?w=300\" alt=\"RabinTree\" width=\"300\" class=\"aligncenter  wp-image-11363\" /></a></p><p align=\"center\"><p>
In S2S we can talk about the left and right successor to any such element: if <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> is an element, then <img src='http://s0.wp.com/latex.php?latex=%7Bx0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x0}' title='{x0}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bx1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x1}' title='{x1}' class='latex' /> are the respective successors. Since it is a second order theory we are also allowed quantifiy over sets of such elements. </p><p><h2> Decidedly More Power </h2><p><p>
The ability to quantify over sets makes S2S very <a href=\"http://research.microsoft.com/en-us/um/people/gurevich/opera/64.pdf\">powerful</a> and expressive. For example, here are two notions expressed <a href=\"http://scandinavianlogic.org/material/norway3a.pdf\">formally</a>:</p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/lex.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/lex.png?w=300\" alt=\"lex\" width=\"300\" class=\"aligncenter  wp-image-11364\" /></a></p><p align=\"center\"><p><p><a href=\"http://rjlipton.files.wordpress.com/2014/03/finite.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/finite.png?w=300\" alt=\"finite\" width=\"300\" class=\"aligncenter  wp-image-11365\" /></a></p><p>
The magic of this is that while the theory is expressive, it is not <b>too</b> expressive. Indeed the Rabin proved in 1969: </p><blockquote><p><b>Theorem 1</b><em> The monadic second order theory of the infinite binary tree is decidable. </em></p></blockquote><p><p>
When I first looked at Rabin&#8217;s paper, as a graduate student at CMU, it was not the depth of his proof, which is wonderful, but rather the array of applications that followed that excited me. One measure of the depth of a theorem is the number of open problems it solves. Rabin&#8217;s theorem can be used to prove the following other theories are decidable: </p><ul><li> The first order theory of rationals with the order <img src='http://s0.wp.com/latex.php?latex=%7B%3C%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&lt;}' title='{&lt;}' class='latex' /> relation.
<li> The first order theory of boolean algebras with ideals.
<li> Certain modal logics, such as S4.
</ul><p> These results follow by encoding the decidability question into the powerful theory S2S and invoking Rabin&#8217;s Theorem. See this for a nice summary of S2S in slide <a href=\"http://shane.st/wp-content/uploads/2013/11/RabinsTheorem.pdf\">format</a> by Shane Steinert-Threlkeld. </p><p>
The proof of Rabin&#8217;s Theorem was a tour-de-force. It requires clever definitions and some quite detailed inductive arguments. Since his original proof people have found &#8220;easier&#8221; proofs, but the original was quite deep and intricate. </p><p>
I would argue that this theorem is one of the deepest results of Rabin&#8217;s many beautiful results over his long career. It is well known to those who work in logic and automata theory, but is perhaps less known to the whole theory community. If you already knew it fine, if not, then I hope you begin to appreciate the depth of his work.</p><p><h2> Open Problems </h2><p><p>
Perhaps a lesson here for all: fame comes from results that are game-changers, which does not always mean they are deep long complex arguments. Sometimes that is the case: clearly the solution to Fermat Last Theorem and the Poincar&eacute; Conjecture are famous and deep results. Yet many times I think Rabin&#8217;s situation is more often the case: a simple to state result that yields an &#8220;ah&#8221; moment, that opens doors for others, that changes the landscape of thinking about an area, is the most important type of result. Rabin has many many of these results. I would argue that without S2S he still would be one of the greatest theorists who has ever lived.</p><p>
What do you think?</p><p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11361/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11361/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11361&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/03/10/how-to-carry-fame/feed/") (slash:comments nil "14") (media:content ((url . "http://1.gravatar.com/avatar/afaa664a052777146630095c596117b2?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "lipton")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/unknown.jpeg") (medium . "image")) (media:title ((type . "html")) "Unknown")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/rabintree.png") (medium . "image")) (media:title ((type . "html")) "RabinTree")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/lex.png") (medium . "image")) (media:title ((type . "html")) "lex")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/finite.png") (medium . "image")) (media:title ((type . "html")) "finite"))) (item nil (title nil "Codes Meet Numbers") (link nil "http://rjlipton.wordpress.com/2014/03/09/codes-meet-numbers/") (comments nil "http://rjlipton.wordpress.com/2014/03/09/codes-meet-numbers/#comments") (pubDate nil "Sun, 09 Mar 2014 05:09:58 +0000") (dc:creator nil "Pip") (category nil "All Posts") (category nil "History") (category nil "Ideas") (category nil "Oldies") (category nil "Open Problems") (category nil "People") (category nil "coding theory") (category nil "conjecture") (category nil "Fermat") (category nil "Hamming") (category nil "obstinate numbers") (category nil "Polignac conjecture") (category nil "primes") (category nil "twin prime conjecture") (category nil "Zhi-Wei Sun") (guid ((isPermaLink . "false")) "http://rjlipton.wordpress.com/?p=11351") (description nil "Results and problems about primes that make us think of coding theory Cropped from source. Zhi-Wei Sun is a professor in Mathematics at Nanjing University in China. He is the Editor in Chief of the recently-founded Journal of Combinatorics and Number Theory. His homepage is unique in prominently featuring a long list of &#8230;not his [&#8230;]<img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11351&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (content:encoded nil "<p><font color=\"”#0066cc?\"><br /><em> Results and problems about primes that make us think of coding theory </em><br /><font color=\"”#000000?\"></p><table class=\"image alignright\"><tr><td><a href=\"http://rjlipton.files.wordpress.com/2014/03/suninsun.png\"><img src=\"http://rjlipton.files.wordpress.com/2014/03/suninsun.png?w=600\" alt=\"SunInSun\"   class=\"alignright size-full wp-image-11352\" /></a></td></tr><tr><td class=\"caption alignright\"><FONT size=\"-2\">Cropped from <a href=\"http://math.nju.edu.cn/~zwsun/with%20Prof.%20K.%20Rubin%20and%20D.%20Wan.jpg\">source</a>.<br /></FONT></td></table><p>
Zhi-Wei Sun is a professor in Mathematics at Nanjing University in China. He is the Editor in Chief of the recently-founded Journal of Combinatorics and Number Theory. His <a href=\"http://math.nju.edu.cn/~zwsun/\">homepage</a> is unique in prominently featuring a long list of </p><ul><li>
&#8230;not his awards, </p><li>
&#8230;not his papers, </p><li>
&#8230;not his theorems, </p><li>
&#8230;but rather his <em>conjectures</em>.
</ul><p>Indeed we count 432 total conjectures in his list, subtracting one that he seems last year to have proved. They do not seem to be easy conjectures&#8212;this <a href=\"https://listserv.nodak.edu/cgi-bin/wa.exe?A2=NMBRTHRY;3d24b586.1206\">one</a> implies the Riemann Hypothesis in a nontrivial way. Some of them involve powers of 2, which lend them a coding-theory flavor. </p><p>Today Ken and I wish to share ideas of using coding theory to prove number-theoretic results.<span id=\"more-11351\"></span></p><p>
Coding theory owes much to Richard Hamming, who defined <b>Hamming distance</b> between codewords and created the binary Hamming codes. The <b>Hamming sphere</b> of radius <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> centered on a word <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> is the set of all words <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> of the same length whose Hamming distance is at most <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' />, meaning <img src='http://s0.wp.com/latex.php?latex=%7Bx%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{x}' title='{x}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7By%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{y}' title='{y}' class='latex' /> differ in at most <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> places. Our question is how the distributions of prime numbers and other sets relate to the Hamming spheres of their binary encodings. For example, <img src='http://s0.wp.com/latex.php?latex=%7B5+%3D+101%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{5 = 101}' title='{5 = 101}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B7+%3D+111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7 = 111}' title='{7 = 111}' class='latex' /> are twin primes of Hamming distance <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />, while <img src='http://s0.wp.com/latex.php?latex=%7B11+%3D+1011%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{11 = 1011}' title='{11 = 1011}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B13+%3D+1101%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{13 = 1101}' title='{13 = 1101}' class='latex' /> have distance <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />.</p><p>
Sun has his own &#8220;Super Twin Prime Conjecture&#8221; listed first on his page. Call a pair <img src='http://s0.wp.com/latex.php?latex=%7B%28k%2Cm%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(k,m)}' title='{(k,m)}' class='latex' /> of integers &#8220;super&#8221; if <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%28k%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(k)}' title='{&#92;pi(k)}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%28%5Cpi%28m%29%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(&#92;pi(m))}' title='{&#92;pi(&#92;pi(m))}' class='latex' /> are both twin primes, indeed the lower member of a twin pair, where <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpi%28k%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pi(k)}' title='{&#92;pi(k)}' class='latex' /> denotes the <img src='http://s0.wp.com/latex.php?latex=%7Bk%5E%7Bth%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k^{th}}' title='{k^{th}}' class='latex' /> prime number. The conjecture&#8212;a hybrid of Twin and Goldbach&#8212;is:</p><blockquote><p>
Every integer <img src='http://s0.wp.com/latex.php?latex=%7Bn+%5Cgeq+3%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n &#92;geq 3}' title='{n &#92;geq 3}' class='latex' /> is the sum of a super pair.
</p></blockquote><p>
He has verified this for <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> up to <img src='http://s0.wp.com/latex.php?latex=%7B10%5E9%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{10^9}' title='{10^9}' class='latex' />. What can motivate such a conjecture? Certainly one motivation is expected density&#8212;not only &#8220;should&#8221; the twin primes be infinite, but they should be dense enough to fill this kind of requirement, much as the set of primes themselves is dense enough to make Goldbach&#8217;s conjecture&#8212;that every even number <img src='http://s0.wp.com/latex.php?latex=%7Bn+%5Cgeq+4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n &#92;geq 4}' title='{n &#92;geq 4}' class='latex' /> is the sum of two primes&#8212;plausible. But what other structure can supply motivation? That is what we seek.</p><p><p><H2> Numbers and Codes </H2></p><p><p>
Coding theory is all about the properties of vectors over finite sets, often over the binary field <img src='http://s0.wp.com/latex.php?latex=%7B%5C%7B0%2C1%5C%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;{0,1&#92;}}' title='{&#92;{0,1&#92;}}' class='latex' />. Of course number theory is all about the additive and multiplicative properties of integers. These seem to be vastly different, yet they are related: every number can be represented by a binary vector. </p><p>
Coding theory gives a way to express relationships that might be cumbersome with arithmetical tools such as congruences. For example, say a number <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> is &#8220;top modulo <img src='http://s0.wp.com/latex.php?latex=%7B2%5Em%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^m}' title='{2^m}' class='latex' />&#8221; if its <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' />-bit encoding begins with a <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />. Of course we can specify this as <img src='http://s0.wp.com/latex.php?latex=%7B2%5E%7Bm-1%7D+%5Cleq+r+%3C+2%5Em%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^{m-1} &#92;leq r &lt; 2^m}' title='{2^{m-1} &#92;leq r &lt; 2^m}' class='latex' />, but &#8220;less-than&#8221; is a dodgy concept when working modulo some number. When <img src='http://s0.wp.com/latex.php?latex=%7Bm%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{m}' title='{m}' class='latex' /> is odd we might want to define instead that the <em>middle</em> bit of <img src='http://s0.wp.com/latex.php?latex=%7Br%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{r}' title='{r}' class='latex' /> in binary is a <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />. Middle bits are sometimes important in crypto, but relations involving them are not always easy to define via congruences.</p><p>
Of course a number is odd iff its last bit in binary is <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />, and is congruent to <img src='http://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> mod <img src='http://s0.wp.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' /> iff its second-last bit is also <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />. The distinction between congruence to <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> versus <img src='http://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> mod <img src='http://s0.wp.com/latex.php?latex=%7B4%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{4}' title='{4}' class='latex' /> is generally important for odd primes. How about congruence to <img src='http://s0.wp.com/latex.php?latex=%7B5%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7B7%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' /> mod <img src='http://s0.wp.com/latex.php?latex=%7B8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{8}' title='{8}' class='latex' />, versus <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> or <img src='http://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' />, that is being top mod <img src='http://s0.wp.com/latex.php?latex=%7B8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{8}' title='{8}' class='latex' />? Of course one important distinction is which congruences are quadratic residues, but with binary-code notions we can define others.</p><p>
The number <img src='http://s0.wp.com/latex.php?latex=%7B71+%3D+1000111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{71 = 1000111}' title='{71 = 1000111}' class='latex' /> is congruent to <img src='http://s0.wp.com/latex.php?latex=%7B7%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' /> mod <img src='http://s0.wp.com/latex.php?latex=%7B8%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{8}' title='{8}' class='latex' />, and is part of a twin pair of Hamming distance <img src='http://s0.wp.com/latex.php?latex=%7B3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{3}' title='{3}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7B73+%3D+1001001%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{73 = 1001001}' title='{73 = 1001001}' class='latex' />. The first twin pair with greater Hamming distance actually gives distance <img src='http://s0.wp.com/latex.php?latex=%7B6%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{6}' title='{6}' class='latex' />: <img src='http://s0.wp.com/latex.php?latex=%7B191+%3D+10111111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{191 = 10111111}' title='{191 = 10111111}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B193+%3D+11000001%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{193 = 11000001}' title='{193 = 11000001}' class='latex' />. Next comes <img src='http://s0.wp.com/latex.php?latex=%7B2687+%3D+10101111111%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2687 = 10101111111}' title='{2687 = 10101111111}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7B2689+%3D+10110000001%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2689 = 10110000001}' title='{2689 = 10110000001}' class='latex' /> for distance <img src='http://s0.wp.com/latex.php?latex=%7B7%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{7}' title='{7}' class='latex' />. Is the Hamming distance of twin primes unbounded? </p><p>
Of course we don&#8217;t even know if there are infinitely many twin primes. This is really asking whether twin primes can flank a multiple of an arbitrarily large power of <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. Quick web searches have not found this question, while our point is that our motive came from the coding-theory angle.</p><p><p><H2> Polignacs and Twins and Spheres </H2></p><p><p>
In 1848, Camille Marie de Polignac somewhat lazily conjectured that every odd number <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> is the sum of a prime number and a power of <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. We speculate that he may have intended to exclude false cases such as <img src='http://s0.wp.com/latex.php?latex=%7Bn+%3D+127%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n = 127}' title='{n = 127}' class='latex' /> where <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> itself is prime, but even so he missed <img src='http://s0.wp.com/latex.php?latex=%7Bn+%3D+905%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n = 905}' title='{n = 905}' class='latex' /> amid his reported (but to us incredible) claim to have verified this up to about 3 million. Perhaps it was spoken with the bluster of a Confederate major-general during the Civil War, which is surprisingly what this French nobleman <a href=\"http://en.wikipedia.org/wiki/Camille_Armand_Jules_Marie,_Prince_de_Polignac\">became</a>. </p><p>
His older brother, Alphonse de Polignac, made a somewhat less lazy conjecture: that every even number <img src='http://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k}' title='{k}' class='latex' /> is the difference between infinitely many pairs of consecutive primes. Of course with <img src='http://s0.wp.com/latex.php?latex=%7Bk%3D2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k=2}' title='{k=2}' class='latex' /> this subsumes the Twin Primes Conjecture, and indeed the latter is sometimes called de Polignac&#8217;s Conjecture after him. </p><p>
Should Camille have teamed up with his brother to make his conjecture? And would they have done better if they had been twins&#8212;maybe prove something about their conjecture? Well we have an example to go by: Zhi-Wei Sun has a twin brother, Zhi-Hong Sun at Huaiyin Normal University, and they teamed up in 1992 to prove something about the following conjecture by Donald Wall:</p><blockquote><p>
There are infinitely many primes <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> such that either <img src='http://s0.wp.com/latex.php?latex=%7Bp+%5Cequiv+%5Cpm+1%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p &#92;equiv &#92;pm 1}' title='{p &#92;equiv &#92;pm 1}' class='latex' /> modulo <img src='http://s0.wp.com/latex.php?latex=%7B5%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bp%5E2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p^2}' title='{p^2}' class='latex' /> divides the Fibonacci number <img src='http://s0.wp.com/latex.php?latex=%7BF_%7Bp+-+1%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_{p - 1}}' title='{F_{p - 1}}' class='latex' />, or <img src='http://s0.wp.com/latex.php?latex=%7Bp+%5Cequiv+%5Cpm+2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p &#92;equiv &#92;pm 2}' title='{p &#92;equiv &#92;pm 2}' class='latex' /> modulo <img src='http://s0.wp.com/latex.php?latex=%7B5%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{5}' title='{5}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bp%5E2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p^2}' title='{p^2}' class='latex' /> divides the Fibonacci number <img src='http://s0.wp.com/latex.php?latex=%7BF_%7Bp+%2B+1%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_{p + 1}}' title='{F_{p + 1}}' class='latex' />, where <img src='http://s0.wp.com/latex.php?latex=%7BF_n%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_n}' title='{F_n}' class='latex' /> is indexed with <img src='http://s0.wp.com/latex.php?latex=%7BF_0+%3D+0%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_0 = 0}' title='{F_0 = 0}' class='latex' />, <img src='http://s0.wp.com/latex.php?latex=%7BF_1+%3D+1%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{F_1 = 1}' title='{F_1 = 1}' class='latex' />.
</p></blockquote><p>
What Sun and Sun <a href=\"http://matwbn.icm.edu.pl/ksiazki/aa/aa60/aa6046.pdf\">proved</a> is that any minimal counterexample to Fermat&#8217;s Last Theorem would need to involve such a prime&#8212;of course from the proof of FLT two years later, we know there are none. They also gave a sufficient condition for a &#8220;Wall-Sun-Sun prime&#8221; to exist, though none has yet been found.</p><p>
Back to the Polignacs, we can try to capture ideas of both their conjectures with a case of what is actually a pretty general kind of question&#8212;a kind one can pose about other sets of numbers besides the primes:</p><blockquote><p>
What is the minimum <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> such that every odd number is within the distance-<img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> Hamming sphere of a prime number? Is it finite?
</p></blockquote><p>
To get the even numbers too we can add <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> to <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' />. Of course this is still a strong &#8220;every&#8221; kind of conjecture, and those are hard to prove. One can first try to attack &#8220;infinitely-many&#8221; versions. Obviously there are infinitely many odd numbers <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> that are <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpm+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pm 2}' title='{&#92;pm 2}' class='latex' /> from a prime <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />, but if we insist that <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> too be prime we have our old friend the Twin Prime Conjecture again. So here is the corresponding Hamming-like question:</p><blockquote><p>
What is the minimum <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> such that there are infinitely many prime numbers <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> that are within Hamming distance <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> of some other prime number?
</p></blockquote><p>
Using Hamming&#8217;s own ideas in coding theory, we can prove the minimum is at most <img src='http://s0.wp.com/latex.php?latex=%7Bd%3D2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d=2}' title='{d=2}' class='latex' />. Note that this is stronger than saying there are infinitely many pairs of primes <img src='http://s0.wp.com/latex.php?latex=%7B%28p%2Cq%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(p,q)}' title='{(p,q)}' class='latex' /> such that <img src='http://s0.wp.com/latex.php?latex=%7Bq+-+p+%3D+2%5Ek+%5Cpm+2%5El%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q - p = 2^k &#92;pm 2^l}' title='{q - p = 2^k &#92;pm 2^l}' class='latex' />, because we are also restricting what <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> have in the bit positions <img src='http://s0.wp.com/latex.php?latex=%7Bk%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k}' title='{k}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bl%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{l}' title='{l}' class='latex' /> from the end. </p><p><p><H2> The Proof </H2></p><p><p>
The theorem is not that amazing, or unexpected, but we think how we prove it may be of interest. The proof is via Hamming&#8217;s famous <a href=\"http://en.wikipedia.org/wiki/Hamming_bound\">theorem</a> on the density of codes. Let <img src='http://s0.wp.com/latex.php?latex=%7BA_%7Bq%7D%28n%2Cd%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A_{q}(n,d)}' title='{A_{q}(n,d)}' class='latex' /> be size of the largest set <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> of <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> vectors over an alphabet of size <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> so that any two distinct code words in <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> are at least Hamming distance <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> apart. </p><blockquote><p><b>Theorem 1</b><em> For all <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' />: 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++A_%7Bq%7D%28n%2Cd%29+%5Cle+%5Cfrac%7Bq%5E%7Bn%7D%7D%7B%5Csum_%7Bk%3D0%7D%5E%7Bt%7D+%5Cbinom%7Bn%7D%7Bk%7D%28q-1%29%5E%7Bk%7D%7D%2C+&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  A_{q}(n,d) &#92;le &#92;frac{q^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}(q-1)^{k}}, ' title='&#92;displaystyle  A_{q}(n,d) &#92;le &#92;frac{q^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}(q-1)^{k}}, ' class='latex' /></p><p>
where 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++t+%3D+%5Cleft%5Clfloor+%5Cfrac%7Bd-1%7D%7B2%7D+%5Cright%5Crfloor.+&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  t = &#92;left&#92;lfloor &#92;frac{d-1}{2} &#92;right&#92;rfloor. ' title='&#92;displaystyle  t = &#92;left&#92;lfloor &#92;frac{d-1}{2} &#92;right&#92;rfloor. ' class='latex' /></p><p></em></p></blockquote><p><p>
Now to state formally what we are proving, it is:</p><blockquote><p><b>Theorem 2</b><em> For every sufficiently large <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />, there are primes <img src='http://s0.wp.com/latex.php?latex=%7Bp%2Cq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p,q}' title='{p,q}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7B2%5En+%5Cleq+p%2Cq+%3C+2%5E%7Bn%2B1%7D%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2^n &#92;leq p,q &lt; 2^{n+1}}' title='{2^n &#92;leq p,q &lt; 2^{n+1}}' class='latex' /> such that <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> have Hamming distance at most <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />. </em></p></blockquote><p><p><em>Proof:</em>  Consider the set <img src='http://s0.wp.com/latex.php?latex=%7BS%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{S}' title='{S}' class='latex' /> of all primes in the interval <img src='http://s0.wp.com/latex.php?latex=%7B%5B2%5E%7Bn%7D%2C+%5Cdots%2C+2%5E%7Bn%2B1%7D-1%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{[2^{n}, &#92;dots, 2^{n+1}-1]}' title='{[2^{n}, &#92;dots, 2^{n+1}-1]}' class='latex' />. These of course can be represented by <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' />-bit vectors, eliding the leading <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' /> in the <img src='http://s0.wp.com/latex.php?latex=%7B2%5En%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2^n}' title='{2^n}' class='latex' /> place. Think of them as a code. We will show that its minimum distance <img src='http://s0.wp.com/latex.php?latex=%7Bd%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d}' title='{d}' class='latex' /> is at most <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />, from which the theorem follows. </p><p>
Suppose that the distance is larger, that is <img src='http://s0.wp.com/latex.php?latex=%7Bd+%5Cge+3%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d &#92;ge 3}' title='{d &#92;ge 3}' class='latex' />. The apply Hamming&#8217;s Theorem for <img src='http://s0.wp.com/latex.php?latex=%7BA_%7B2%7D%28n%2Cd%29%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{A_{2}(n,d)}' title='{A_{2}(n,d)}' class='latex' /> noting that <img src='http://s0.wp.com/latex.php?latex=%7Bt+%5Cge+1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{t &#92;ge 1}' title='{t &#92;ge 1}' class='latex' />. This yields </p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%7CS%7C+%5Cle+%5Cfrac%7B2%5E%7Bn%7D%7D%7B%5Csum_%7Bk%3D0%7D%5E%7Bt%7D+%5Cbinom%7Bn%7D%7Bk%7D%7D+%5Cle+%5Cfrac%7B2%5E%7Bn%7D%7D%7B1%2Bn%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  |S| &#92;le &#92;frac{2^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}} &#92;le &#92;frac{2^{n}}{1+n}. ' title='&#92;displaystyle  |S| &#92;le &#92;frac{2^{n}}{&#92;sum_{k=0}^{t} &#92;binom{n}{k}} &#92;le &#92;frac{2^{n}}{1+n}. ' class='latex' /></p><p>
The <a href=\"http://en.wikipedia.org/wiki/Prime_number_theorem\">Prime Number Theorem</a> states that the density of primes up to <img src='http://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' /> converges to <img src='http://s0.wp.com/latex.php?latex=%7BN%2F%5Cln+N%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N/&#92;ln N}' title='{N/&#92;ln N}' class='latex' /> as <img src='http://s0.wp.com/latex.php?latex=%7BN+%5Clongrightarrow+%5Cinfty%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N &#92;longrightarrow &#92;infty}' title='{N &#92;longrightarrow &#92;infty}' class='latex' />, where <img src='http://s0.wp.com/latex.php?latex=%7B%5Cln%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;ln}' title='{&#92;ln}' class='latex' /> is natural log. By an easy manipulation of estimates it follows that for any <img src='http://s0.wp.com/latex.php?latex=%7B%5Cepsilon+%3E+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;epsilon &gt; 0}' title='{&#92;epsilon &gt; 0}' class='latex' /> and all large enough <img src='http://s0.wp.com/latex.php?latex=%7BN%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N}' title='{N}' class='latex' />, the primes have density at least <img src='http://s0.wp.com/latex.php?latex=%7B%281-%5Cepsilon%29%5Cfrac%7B1%7D%7B%5Cln+N%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{(1-&#92;epsilon)&#92;frac{1}{&#92;ln N}}' title='{(1-&#92;epsilon)&#92;frac{1}{&#92;ln N}}' class='latex' /> in <img src='http://s0.wp.com/latex.php?latex=%7B%5BN%2F2%2C%5Cdots%2CN-1%5D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{[N/2,&#92;dots,N-1]}' title='{[N/2,&#92;dots,N-1]}' class='latex' />. It follows with <img src='http://s0.wp.com/latex.php?latex=%7BN+%3D+2%5E%7Bn%2B1%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{N = 2^{n+1}}' title='{N = 2^{n+1}}' class='latex' /> that </p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%7CS%7C+%5Cgeq+%281-%5Cepsilon%29%5Cfrac%7B2%5E%7Bn%7D%7D%7B%28n%2B1%29%5Cln+2%7D.+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  |S| &#92;geq (1-&#92;epsilon)&#92;frac{2^{n}}{(n+1)&#92;ln 2}. ' title='&#92;displaystyle  |S| &#92;geq (1-&#92;epsilon)&#92;frac{2^{n}}{(n+1)&#92;ln 2}. ' class='latex' /></p><p>
Since <img src='http://s0.wp.com/latex.php?latex=%7B1%2F%5Cln+2+%3D+%5Clog_2+e+%3D+1.44%5Cdots%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1/&#92;ln 2 = &#92;log_2 e = 1.44&#92;dots}' title='{1/&#92;ln 2 = &#92;log_2 e = 1.44&#92;dots}' class='latex' />, this implies with the above that </p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle++%5Cfrac%7B1.44%281-%5Cepsilon%292%5En%7D%7Bn%2B1%7D+%5Cle+%5Cfrac%7B2%5En%7D%7Bn%2B1%7D%2C+&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle  &#92;frac{1.44(1-&#92;epsilon)2^n}{n+1} &#92;le &#92;frac{2^n}{n+1}, ' title='&#92;displaystyle  &#92;frac{1.44(1-&#92;epsilon)2^n}{n+1} &#92;le &#92;frac{2^n}{n+1}, ' class='latex' /></p><p>
but this is clearly false for large enough <img src='http://s0.wp.com/latex.php?latex=%7Bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{n}' title='{n}' class='latex' /> and small enough <img src='http://s0.wp.com/latex.php?latex=%7B%5Cepsilon%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;epsilon}' title='{&#92;epsilon}' class='latex' />. This contradiction proves <img src='http://s0.wp.com/latex.php?latex=%7Bd+%5Cleq+2%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d &#92;leq 2}' title='{d &#92;leq 2}' class='latex' /> and hence the theorem. <img src='http://s0.wp.com/latex.php?latex=%5CBox&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;Box' title='&#92;Box' class='latex' /></p><p>
As the proof shows, there is actually a fair bit of &#8220;slack&#8221; in the counting. Hence the theorem can be extended to add conditions on the primes: we can further restrict the sizes of the primes, their residues modulo small numbers, and other properties. Indeed the counting makes this all close to working with <img src='http://s0.wp.com/latex.php?latex=%7Bd%3D1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d=1}' title='{d=1}' class='latex' />. That takes us back within the sphere of Camille de Polignac&#8217;s question as well.</p><p><p><H2> An Obstinate Question? </H2></p><p>
For <img src='http://s0.wp.com/latex.php?latex=%7Bd%3D1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{d=1}' title='{d=1}' class='latex' /> the question again comes in &#8220;every&#8221; (with the qualifier &#8220;large enough&#8221;) and &#8220;infinitely many&#8221; flavors:</p><blockquote><ol><li>
Is it true that for every large enough prime <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' />, there is a prime <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> such that <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> differ in one bit, or at least differ by a power of <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />? (no)</p><li>
Are there infinitely many primes <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> such that for some other prime <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' />, <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> and <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> differ in one bit, or at least <img src='http://s0.wp.com/latex.php?latex=%7Bq+-+p%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{q - p}' title='{q - p}' class='latex' /> is a power of <img src='http://s0.wp.com/latex.php?latex=%7B2%7D&amp;bg=e8e8e8&amp;fg=000000&amp;s=0' alt='{2}' title='{2}' class='latex' />? (open)
</ol></blockquote><p>
Note that <img src='http://s0.wp.com/latex.php?latex=%7Bq+%3E+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &gt; p}' title='{q &gt; p}' class='latex' /> is allowed. Without that condition we&#8217;d have already the counterexample <img src='http://s0.wp.com/latex.php?latex=%7Bp+%3D+127%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p = 127}' title='{p = 127}' class='latex' /> to Camille&#8217;s conjecture. Incidentally, counterexamples to Camille are called <em>obstinate numbers</em>, and there are <a href=\"http://sprott.physics.wisc.edu/pickover/obstinate.html\">various</a><a href=\"http://danieldockery.com/b/2002/obstinate-numbers/\">pages</a> devoted to enumerating them. A case where <img src='http://s0.wp.com/latex.php?latex=%7Bq+%3E+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &gt; p}' title='{q &gt; p}' class='latex' /> is important is <img src='http://s0.wp.com/latex.php?latex=%7Bp+%3D+113%2C%5C%21921%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p = 113,&#92;!921}' title='{p = 113,&#92;!921}' class='latex' />: <img src='http://s0.wp.com/latex.php?latex=%7Bq+%3D+p+%2B+2%5E%7B141%7D%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q = p + 2^{141}}' title='{q = p + 2^{141}}' class='latex' /> is prime. Of course whenever <img src='http://s0.wp.com/latex.php?latex=%7Bq+%5Cgeq+2p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &#92;geq 2p}' title='{q &#92;geq 2p}' class='latex' /> such a pair also has Hamming distance <img src='http://s0.wp.com/latex.php?latex=%7B1%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{1}' title='{1}' class='latex' />, using leading <img src='http://s0.wp.com/latex.php?latex=%7B0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{0}' title='{0}' class='latex' />&#8216;s to pad <img src='http://s0.wp.com/latex.php?latex=%7Bp%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p}' title='{p}' class='latex' /> to the same length as <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' />.</p><p>
In 1964, Fred Cohen and John Selfridge noted that allowing <img src='http://s0.wp.com/latex.php?latex=%7Bq+%3E+p%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q &gt; p}' title='{q &gt; p}' class='latex' /> made Camille&#8217;s idea good for every odd number up to <img src='http://s0.wp.com/latex.php?latex=%7B262%2C144%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{262,144}' title='{262,144}' class='latex' />. However, they <a href=\"http://www.ams.org/journals/mcom/1975-29-129/S0025-5718-1975-0376583-0/S0025-5718-1975-0376583-0.pdf\">proved</a> that the prime 	</p><p align=\"center\"><img src='http://s0.wp.com/latex.php?latex=%5Cdisplaystyle+p+%3D+47%2C%5C%21867%2C%5C%21742%2C%5C%21232%2C%5C%21066%2C%5C%21880%2C%5C%21047%2C%5C%21611%2C%5C%21079&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='&#92;displaystyle p = 47,&#92;!867,&#92;!742,&#92;!232,&#92;!066,&#92;!880,&#92;!047,&#92;!611,&#92;!079' title='&#92;displaystyle p = 47,&#92;!867,&#92;!742,&#92;!232,&#92;!066,&#92;!880,&#92;!047,&#92;!611,&#92;!079' class='latex' /></p><p>
cannot be written as <img src='http://s0.wp.com/latex.php?latex=%7Bp+%3D+q+%5Cpm+2%5Ek%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p = q &#92;pm 2^k}' title='{p = q &#92;pm 2^k}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> prime. Moreover, they gave an infinite arithmetic progression of numbers <img src='http://s0.wp.com/latex.php?latex=%7Ba+%2B+bn%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a + bn}' title='{a + bn}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7Ba%2Cb%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{a,b}' title='{a,b}' class='latex' /> coprime that cannot be written as <img src='http://s0.wp.com/latex.php?latex=%7B%5Cpm+2%5Ek+%5Cpm+q%5El%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{&#92;pm 2^k &#92;pm q^l}' title='{&#92;pm 2^k &#92;pm q^l}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7Bq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{q}' title='{q}' class='latex' /> prime. Since every such progression contains infinitely many primes, this finally lays question 1 to rest even with the &#8220;large enough&#8221; modifier. Zhi-wei Sun himself made good on something stated in their abstract but not proved in their paper, in a 2000 <a href=\"http://www.ams.org/journals/mcom/1975-29-129/S0025-5718-1975-0376583-0/S0025-5718-1975-0376583-0.pdf\">paper</a> giving an infinite arithmetic progression of numbers that cannot be written as <img src='http://s0.wp.com/latex.php?latex=%7Bp%5Ek+%5Cpm+q%5El%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p^k &#92;pm q^l}' title='{p^k &#92;pm q^l}' class='latex' /> with <img src='http://s0.wp.com/latex.php?latex=%7Bp%2Cq%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{p,q}' title='{p,q}' class='latex' /> prime and <img src='http://s0.wp.com/latex.php?latex=%7Bk%2Cl+%3E+0%7D&amp;bg=ffffff&amp;fg=000000&amp;s=0' alt='{k,l &gt; 0}' title='{k,l &gt; 0}' class='latex' />. </p><p>
All this still, however, leaves the second question open. We would like to prove it, indeed find moderately dense sets of such pairs.</p><p><p><H2> Open Problems </H2></p><p><p>
Are there infinitely many pairs of primes that differ in just one bit?</p><p>
We note that there are people who have thought about connections between coding theory and number theory. For example, Toyokazu Hiramatsu and G&uuml;nter K&ouml;hler have a whole <a href=\"http://www.amazon.com/Coding-Theory-Number-Mathematics-Applications/dp/1402012039\">monograph</a> titled <i>Coding Theory and Number Theory</i> on this topic. But the idea there is to apply number theory to shed light on the structure of codes. Elliptic curves, for instance, can be used to construct certain interesting codes. We are interested in the impact of coding theory on number theory, such as the distribution of important sets like the primes, which in turn may have applications in computing theory.</p><p>
[$2^k + 2^l$ changed to $2^k \\pm 2^l$, fixed ceiling to floor in Hamming bound]</p><br /><a rel=\"nofollow\" href=\"http://feeds.wordpress.com/1.0/gocomments/rjlipton.wordpress.com/11351/\"><img alt=\" \" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/rjlipton.wordpress.com/11351/\" /></a><img alt=\" \" border=\"0\" src=\"http://stats.wordpress.com/b.gif?host=rjlipton.wordpress.com&#038;blog=6472207&#038;post=11351&#038;subd=rjlipton&#038;ref=&#038;feed=1\" width=\"1\" height=\"1\" />") (wfw:commentRss nil "http://rjlipton.wordpress.com/2014/03/09/codes-meet-numbers/feed/") (slash:comments nil "6") (media:content ((url . "http://2.gravatar.com/avatar/b5d34e23e23268dbd35f2da17acaaad5?s=96&d=identicon&r=G") (medium . "image")) (media:title ((type . "html")) "dickken")) (media:content ((url . "http://rjlipton.files.wordpress.com/2014/03/suninsun.png") (medium . "image")) (media:title ((type . "html")) "SunInSun"))))))